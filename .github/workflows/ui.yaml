name: UI CI

on:
  push:
    branches:
      - '**'
    paths:
      - 'ui/**'
      - '.github/workflows/ui.yaml'
      - '!ui/nginx/**'
      - '!ui/docker-entrypoint.sh'
      - '!ui/base.Dockerfile'
      - '!ui/base.Dockerfile.dockerignore'
    tags:
      - '*'
  pull_request:
    branches:
      - master
      - develop
      - apm
      - automations
    paths:
      - 'ui/**'
      - '!ui/nginx/**'
      - '!ui/docker-entrypoint.sh'
      - '!ui/base.Dockerfile'
      - '!ui/base.Dockerfile.dockerignore'

jobs:
  ui:
    runs-on: ubuntu-18.04

    # name: Node ${{ matrix.node-version }}

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Use Node.js 12.16.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.16.x

    # https://github.com/actions/cache/blob/master/examples.md#node---yarn
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache Node.js modules
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      uses: actions/cache@v1
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-ui-${{ hashFiles('ui/**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-ui-${{ hashFiles('ui/**/yarn.lock') }}
          ${{ runner.os }}-yarn-ui-
          ${{ runner.os }}-yarn-

    - name: Install
      run: |
        cd ui
        yarn install

    - name: Lint
      run: |
        cd ui
        yarn lint

    - name: Tsc
      run: |
        cd ui
        yarn tsc

    - name: Build
      run: |
        cd ui
        yarn build

    - name: Build docker image [push]
      if: github.event_name == 'push' && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/apm' || github.ref == 'refs/heads/automations')
      run: |
        cd ui
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        docker build -t erxes/erxes:${GITHUB_REF#refs/heads/} -f Dockerfile .
        docker push erxes/erxes:${GITHUB_REF#refs/heads/}

    - name: Build docker image [tag]
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
      env:
        BASE_IMAGE: erxes/erxes:base-1.18-alpine
      run: |
        cd ui
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        DOCKER_BUILDKIT=1 docker --build-arg BASE_IMAGE=$BASE_IMAGE build -t erxes/erxes:${GITHUB_REF#refs/tags/} -f Dockerfile .
        docker push erxes/erxes:${GITHUB_REF#refs/tags/}
