/* Imports for global scope */

Log = Package.logging.Log;
ECMAScript = Package.ecmascript.ECMAScript;
Tracker = Package.tracker.Tracker;
Deps = Package.tracker.Deps;
EJSON = Package.ejson.EJSON;
check = Package.check.check;
Match = Package.check.Match;
_ = Package.underscore._;
ValidatedMethod = Package['mdg:validated-method'].ValidatedMethod;
ValidationError = Package['mdg:validation-error'].ValidationError;
FlowRouter = Package['kadira:flow-router'].FlowRouter;
SimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;
MongoObject = Package['aldeed:simple-schema'].MongoObject;
Factory = Package['dburles:factory'].Factory;
SyncedCron = Package['percolate:synced-cron'].SyncedCron;
chai = Package['practicalmeteor:chai'].chai;
assert = Package['practicalmeteor:chai'].assert;
expect = Package['practicalmeteor:chai'].expect;
should = Package['practicalmeteor:chai'].should;
Roles = Package['alanning:roles'].Roles;
Picker = Package['meteorhacks:picker'].Picker;
HTTP = Package.http.HTTP;
HTTPInternals = Package.http.HTTPInternals;
Meteor = Package.meteor.Meteor;
global = Package.meteor.global;
meteorEnv = Package.meteor.meteorEnv;
WebApp = Package.webapp.WebApp;
main = Package.webapp.main;
WebAppInternals = Package.webapp.WebAppInternals;
DDP = Package['ddp-client'].DDP;
DDPServer = Package['ddp-server'].DDPServer;
meteorInstall = Package.modules.meteorInstall;
Buffer = Package.modules.Buffer;
process = Package.modules.process;
Symbol = Package['ecmascript-runtime'].Symbol;
Map = Package['ecmascript-runtime'].Map;
Set = Package['ecmascript-runtime'].Set;
meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
Promise = Package.promise.Promise;
Accounts = Package['accounts-base'].Accounts;
Autoupdate = Package.autoupdate.Autoupdate;

