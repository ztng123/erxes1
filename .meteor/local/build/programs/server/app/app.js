var require = meteorInstall({"imports":{"api":{"integrations":{"social":{"server":{"facebook.js":["babel-runtime/helpers/extends","babel-runtime/helpers/classCallCheck","babel-runtime/helpers/toConsumableArray","fbgraph","meteor/meteorhacks:picker","meteor/meteor","/imports/api/server/utils","/imports/api/conversations/conversations","/imports/api/conversations/messages","/imports/api/customers/customers","/imports/api/integrations/integrations","/imports/api/integrations/constants","/imports/api/conversations/constants",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/integrations/social/server/facebook.js                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = require("babel-runtime/helpers/extends");                                                              //
                                                                                                                       //
var _extends3 = _interopRequireDefault(_extends2);                                                                     //
                                                                                                                       //
var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");                                                //
                                                                                                                       //
var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                                       //
                                                                                                                       //
var _toConsumableArray2 = require("babel-runtime/helpers/toConsumableArray");                                          //
                                                                                                                       //
var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);                                                 //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
module.export({                                                                                                        // 1
  graphRequest: function () {                                                                                          // 1
    return graphRequest;                                                                                               // 1
  },                                                                                                                   // 1
  getPageList: function () {                                                                                           // 1
    return getPageList;                                                                                                // 1
  },                                                                                                                   // 1
  SaveWebhookResponse: function () {                                                                                   // 1
    return SaveWebhookResponse;                                                                                        // 1
  },                                                                                                                   // 1
  receiveWebhookResponse: function () {                                                                                // 1
    return receiveWebhookResponse;                                                                                     // 1
  },                                                                                                                   // 1
  facebookReply: function () {                                                                                         // 1
    return facebookReply;                                                                                              // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var graph = void 0;                                                                                                    // 1
module.importSync("fbgraph", {                                                                                         // 1
  "default": function (v) {                                                                                            // 1
    graph = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Picker = void 0;                                                                                                   // 1
module.importSync("meteor/meteorhacks:picker", {                                                                       // 1
  Picker: function (v) {                                                                                               // 1
    Picker = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var apolloNotifyNewMessage = void 0;                                                                                   // 1
module.importSync("/imports/api/server/utils", {                                                                       // 1
  apolloNotifyNewMessage: function (v) {                                                                               // 1
    apolloNotifyNewMessage = v;                                                                                        // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var Conversations = void 0;                                                                                            // 1
module.importSync("/imports/api/conversations/conversations", {                                                        // 1
  Conversations: function (v) {                                                                                        // 1
    Conversations = v;                                                                                                 // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var Messages = void 0;                                                                                                 // 1
module.importSync("/imports/api/conversations/messages", {                                                             // 1
  Messages: function (v) {                                                                                             // 1
    Messages = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
var Customers = void 0;                                                                                                // 1
module.importSync("/imports/api/customers/customers", {                                                                // 1
  Customers: function (v) {                                                                                            // 1
    Customers = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 6);                                                                                                                 // 1
var Integrations = void 0;                                                                                             // 1
module.importSync("/imports/api/integrations/integrations", {                                                          // 1
  Integrations: function (v) {                                                                                         // 1
    Integrations = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 7);                                                                                                                 // 1
var KIND_CHOICES = void 0;                                                                                             // 1
module.importSync("/imports/api/integrations/constants", {                                                             // 1
  KIND_CHOICES: function (v) {                                                                                         // 1
    KIND_CHOICES = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 8);                                                                                                                 // 1
var CONVERSATION_STATUSES = void 0,                                                                                    // 1
    FACEBOOK_DATA_KINDS = void 0;                                                                                      // 1
module.importSync("/imports/api/conversations/constants", {                                                            // 1
  CONVERSATION_STATUSES: function (v) {                                                                                // 1
    CONVERSATION_STATUSES = v;                                                                                         // 1
  },                                                                                                                   // 1
  FACEBOOK_DATA_KINDS: function (v) {                                                                                  // 1
    FACEBOOK_DATA_KINDS = v;                                                                                           // 1
  }                                                                                                                    // 1
}, 9);                                                                                                                 // 1
var graphRequest = {                                                                                                   // 16
  base: function (method, path, accessToken) {                                                                         // 17
    // set access token                                                                                                // 18
    graph.setAccessToken(accessToken);                                                                                 // 19
    var wrappedGraph = Meteor.wrapAsync(graph[method], graph);                                                         // 21
                                                                                                                       //
    try {                                                                                                              // 23
      for (var _len = arguments.length, otherParams = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
        otherParams[_key - 3] = arguments[_key];                                                                       // 17
      }                                                                                                                // 23
                                                                                                                       //
      return wrappedGraph.apply(undefined, [path].concat((0, _toConsumableArray3.default)(otherParams))); // catch session expired or some other error
    } catch (e) {                                                                                                      // 27
      console.log(e.message); // eslint-disable-line no-console                                                        // 28
                                                                                                                       //
      return e.message;                                                                                                // 29
    }                                                                                                                  // 30
  },                                                                                                                   // 31
  get: function () {                                                                                                   // 33
    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {                       // 33
      args[_key2] = arguments[_key2];                                                                                  // 33
    }                                                                                                                  // 33
                                                                                                                       //
    return this.base.apply(this, ['get'].concat((0, _toConsumableArray3.default)(args)));                              // 34
  },                                                                                                                   // 35
  post: function () {                                                                                                  // 37
    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {                       // 37
      args[_key3] = arguments[_key3];                                                                                  // 37
    }                                                                                                                  // 37
                                                                                                                       //
    return this.base.apply(this, ['post'].concat((0, _toConsumableArray3.default)(args)));                             // 38
  }                                                                                                                    // 39
};                                                                                                                     // 16
                                                                                                                       //
var getPageList = function (accessToken) {                                                                             // 45
  var response = graphRequest.get('/me/accounts?limit=100', accessToken);                                              // 46
  return response.data.map(function (page) {                                                                           // 48
    return {                                                                                                           // 48
      id: page.id,                                                                                                     // 49
      name: page.name                                                                                                  // 50
    };                                                                                                                 // 48
  });                                                                                                                  // 48
};                                                                                                                     // 52
                                                                                                                       //
var SaveWebhookResponse = function () {                                                                                //
  function SaveWebhookResponse(userAccessToken, integration, data) {                                                   // 60
    (0, _classCallCheck3.default)(this, SaveWebhookResponse);                                                          // 60
    this.userAccessToken = userAccessToken;                                                                            // 61
    this.integration = integration; // received facebook data                                                          // 63
                                                                                                                       //
    this.data = data;                                                                                                  // 66
    this.currentPageId = null;                                                                                         // 68
  }                                                                                                                    // 69
                                                                                                                       //
  SaveWebhookResponse.prototype.start = function () {                                                                  //
    function start() {                                                                                                 //
      var _this = this;                                                                                                // 71
                                                                                                                       //
      var data = this.data;                                                                                            // 72
      var integration = this.integration;                                                                              // 73
                                                                                                                       //
      if (data.object === 'page') {                                                                                    // 75
        data.entry.forEach(function (entry) {                                                                          // 76
          // check receiving page is in integration's page list                                                        // 77
          if (!integration.facebookData.pageIds.includes(entry.id)) {                                                  // 78
            return;                                                                                                    // 79
          } // set current page                                                                                        // 80
                                                                                                                       //
                                                                                                                       //
          _this.currentPageId = entry.id; // receive new messenger message                                             // 83
                                                                                                                       //
          if (entry.messaging) {                                                                                       // 86
            _this.viaMessengerEvent(entry);                                                                            // 87
          } // receive new feed                                                                                        // 88
                                                                                                                       //
                                                                                                                       //
          if (entry.changes) {                                                                                         // 91
            _this.viaFeedEvent(entry);                                                                                 // 92
          }                                                                                                            // 93
        });                                                                                                            // 94
      }                                                                                                                // 95
    }                                                                                                                  // 96
                                                                                                                       //
    return start;                                                                                                      //
  }(); // via page messenger                                                                                           //
                                                                                                                       //
                                                                                                                       //
  SaveWebhookResponse.prototype.viaMessengerEvent = function () {                                                      //
    function viaMessengerEvent(entry) {                                                                                //
      var _this2 = this;                                                                                               // 99
                                                                                                                       //
      entry.messaging.forEach(function (messagingEvent) {                                                              // 100
        // someone sent us a message                                                                                   // 101
        if (messagingEvent.message) {                                                                                  // 102
          _this2.getOrCreateConversationByMessenger(messagingEvent);                                                   // 103
        }                                                                                                              // 104
      });                                                                                                              // 105
    }                                                                                                                  // 106
                                                                                                                       //
    return viaMessengerEvent;                                                                                          //
  }(); // wall post                                                                                                    //
                                                                                                                       //
                                                                                                                       //
  SaveWebhookResponse.prototype.viaFeedEvent = function () {                                                           //
    function viaFeedEvent(entry) {                                                                                     //
      var _this3 = this;                                                                                               // 109
                                                                                                                       //
      entry.changes.forEach(function (event) {                                                                         // 110
        // someone posted on our wall                                                                                  // 111
        _this3.getOrCreateConversationByFeed(event.value);                                                             // 112
      });                                                                                                              // 113
    }                                                                                                                  // 114
                                                                                                                       //
    return viaFeedEvent;                                                                                               //
  }(); // common get or create conversation helper using both in messenger and feed                                    //
                                                                                                                       //
                                                                                                                       //
  SaveWebhookResponse.prototype.getOrCreateConversation = function () {                                                //
    function getOrCreateConversation(params) {                                                                         //
      // extract params                                                                                                // 118
      var findSelector = params.findSelector,                                                                          // 117
          status = params.status,                                                                                      // 117
          senderId = params.senderId,                                                                                  // 117
          facebookData = params.facebookData,                                                                          // 117
          content = params.content,                                                                                    // 117
          attachments = params.attachments,                                                                            // 117
          msgFacebookData = params.msgFacebookData;                                                                    // 117
      var conversation = Conversations.findOne((0, _extends3.default)({}, findSelector)); // create new conversation   // 129
                                                                                                                       //
      if (!conversation) {                                                                                             // 134
        var conversationId = Conversations.insert({                                                                    // 135
          integrationId: this.integration._id,                                                                         // 136
          customerId: this.getOrCreateCustomer(senderId),                                                              // 137
          status: status,                                                                                              // 138
          content: content,                                                                                            // 139
          // save facebook infos                                                                                       // 141
          facebookData: (0, _extends3.default)({}, facebookData, {                                                     // 142
            pageId: this.currentPageId                                                                                 // 144
          })                                                                                                           // 142
        });                                                                                                            // 135
        conversation = Conversations.findOne(conversationId); // update conversation                                   // 147
      } else {                                                                                                         // 150
        Conversations.update({                                                                                         // 151
          _id: conversation._id                                                                                        // 152
        }, {                                                                                                           // 152
          $set: {                                                                                                      // 154
            // reset read history                                                                                      // 155
            readUserIds: [],                                                                                           // 156
            // if closed, reopen it                                                                                    // 158
            status: CONVERSATION_STATUSES.OPEN                                                                         // 159
          }                                                                                                            // 154
        });                                                                                                            // 153
      } // create new message                                                                                          // 163
                                                                                                                       //
                                                                                                                       //
      this.createMessage({                                                                                             // 166
        conversation: conversation,                                                                                    // 167
        userId: senderId,                                                                                              // 168
        content: content,                                                                                              // 169
        attachments: attachments,                                                                                      // 170
        facebookData: msgFacebookData                                                                                  // 171
      });                                                                                                              // 166
    }                                                                                                                  // 173
                                                                                                                       //
    return getOrCreateConversation;                                                                                    //
  }(); // get or create new conversation by feed info                                                                  //
                                                                                                                       //
                                                                                                                       //
  SaveWebhookResponse.prototype.getOrCreateConversationByFeed = function () {                                          //
    function getOrCreateConversationByFeed(value) {                                                                    //
      var commentId = value.comment_id; // collect only added actions                                                  // 177
                                                                                                                       //
      if (value.verb !== 'add') {                                                                                      // 180
        return;                                                                                                        // 181
      } // ignore duplicated action when like                                                                          // 182
                                                                                                                       //
                                                                                                                       //
      if (value.verb === 'add' && value.item === 'like') {                                                             // 185
        return;                                                                                                        // 186
      } // if this is already saved then ignore it                                                                     // 187
                                                                                                                       //
                                                                                                                       //
      if (commentId && Messages.findOne({                                                                              // 190
        'facebookData.commentId': commentId                                                                            // 190
      })) {                                                                                                            // 190
        return;                                                                                                        // 191
      }                                                                                                                // 192
                                                                                                                       //
      var senderName = value.sender_name; // sender_id is giving number values when feed and giving string value       // 194
      // when messenger. customer.facebookData.senderId has type of string so                                          // 197
      // convert it to string                                                                                          // 198
                                                                                                                       //
      var senderId = value.sender_id.toString();                                                                       // 199
      var messageText = value.message; // when photo, video share, there will be no text, so link instead              // 201
                                                                                                                       //
      if (!messageText && value.link) {                                                                                // 204
        messageText = value.link;                                                                                      // 205
      } // when situations like checkin, there will be no text and no link                                             // 206
      // if so ignore it                                                                                               // 209
                                                                                                                       //
                                                                                                                       //
      if (!messageText) {                                                                                              // 210
        return;                                                                                                        // 211
      } // value.post_id is returning different value even though same post                                            // 212
      // with the previous one. So fetch post info via graph api and                                                   // 215
      // save returned value. This value will always be the same                                                       // 216
                                                                                                                       //
                                                                                                                       //
      var postId = value.post_id; // get page access token                                                             // 217
                                                                                                                       //
      var response = graphRequest.get(this.currentPageId + "/?fields=access_token", this.userAccessToken); // acess token expired
                                                                                                                       //
      if (response === 'Error processing https request') {                                                             // 226
        return;                                                                                                        // 227
      } // get post object                                                                                             // 228
                                                                                                                       //
                                                                                                                       //
      response = graphRequest.get(postId, response.access_token);                                                      // 231
      postId = response.id;                                                                                            // 233
      var status = CONVERSATION_STATUSES.NEW; // if we are posting from our page, close it automatically               // 235
                                                                                                                       //
      if (this.integration.facebookData.pageIds.includes(senderId)) {                                                  // 238
        status = CONVERSATION_STATUSES.CLOSED;                                                                         // 239
      }                                                                                                                // 240
                                                                                                                       //
      this.getOrCreateConversation({                                                                                   // 242
        findSelector: {                                                                                                // 243
          'facebookData.kind': FACEBOOK_DATA_KINDS.FEED,                                                               // 244
          'facebookData.postId': postId                                                                                // 245
        },                                                                                                             // 243
        status: status,                                                                                                // 247
        senderId: senderId,                                                                                            // 248
        facebookData: {                                                                                                // 249
          kind: FACEBOOK_DATA_KINDS.FEED,                                                                              // 250
          senderId: senderId,                                                                                          // 251
          senderName: senderName,                                                                                      // 252
          postId: postId                                                                                               // 253
        },                                                                                                             // 249
        // message data                                                                                                // 256
        content: messageText,                                                                                          // 257
        msgFacebookData: {                                                                                             // 258
          senderId: senderId,                                                                                          // 259
          senderName: senderName,                                                                                      // 260
          item: value.item,                                                                                            // 261
          reactionType: value.reaction_type,                                                                           // 262
          photoId: value.photo_id,                                                                                     // 263
          videoId: value.video_id,                                                                                     // 264
          link: value.link                                                                                             // 265
        }                                                                                                              // 258
      });                                                                                                              // 242
    }                                                                                                                  // 268
                                                                                                                       //
    return getOrCreateConversationByFeed;                                                                              //
  }(); // get or create new conversation by page messenger                                                             //
                                                                                                                       //
                                                                                                                       //
  SaveWebhookResponse.prototype.getOrCreateConversationByMessenger = function () {                                     //
    function getOrCreateConversationByMessenger(event) {                                                               //
      var senderId = event.sender.id;                                                                                  // 272
      var senderName = event.sender.name;                                                                              // 273
      var recipientId = event.recipient.id;                                                                            // 274
      var messageText = event.message.text || 'attachment'; // collect attachment's url, type fields                   // 275
                                                                                                                       //
      var attachments = (event.message.attachments || []).map(function (attachment) {                                  // 278
        return {                                                                                                       // 278
          type: attachment.type,                                                                                       // 279
          url: attachment.payload ? attachment.payload.url : ''                                                        // 280
        };                                                                                                             // 278
      });                                                                                                              // 278
      this.getOrCreateConversation({                                                                                   // 283
        // try to find conversation by senderId, recipientId keys                                                      // 284
        findSelector: {                                                                                                // 285
          'facebookData.kind': FACEBOOK_DATA_KINDS.MESSENGER,                                                          // 286
          $or: [{                                                                                                      // 287
            'facebookData.senderId': senderId,                                                                         // 289
            'facebookData.recipientId': recipientId                                                                    // 290
          }, {                                                                                                         // 288
            'facebookData.senderId': recipientId,                                                                      // 293
            'facebookData.recipientId': senderId                                                                       // 294
          }]                                                                                                           // 292
        },                                                                                                             // 285
        status: CONVERSATION_STATUSES.NEW,                                                                             // 298
        senderId: senderId,                                                                                            // 299
        facebookData: {                                                                                                // 300
          kind: FACEBOOK_DATA_KINDS.MESSENGER,                                                                         // 301
          senderId: senderId,                                                                                          // 302
          senderName: senderName,                                                                                      // 303
          recipientId: recipientId                                                                                     // 304
        },                                                                                                             // 300
        // message data                                                                                                // 307
        content: messageText,                                                                                          // 308
        attachments: attachments,                                                                                      // 309
        msgFacebookData: {}                                                                                            // 310
      });                                                                                                              // 283
    }                                                                                                                  // 312
                                                                                                                       //
    return getOrCreateConversationByMessenger;                                                                         //
  }(); // get or create customer using facebook data                                                                   //
                                                                                                                       //
                                                                                                                       //
  SaveWebhookResponse.prototype.getOrCreateCustomer = function () {                                                    //
    function getOrCreateCustomer(fbUserId) {                                                                           //
      var integrationId = this.integration._id;                                                                        // 316
      var customer = Customers.findOne({                                                                               // 318
        integrationId: integrationId,                                                                                  // 319
        'facebookData.id': fbUserId                                                                                    // 320
      });                                                                                                              // 318
                                                                                                                       //
      if (customer) {                                                                                                  // 323
        return customer._id;                                                                                           // 324
      } // get page access token                                                                                       // 325
                                                                                                                       //
                                                                                                                       //
      var res = graphRequest.get(this.currentPageId + "/?fields=access_token", this.userAccessToken); // get user info
                                                                                                                       //
      res = graphRequest.get("/" + fbUserId, res.access_token); // when feed response will contain name field          // 331
      // when messeger response will not contain name field                                                            // 334
                                                                                                                       //
      var name = res.name || res.first_name + " " + res.last_name; // create customer                                  // 335
                                                                                                                       //
      return Customers.insert({                                                                                        // 338
        name: name,                                                                                                    // 339
        integrationId: integrationId,                                                                                  // 340
        facebookData: {                                                                                                // 341
          id: fbUserId,                                                                                                // 342
          profilePic: res.profile_pic                                                                                  // 343
        }                                                                                                              // 341
      });                                                                                                              // 338
    }                                                                                                                  // 346
                                                                                                                       //
    return getOrCreateCustomer;                                                                                        //
  }();                                                                                                                 //
                                                                                                                       //
  SaveWebhookResponse.prototype.createMessage = function () {                                                          //
    function createMessage(_ref) {                                                                                     //
      var conversation = _ref.conversation,                                                                            // 348
          userId = _ref.userId,                                                                                        // 348
          content = _ref.content,                                                                                      // 348
          attachments = _ref.attachments,                                                                              // 348
          facebookData = _ref.facebookData;                                                                            // 348
                                                                                                                       //
      if (conversation) {                                                                                              // 349
        // create new message                                                                                          // 350
        var messageId = Messages.insert({                                                                              // 351
          conversationId: conversation._id,                                                                            // 352
          customerId: this.getOrCreateCustomer(userId),                                                                // 353
          content: content,                                                                                            // 354
          attachments: attachments,                                                                                    // 355
          facebookData: facebookData,                                                                                  // 356
          internal: false                                                                                              // 357
        }); // notify subscription server new message                                                                  // 351
                                                                                                                       //
        apolloNotifyNewMessage(messageId);                                                                             // 361
        return messageId;                                                                                              // 363
      }                                                                                                                // 364
    }                                                                                                                  // 365
                                                                                                                       //
    return createMessage;                                                                                              //
  }();                                                                                                                 //
                                                                                                                       //
  return SaveWebhookResponse;                                                                                          //
}();                                                                                                                   //
                                                                                                                       //
var receiveWebhookResponse = function (app, data) {                                                                    // 371
  var selector = {                                                                                                     // 372
    kind: KIND_CHOICES.FACEBOOK,                                                                                       // 373
    'facebookData.appId': app.id                                                                                       // 374
  };                                                                                                                   // 372
  Integrations.find(selector).forEach(function (integration) {                                                         // 377
    // when new message or other kind of activity in page                                                              // 378
    var saveWebhookResponse = new SaveWebhookResponse(app.accessToken, integration, data);                             // 379
    saveWebhookResponse.start();                                                                                       // 381
  });                                                                                                                  // 382
};                                                                                                                     // 383
                                                                                                                       //
Meteor.settings.services.facebook.forEach(function (app) {                                                             // 385
  Picker.route("/service/facebook/" + app.id + "/webhook-callback", function (params, req, res) {                      // 386
    var query = params.query; // when the endpoint is registered as a webhook, it must echo back                       // 387
    // the 'hub.challenge' value it receives in the query arguments                                                    // 390
                                                                                                                       //
    if (query['hub.mode'] === 'subscribe' && query['hub.challenge']) {                                                 // 391
      if (query['hub.verify_token'] !== app.verifyToken) {                                                             // 392
        res.end('Verification token mismatch');                                                                        // 393
      }                                                                                                                // 394
                                                                                                                       //
      res.end(query['hub.challenge']);                                                                                 // 396
    }                                                                                                                  // 397
                                                                                                                       //
    res.statusCode = 200; // receive per app webhook response                                                          // 399
                                                                                                                       //
    receiveWebhookResponse(app, req.body);                                                                             // 402
    res.end('success');                                                                                                // 404
  });                                                                                                                  // 405
}); /*                                                                                                                 // 406
     * post reply to page conversation or comment to wall post                                                         //
     */                                                                                                                //
                                                                                                                       //
var facebookReply = function (conversation, text, messageId) {                                                         // 411
  var app = Meteor.settings.services.facebook.find(function (a) {                                                      // 412
    return a.id === conversation.integration().facebookData.appId;                                                     // 413
  }); // page access token                                                                                             // 413
                                                                                                                       //
  var response = graphRequest.get(conversation.facebookData.pageId + "/?fields=access_token", app.accessToken); // messenger reply
                                                                                                                       //
  if (conversation.facebookData.kind === FACEBOOK_DATA_KINDS.MESSENGER) {                                              // 423
    return graphRequest.post('me/messages', response.access_token, {                                                   // 424
      recipient: {                                                                                                     // 428
        id: conversation.facebookData.senderId                                                                         // 428
      },                                                                                                               // 428
      message: {                                                                                                       // 429
        text: text                                                                                                     // 429
      }                                                                                                                // 429
    }, function () {});                                                                                                // 427
  } // feed reply                                                                                                      // 433
                                                                                                                       //
                                                                                                                       //
  if (conversation.facebookData.kind === FACEBOOK_DATA_KINDS.FEED) {                                                   // 436
    var postId = conversation.facebookData.postId; // post reply                                                       // 437
                                                                                                                       //
    var commentResponse = graphRequest.post(postId + "/comments", response.access_token, {                             // 440
      message: text                                                                                                    // 441
    }); // save commentId in message object                                                                            // 440
                                                                                                                       //
    Messages.update({                                                                                                  // 445
      _id: messageId                                                                                                   // 445
    }, {                                                                                                               // 445
      $set: {                                                                                                          // 445
        'facebookData.commentId': commentResponse.id                                                                   // 445
      }                                                                                                                // 445
    });                                                                                                                // 445
  }                                                                                                                    // 446
                                                                                                                       //
  return null;                                                                                                         // 448
};                                                                                                                     // 449
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"index.js":["./routes","./twitter","./facebook","./methods",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/integrations/social/server/index.js                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.importSync("./routes");                                                                                         // 1
module.importSync("./twitter");                                                                                        // 1
module.importSync("./facebook");                                                                                       // 1
module.importSync("./methods");                                                                                        // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"methods.js":["meteor/meteor","meteor/check","meteor/mdg:validated-method","meteor/underscore","/imports/api/utils","../../integrations","../../constants","./twitter","./facebook",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/integrations/social/server/methods.js                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  addTwitter: function () {                                                                                            // 1
    return addTwitter;                                                                                                 // 1
  },                                                                                                                   // 1
  addFacebook: function () {                                                                                           // 1
    return addFacebook;                                                                                                // 1
  },                                                                                                                   // 1
  getFacebookAppList: function () {                                                                                    // 1
    return getFacebookAppList;                                                                                         // 1
  },                                                                                                                   // 1
  getFacebookPageList: function () {                                                                                   // 1
    return getFacebookPageList;                                                                                        // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var check = void 0;                                                                                                    // 1
module.importSync("meteor/check", {                                                                                    // 1
  check: function (v) {                                                                                                // 1
    check = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var ValidatedMethod = void 0;                                                                                          // 1
module.importSync("meteor/mdg:validated-method", {                                                                     // 1
  ValidatedMethod: function (v) {                                                                                      // 1
    ValidatedMethod = v;                                                                                               // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
                                                                                                                       //
var _ = void 0;                                                                                                        // 1
                                                                                                                       //
module.importSync("meteor/underscore", {                                                                               // 1
  _: function (v) {                                                                                                    // 1
    _ = v;                                                                                                             // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var ErxesMixin = void 0;                                                                                               // 1
module.importSync("/imports/api/utils", {                                                                              // 1
  ErxesMixin: function (v) {                                                                                           // 1
    ErxesMixin = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var Integrations = void 0;                                                                                             // 1
module.importSync("../../integrations", {                                                                              // 1
  Integrations: function (v) {                                                                                         // 1
    Integrations = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
var KIND_CHOICES = void 0;                                                                                             // 1
module.importSync("../../constants", {                                                                                 // 1
  KIND_CHOICES: function (v) {                                                                                         // 1
    KIND_CHOICES = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 6);                                                                                                                 // 1
var twitter = void 0;                                                                                                  // 1
module.importSync("./twitter", {                                                                                       // 1
  "default": function (v) {                                                                                            // 1
    twitter = v;                                                                                                       // 1
  }                                                                                                                    // 1
}, 7);                                                                                                                 // 1
var getPageList = void 0;                                                                                              // 1
module.importSync("./facebook", {                                                                                      // 1
  getPageList: function (v) {                                                                                          // 1
    getPageList = v;                                                                                                   // 1
  }                                                                                                                    // 1
}, 8);                                                                                                                 // 1
var addTwitter = new ValidatedMethod({                                                                                 // 12
  name: 'integrations.addTwitter',                                                                                     // 13
  mixins: [ErxesMixin],                                                                                                // 14
  validate: function (doc) {                                                                                           // 16
    check(doc, {                                                                                                       // 17
      brandId: String,                                                                                                 // 17
      queryParams: Object                                                                                              // 17
    });                                                                                                                // 17
  },                                                                                                                   // 18
  run: function (_ref) {                                                                                               // 20
    var brandId = _ref.brandId,                                                                                        // 20
        queryParams = _ref.queryParams;                                                                                // 20
    // authenticate via twitter and get logged in user's infos                                                         // 21
    twitter.authenticate(queryParams, function (doc) {                                                                 // 22
      var id = Integrations.insert(Object.assign(doc, {                                                                // 23
        brandId: brandId,                                                                                              // 23
        kind: KIND_CHOICES.TWITTER                                                                                     // 23
      })); // start tracking newly created twitter integration                                                         // 23
                                                                                                                       //
      var integration = Integrations.findOne({                                                                         // 26
        _id: id                                                                                                        // 26
      });                                                                                                              // 26
      twitter.trackIntegration(integration);                                                                           // 27
    });                                                                                                                // 28
  }                                                                                                                    // 29
});                                                                                                                    // 12
var addFacebook = new ValidatedMethod({                                                                                // 33
  name: 'integrations.addFacebook',                                                                                    // 34
  mixins: [ErxesMixin],                                                                                                // 35
  validate: function (doc) {                                                                                           // 37
    check(doc, {                                                                                                       // 38
      name: String,                                                                                                    // 39
      appId: String,                                                                                                   // 40
      brandId: String,                                                                                                 // 41
      pageIds: [String]                                                                                                // 42
    });                                                                                                                // 38
  },                                                                                                                   // 44
  run: function (_ref2) {                                                                                              // 46
    var name = _ref2.name,                                                                                             // 46
        appId = _ref2.appId,                                                                                           // 46
        brandId = _ref2.brandId,                                                                                       // 46
        pageIds = _ref2.pageIds;                                                                                       // 46
    return Integrations.insert({                                                                                       // 47
      name: name,                                                                                                      // 48
      kind: KIND_CHOICES.FACEBOOK,                                                                                     // 49
      brandId: brandId,                                                                                                // 50
      facebookData: {                                                                                                  // 51
        appId: appId,                                                                                                  // 52
        pageIds: pageIds                                                                                               // 53
      }                                                                                                                // 51
    });                                                                                                                // 47
  }                                                                                                                    // 56
});                                                                                                                    // 33
var getFacebookAppList = new ValidatedMethod({                                                                         // 60
  name: 'integrations.getFacebookAppList',                                                                             // 61
  mixins: [ErxesMixin],                                                                                                // 62
  validate: function () {},                                                                                            // 64
  run: function () {                                                                                                   // 66
    return _.map(Meteor.settings.services.facebook, function (app) {                                                   // 67
      return {                                                                                                         // 67
        id: app.id,                                                                                                    // 68
        name: app.name                                                                                                 // 69
      };                                                                                                               // 67
    });                                                                                                                // 67
  }                                                                                                                    // 71
});                                                                                                                    // 60
var getFacebookPageList = new ValidatedMethod({                                                                        // 75
  name: 'integrations.getFacebookPageList',                                                                            // 76
  mixins: [ErxesMixin],                                                                                                // 77
  validate: function (_ref3) {                                                                                         // 79
    var appId = _ref3.appId;                                                                                           // 79
    check(appId, String);                                                                                              // 80
  },                                                                                                                   // 81
  run: function (_ref4) {                                                                                              // 83
    var appId = _ref4.appId;                                                                                           // 83
                                                                                                                       //
    var app = _.find(Meteor.settings.services.facebook, function (a) {                                                 // 84
      return a.id === appId;                                                                                           // 84
    });                                                                                                                // 84
                                                                                                                       //
    if (!app) {                                                                                                        // 86
      return [];                                                                                                       // 87
    }                                                                                                                  // 88
                                                                                                                       //
    return getPageList(app.accessToken);                                                                               // 90
  }                                                                                                                    // 91
});                                                                                                                    // 75
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"routes.js":["body-parser","meteor/meteorhacks:picker",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/integrations/social/server/routes.js                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var bodyParser = void 0;                                                                                               // 1
module.importSync("body-parser", {                                                                                     // 1
  "default": function (v) {                                                                                            // 1
    bodyParser = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Picker = void 0;                                                                                                   // 1
module.importSync("meteor/meteorhacks:picker", {                                                                       // 1
  Picker: function (v) {                                                                                               // 1
    Picker = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
Picker.route('/service/oauth/twitter_callback', function (params, req, res) {                                          // 4
  var url = req.url.replace('service/', '');                                                                           // 5
  res.writeHead(301, {                                                                                                 // 7
    Location: "/settings/integrations" + url                                                                           // 7
  });                                                                                                                  // 7
  res.end();                                                                                                           // 8
});                                                                                                                    // 9
Picker.middleware(bodyParser.json());                                                                                  // 11
Picker.middleware(bodyParser.urlencoded({                                                                              // 12
  extended: false                                                                                                      // 12
}));                                                                                                                   // 12
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"twitter.js":["twit","social-oauth-client","meteor/meteor","/imports/api/server/utils","/imports/api/integrations/integrations","/imports/api/integrations/constants","/imports/api/conversations/conversations","/imports/api/conversations/messages","/imports/api/customers/customers","/imports/api/conversations/constants",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/integrations/social/server/twitter.js                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  getOrCreateCommonConversation: function () {                                                                         // 1
    return getOrCreateCommonConversation;                                                                              // 1
  },                                                                                                                   // 1
  getOrCreateDirectMessageConversation: function () {                                                                  // 1
    return getOrCreateDirectMessageConversation;                                                                       // 1
  },                                                                                                                   // 1
  TwitMap: function () {                                                                                               // 1
    return TwitMap;                                                                                                    // 1
  },                                                                                                                   // 1
  tweetReply: function () {                                                                                            // 1
    return tweetReply;                                                                                                 // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Twit = void 0;                                                                                                     // 1
module.importSync("twit", {                                                                                            // 1
  "default": function (v) {                                                                                            // 1
    Twit = v;                                                                                                          // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var soc = void 0;                                                                                                      // 1
module.importSync("social-oauth-client", {                                                                             // 1
  "default": function (v) {                                                                                            // 1
    soc = v;                                                                                                           // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var apolloNotifyNewMessage = void 0;                                                                                   // 1
module.importSync("/imports/api/server/utils", {                                                                       // 1
  apolloNotifyNewMessage: function (v) {                                                                               // 1
    apolloNotifyNewMessage = v;                                                                                        // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var Integrations = void 0;                                                                                             // 1
module.importSync("/imports/api/integrations/integrations", {                                                          // 1
  Integrations: function (v) {                                                                                         // 1
    Integrations = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var KIND_CHOICES = void 0;                                                                                             // 1
module.importSync("/imports/api/integrations/constants", {                                                             // 1
  KIND_CHOICES: function (v) {                                                                                         // 1
    KIND_CHOICES = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
var Conversations = void 0;                                                                                            // 1
module.importSync("/imports/api/conversations/conversations", {                                                        // 1
  Conversations: function (v) {                                                                                        // 1
    Conversations = v;                                                                                                 // 1
  }                                                                                                                    // 1
}, 6);                                                                                                                 // 1
var Messages = void 0;                                                                                                 // 1
module.importSync("/imports/api/conversations/messages", {                                                             // 1
  Messages: function (v) {                                                                                             // 1
    Messages = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 7);                                                                                                                 // 1
var Customers = void 0;                                                                                                // 1
module.importSync("/imports/api/customers/customers", {                                                                // 1
  Customers: function (v) {                                                                                            // 1
    Customers = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 8);                                                                                                                 // 1
var CONVERSATION_STATUSES = void 0;                                                                                    // 1
module.importSync("/imports/api/conversations/constants", {                                                            // 1
  CONVERSATION_STATUSES: function (v) {                                                                                // 1
    CONVERSATION_STATUSES = v;                                                                                         // 1
  }                                                                                                                    // 1
}, 9);                                                                                                                 // 1
                                                                                                                       //
/*                                                                                                                     // 12
 * get or create customer using twitter data                                                                           //
 */var getOrCreateCustomer = function (integrationId, user) {                                                          //
  var customer = Customers.findOne({                                                                                   // 16
    integrationId: integrationId,                                                                                      // 17
    'twitterData.id': user.id                                                                                          // 18
  });                                                                                                                  // 16
                                                                                                                       //
  if (customer) {                                                                                                      // 21
    return customer._id;                                                                                               // 22
  } // create customer                                                                                                 // 23
                                                                                                                       //
                                                                                                                       //
  return Customers.insert({                                                                                            // 26
    name: user.name,                                                                                                   // 27
    integrationId: integrationId,                                                                                      // 28
    twitterData: {                                                                                                     // 29
      id: user.id,                                                                                                     // 30
      idStr: user.id_str,                                                                                              // 31
      name: user.name,                                                                                                 // 32
      screenName: user.screen_name,                                                                                    // 33
      profileImageUrl: user.profile_image_url                                                                          // 34
    }                                                                                                                  // 29
  });                                                                                                                  // 26
}; /*                                                                                                                  // 37
    * create new message                                                                                               //
    */                                                                                                                 //
                                                                                                                       //
var createMessage = function (conversation, content, user) {                                                           // 42
  if (conversation) {                                                                                                  // 43
    // create new message                                                                                              // 44
    var messageId = Messages.insert({                                                                                  // 45
      conversationId: conversation._id,                                                                                // 46
      customerId: getOrCreateCustomer(conversation.integrationId, user),                                               // 47
      content: content,                                                                                                // 48
      internal: false                                                                                                  // 49
    }); // notify subscription server new message                                                                      // 45
                                                                                                                       //
    apolloNotifyNewMessage(messageId);                                                                                 // 53
    return messageId;                                                                                                  // 55
  }                                                                                                                    // 56
}; /*                                                                                                                  // 57
    * new message received in old converation, update status adn readUsers                                             //
    */                                                                                                                 //
                                                                                                                       //
var updateConversation = function (_id) {                                                                              // 62
  Conversations.update({                                                                                               // 63
    _id: _id                                                                                                           // 64
  }, {                                                                                                                 // 64
    $set: {                                                                                                            // 66
      // reset read state                                                                                              // 67
      readUserIds: [],                                                                                                 // 68
      // if closed, reopen                                                                                             // 70
      status: CONVERSATION_STATUSES.OPEN                                                                               // 71
    }                                                                                                                  // 66
  });                                                                                                                  // 65
}; /*                                                                                                                  // 75
    * create new conversation by regular tweet                                                                         //
    */                                                                                                                 //
                                                                                                                       //
var getOrCreateCommonConversation = function (data, integration) {                                                     // 80
  var conversation = void 0;                                                                                           // 81
                                                                                                                       //
  if (data.in_reply_to_status_id) {                                                                                    // 83
    // find conversation by tweet id                                                                                   // 84
    conversation = Conversations.findOne({                                                                             // 85
      'twitterData.id': data.in_reply_to_status_id                                                                     // 86
    }); // if closed, reopen it                                                                                        // 85
                                                                                                                       //
    updateConversation(conversation._id); // create new conversation                                                   // 90
  } else {                                                                                                             // 93
    var conversationId = Conversations.insert({                                                                        // 94
      content: data.text,                                                                                              // 95
      integrationId: integration._id,                                                                                  // 96
      customerId: getOrCreateCustomer(integration._id, data.user),                                                     // 97
      status: CONVERSATION_STATUSES.NEW,                                                                               // 98
      // save tweet id                                                                                                 // 100
      twitterData: {                                                                                                   // 101
        id: data.id,                                                                                                   // 102
        idStr: data.id_str,                                                                                            // 103
        screenName: data.user.screen_name,                                                                             // 104
        isDirectMessage: false                                                                                         // 105
      }                                                                                                                // 101
    });                                                                                                                // 94
    conversation = Conversations.findOne(conversationId);                                                              // 109
  } // create new message                                                                                              // 110
                                                                                                                       //
                                                                                                                       //
  return createMessage(conversation, data.text, data.user);                                                            // 113
};                                                                                                                     // 114
                                                                                                                       //
var getOrCreateDirectMessageConversation = function (data, integration) {                                              // 119
  var conversation = Conversations.findOne({                                                                           // 120
    'twitterData.isDirectMessage': true,                                                                               // 121
    $or: [{                                                                                                            // 122
      'twitterData.directMessage.senderId': data.sender_id,                                                            // 124
      'twitterData.directMessage.recipientId': data.recipient_id                                                       // 125
    }, {                                                                                                               // 123
      'twitterData.directMessage.senderId': data.recipient_id,                                                         // 128
      'twitterData.directMessage.recipientId': data.sender_id                                                          // 129
    }]                                                                                                                 // 127
  });                                                                                                                  // 120
                                                                                                                       //
  if (conversation) {                                                                                                  // 134
    // if closed, reopen it                                                                                            // 135
    updateConversation(conversation._id); // create new conversation                                                   // 136
  } else {                                                                                                             // 139
    var conversationId = Conversations.insert({                                                                        // 140
      content: data.text,                                                                                              // 141
      integrationId: integration._id,                                                                                  // 142
      customerId: getOrCreateCustomer(integration._id, data.sender),                                                   // 143
      status: CONVERSATION_STATUSES.NEW,                                                                               // 144
      // save tweet id                                                                                                 // 146
      twitterData: {                                                                                                   // 147
        id: data.id,                                                                                                   // 148
        idStr: data.id_str,                                                                                            // 149
        screenName: data.sender.screen_name,                                                                           // 150
        isDirectMessage: true,                                                                                         // 151
        directMessage: {                                                                                               // 152
          senderId: data.sender_id,                                                                                    // 153
          senderIdStr: data.sender_id_str,                                                                             // 154
          recipientId: data.recipient_id,                                                                              // 155
          recipientIdStr: data.recipient_id_str                                                                        // 156
        }                                                                                                              // 152
      }                                                                                                                // 147
    });                                                                                                                // 140
    conversation = Conversations.findOne(conversationId);                                                              // 160
  } // create new message                                                                                              // 161
                                                                                                                       //
                                                                                                                       //
  return createMessage(conversation, data.text, data.sender);                                                          // 164
};                                                                                                                     // 165
                                                                                                                       //
var TwitMap = {};                                                                                                      // 168
                                                                                                                       //
var trackIntegration = function (integration) {                                                                        // 170
  var integrationUserId = integration.twitterData.id;                                                                  // 171
  var _Meteor$settings$serv = Meteor.settings.services.twitter,                                                        // 170
      consumerKey = _Meteor$settings$serv.consumerKey,                                                                 // 170
      consumerSecret = _Meteor$settings$serv.consumerSecret; // Twit instance                                          // 170
                                                                                                                       //
  var twit = new Twit({                                                                                                // 176
    consumer_key: consumerKey,                                                                                         // 177
    consumer_secret: consumerSecret,                                                                                   // 178
    access_token: integration.twitterData.token,                                                                       // 179
    access_token_secret: integration.twitterData.tokenSecret                                                           // 180
  }); // save twit instance                                                                                            // 176
                                                                                                                       //
  TwitMap[integration._id] = twit; // create stream                                                                    // 184
                                                                                                                       //
  var stream = twit.stream('user'); // listen for timeline                                                             // 187
                                                                                                                       //
  stream.on('tweet', Meteor.bindEnvironment(function (data) {                                                          // 190
    // When situations like integration is deleted but trackIntegration                                                // 193
    // version of that integration is still running, new conversations being                                           // 194
    // created using non existing integrationId                                                                        // 195
    if (!Integrations.findOne({                                                                                        // 196
      _id: integration._id                                                                                             // 196
    })) {                                                                                                              // 196
      return null;                                                                                                     // 197
    } // if user is replying to some tweet                                                                             // 198
                                                                                                                       //
                                                                                                                       //
    if (data.in_reply_to_status_id) {                                                                                  // 201
      var conversation = Conversations.findOne({                                                                       // 202
        'twitterData.id': data.in_reply_to_status_id                                                                   // 203
      }); // and that tweet must exists                                                                                // 202
                                                                                                                       //
      if (conversation) {                                                                                              // 207
        return getOrCreateCommonConversation(data, integration);                                                       // 208
      }                                                                                                                // 209
    }                                                                                                                  // 210
                                                                                                                       //
    data.entities.user_mentions.forEach(function (mention) {                                                           // 212
      // listen for only mentioned tweets                                                                              // 213
      if (mention.id === integrationUserId) {                                                                          // 214
        getOrCreateCommonConversation(data, integration);                                                              // 215
      }                                                                                                                // 216
    });                                                                                                                // 217
    return null;                                                                                                       // 219
  })); // listen for direct messages                                                                                   // 220
                                                                                                                       //
  stream.on('direct_message', Meteor.bindEnvironment(function (data) {                                                 // 224
    // When situations like integration is deleted but trackIntegration                                                // 227
    // version of that integration is still running, new conversations being                                           // 228
    // created using non existing integrationId                                                                        // 229
    if (!Integrations.findOne({                                                                                        // 230
      _id: integration._id                                                                                             // 230
    })) {                                                                                                              // 230
      return;                                                                                                          // 231
    }                                                                                                                  // 232
                                                                                                                       //
    getOrCreateDirectMessageConversation(data.direct_message, integration);                                            // 234
  }));                                                                                                                 // 235
}; // track all twitter integrations for the first time                                                                // 237
                                                                                                                       //
                                                                                                                       //
Integrations.find({                                                                                                    // 240
  kind: KIND_CHOICES.TWITTER                                                                                           // 240
}).forEach(function (integration) {                                                                                    // 240
  trackIntegration(integration);                                                                                       // 241
});                                                                                                                    // 242
                                                                                                                       //
var postCallback = function (error) {                                                                                  // 244
  if (error) {                                                                                                         // 245
    throw Error(error.message);                                                                                        // 246
  }                                                                                                                    // 247
}; /*                                                                                                                  // 248
    * post reply to twitter                                                                                            //
    */                                                                                                                 //
                                                                                                                       //
var tweetReply = function (conversation, text) {                                                                       // 253
  var twit = TwitMap[conversation.integrationId];                                                                      // 254
  var twitterData = conversation.twitterData; // send direct message                                                   // 255
                                                                                                                       //
  if (conversation.twitterData.isDirectMessage) {                                                                      // 258
    return twit.post('direct_messages/new', {                                                                          // 259
      user_id: twitterData.directMessage.senderIdStr,                                                                  // 262
      text: text                                                                                                       // 263
    }, Meteor.bindEnvironment(postCallback));                                                                          // 261
  } // send reply                                                                                                      // 267
                                                                                                                       //
                                                                                                                       //
  return twit.post('statuses/update', {                                                                                // 270
    status: "@" + twitterData.screenName + " " + text,                                                                 // 273
    // replying tweet id                                                                                               // 275
    in_reply_to_status_id: twitterData.idStr                                                                           // 276
  }, Meteor.bindEnvironment(postCallback));                                                                            // 272
};                                                                                                                     // 280
                                                                                                                       //
// twitter oauth ===============                                                                                       // 282
var _Meteor$settings$serv2 = Meteor.settings.services.twitter,                                                         //
    consumerKey = _Meteor$settings$serv2.consumerKey,                                                                  //
    consumerSecret = _Meteor$settings$serv2.consumerSecret,                                                            //
    redirectUrl = _Meteor$settings$serv2.redirectUrl;                                                                  //
var socTwitter = new soc.Twitter({                                                                                     // 284
  CONSUMER_KEY: consumerKey,                                                                                           // 285
  CONSUMER_SECRET: consumerSecret,                                                                                     // 286
  REDIRECT_URL: redirectUrl                                                                                            // 287
});                                                                                                                    // 284
Meteor.methods({                                                                                                       // 290
  'integrations.getTwitterAuthorizeUrl': function () {                                                                 // 291
    return socTwitter.getAuthorizeUrl();                                                                               // 291
  }                                                                                                                    // 291
});                                                                                                                    // 290
module.export("default", exports.default = {                                                                           // 1
  trackIntegration: trackIntegration,                                                                                  // 295
  tweetReply: tweetReply,                                                                                              // 296
  soc: socTwitter,                                                                                                     // 297
  authenticate: function (queryParams, callback) {                                                                     // 299
    // after user clicked authenticate button                                                                          // 300
    socTwitter.callback({                                                                                              // 301
      query: queryParams                                                                                               // 301
    }).then(Meteor.bindEnvironment(function (data) {                                                                   // 301
      // return integration info                                                                                       // 303
      callback({                                                                                                       // 304
        name: data.info.name,                                                                                          // 305
        twitterData: {                                                                                                 // 306
          id: data.info.id,                                                                                            // 307
          token: data.tokens.auth.token,                                                                               // 308
          tokenSecret: data.tokens.auth.token_secret                                                                   // 309
        }                                                                                                              // 306
      });                                                                                                              // 304
    }));                                                                                                               // 312
  }                                                                                                                    // 314
});                                                                                                                    // 294
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"social.js":["meteor/aldeed:simple-schema",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/integrations/social/social.js                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  twitterSchema: function () {                                                                                         // 1
    return twitterSchema;                                                                                              // 1
  },                                                                                                                   // 1
  facebookSchema: function () {                                                                                        // 1
    return facebookSchema;                                                                                             // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var SimpleSchema = void 0;                                                                                             // 1
module.importSync("meteor/aldeed:simple-schema", {                                                                     // 1
  SimpleSchema: function (v) {                                                                                         // 1
    SimpleSchema = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var twitterSchema = new SimpleSchema({                                                                                 // 4
  id: {                                                                                                                // 5
    type: Number                                                                                                       // 6
  },                                                                                                                   // 5
  token: {                                                                                                             // 8
    type: String                                                                                                       // 9
  },                                                                                                                   // 8
  tokenSecret: {                                                                                                       // 11
    type: String                                                                                                       // 12
  }                                                                                                                    // 11
});                                                                                                                    // 4
var facebookSchema = new SimpleSchema({                                                                                // 17
  appId: {                                                                                                             // 18
    type: String                                                                                                       // 19
  },                                                                                                                   // 18
  pageIds: {                                                                                                           // 21
    type: [String]                                                                                                     // 22
  }                                                                                                                    // 21
});                                                                                                                    // 17
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"server":{"methods.js":["meteor/meteor","meteor/check","meteor/mdg:validated-method","/imports/api/utils","/imports/api/conversations/conversations","/imports/api/conversations/messages","/imports/api/customers/customers","/imports/api/channels/channels","../integrations","../constants",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/integrations/server/methods.js                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  addMessenger: function () {                                                                                          // 1
    return addMessenger;                                                                                               // 1
  },                                                                                                                   // 1
  editMessenger: function () {                                                                                         // 1
    return editMessenger;                                                                                              // 1
  },                                                                                                                   // 1
  addForm: function () {                                                                                               // 1
    return addForm;                                                                                                    // 1
  },                                                                                                                   // 1
  editForm: function () {                                                                                              // 1
    return editForm;                                                                                                   // 1
  },                                                                                                                   // 1
  remove: function () {                                                                                                // 1
    return remove;                                                                                                     // 1
  },                                                                                                                   // 1
  saveMessengerApperance: function () {                                                                                // 1
    return saveMessengerApperance;                                                                                     // 1
  },                                                                                                                   // 1
  saveMessengerConfigs: function () {                                                                                  // 1
    return saveMessengerConfigs;                                                                                       // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Match = void 0,                                                                                                    // 1
    check = void 0;                                                                                                    // 1
module.importSync("meteor/check", {                                                                                    // 1
  Match: function (v) {                                                                                                // 1
    Match = v;                                                                                                         // 1
  },                                                                                                                   // 1
  check: function (v) {                                                                                                // 1
    check = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var ValidatedMethod = void 0;                                                                                          // 1
module.importSync("meteor/mdg:validated-method", {                                                                     // 1
  ValidatedMethod: function (v) {                                                                                      // 1
    ValidatedMethod = v;                                                                                               // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var ErxesMixin = void 0;                                                                                               // 1
module.importSync("/imports/api/utils", {                                                                              // 1
  ErxesMixin: function (v) {                                                                                           // 1
    ErxesMixin = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var Conversations = void 0;                                                                                            // 1
module.importSync("/imports/api/conversations/conversations", {                                                        // 1
  Conversations: function (v) {                                                                                        // 1
    Conversations = v;                                                                                                 // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var Messages = void 0;                                                                                                 // 1
module.importSync("/imports/api/conversations/messages", {                                                             // 1
  Messages: function (v) {                                                                                             // 1
    Messages = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
var Customers = void 0;                                                                                                // 1
module.importSync("/imports/api/customers/customers", {                                                                // 1
  Customers: function (v) {                                                                                            // 1
    Customers = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 6);                                                                                                                 // 1
var Channels = void 0;                                                                                                 // 1
module.importSync("/imports/api/channels/channels", {                                                                  // 1
  Channels: function (v) {                                                                                             // 1
    Channels = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 7);                                                                                                                 // 1
var Integrations = void 0,                                                                                             // 1
    messengerSchema = void 0,                                                                                          // 1
    formSchema = void 0;                                                                                               // 1
module.importSync("../integrations", {                                                                                 // 1
  Integrations: function (v) {                                                                                         // 1
    Integrations = v;                                                                                                  // 1
  },                                                                                                                   // 1
  messengerSchema: function (v) {                                                                                      // 1
    messengerSchema = v;                                                                                               // 1
  },                                                                                                                   // 1
  formSchema: function (v) {                                                                                           // 1
    formSchema = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 8);                                                                                                                 // 1
var KIND_CHOICES = void 0;                                                                                             // 1
module.importSync("../constants", {                                                                                    // 1
  KIND_CHOICES: function (v) {                                                                                         // 1
    KIND_CHOICES = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 9);                                                                                                                 // 1
var addMessenger = new ValidatedMethod({                                                                               // 13
  name: 'integrations.addMessenger',                                                                                   // 14
  mixins: [ErxesMixin],                                                                                                // 15
  validate: function (_ref) {                                                                                          // 17
    var doc = _ref.doc;                                                                                                // 17
    check(doc, {                                                                                                       // 18
      name: String,                                                                                                    // 18
      brandId: String                                                                                                  // 18
    });                                                                                                                // 18
  },                                                                                                                   // 19
  run: function (_ref2) {                                                                                              // 21
    var doc = _ref2.doc;                                                                                               // 21
    return Integrations.insert(Object.assign(doc, {                                                                    // 22
      kind: KIND_CHOICES.MESSENGER                                                                                     // 22
    }));                                                                                                               // 22
  }                                                                                                                    // 23
});                                                                                                                    // 13
var editMessenger = new ValidatedMethod({                                                                              // 27
  name: 'integrations.editMessenger',                                                                                  // 28
  mixins: [ErxesMixin],                                                                                                // 29
  validate: function (_ref3) {                                                                                         // 31
    var _id = _ref3._id,                                                                                               // 31
        doc = _ref3.doc;                                                                                               // 31
    check(_id, String);                                                                                                // 32
    check(doc, {                                                                                                       // 33
      name: String,                                                                                                    // 33
      brandId: String                                                                                                  // 33
    });                                                                                                                // 33
  },                                                                                                                   // 34
  run: function (_ref4) {                                                                                              // 36
    var _id = _ref4._id,                                                                                               // 36
        doc = _ref4.doc;                                                                                               // 36
    return Integrations.update({                                                                                       // 37
      _id: _id                                                                                                         // 37
    }, {                                                                                                               // 37
      $set: doc                                                                                                        // 37
    });                                                                                                                // 37
  }                                                                                                                    // 38
});                                                                                                                    // 27
                                                                                                                       //
var generateFormDoc = function (mainDoc, formDoc) {                                                                    // 41
  return Object.assign(mainDoc, {                                                                                      // 41
    kind: KIND_CHOICES.FORM,                                                                                           // 43
    formData: formDoc                                                                                                  // 44
  });                                                                                                                  // 42
}; // add form                                                                                                         // 41
                                                                                                                       //
                                                                                                                       //
var addForm = new ValidatedMethod({                                                                                    // 48
  name: 'integrations.addForm',                                                                                        // 49
  mixins: [ErxesMixin],                                                                                                // 50
  validate: function (_ref5) {                                                                                         // 52
    var mainDoc = _ref5.mainDoc,                                                                                       // 52
        formDoc = _ref5.formDoc;                                                                                       // 52
    check(mainDoc, {                                                                                                   // 53
      name: String,                                                                                                    // 53
      brandId: String,                                                                                                 // 53
      formId: String                                                                                                   // 53
    });                                                                                                                // 53
    check(formDoc, formSchema);                                                                                        // 54
  },                                                                                                                   // 55
  run: function (_ref6) {                                                                                              // 57
    var mainDoc = _ref6.mainDoc,                                                                                       // 57
        formDoc = _ref6.formDoc;                                                                                       // 57
    return Integrations.insert(generateFormDoc(mainDoc, formDoc));                                                     // 58
  }                                                                                                                    // 59
});                                                                                                                    // 48
var editForm = new ValidatedMethod({                                                                                   // 63
  name: 'integrations.editForm',                                                                                       // 64
  mixins: [ErxesMixin],                                                                                                // 65
  validate: function (_ref7) {                                                                                         // 67
    var _id = _ref7._id,                                                                                               // 67
        mainDoc = _ref7.mainDoc,                                                                                       // 67
        formDoc = _ref7.formDoc;                                                                                       // 67
    check(_id, String);                                                                                                // 68
    check(mainDoc, {                                                                                                   // 69
      name: String,                                                                                                    // 69
      brandId: String,                                                                                                 // 69
      formId: String                                                                                                   // 69
    });                                                                                                                // 69
    check(formDoc, formSchema);                                                                                        // 70
  },                                                                                                                   // 71
  run: function (_ref8) {                                                                                              // 73
    var _id = _ref8._id,                                                                                               // 73
        mainDoc = _ref8.mainDoc,                                                                                       // 73
        formDoc = _ref8.formDoc;                                                                                       // 73
    return Integrations.update({                                                                                       // 74
      _id: _id                                                                                                         // 74
    }, {                                                                                                               // 74
      $set: generateFormDoc(mainDoc, formDoc)                                                                          // 74
    });                                                                                                                // 74
  }                                                                                                                    // 75
});                                                                                                                    // 63
var remove = new ValidatedMethod({                                                                                     // 79
  name: 'integrations.remove',                                                                                         // 80
  mixins: [ErxesMixin],                                                                                                // 81
  validate: function (id) {                                                                                            // 83
    check(id, String);                                                                                                 // 84
  },                                                                                                                   // 85
  run: function (id) {                                                                                                 // 87
    // check whether or not used in channels                                                                           // 88
    if (Channels.find({                                                                                                // 89
      integrationIds: {                                                                                                // 89
        $in: [id]                                                                                                      // 89
      }                                                                                                                // 89
    }).count() > 0) {                                                                                                  // 89
      throw new Meteor.Error('integrations.remove.usedInChannel', 'You cannot delete this integration. It belongs to other channel.');
    } // conversations                                                                                                 // 94
                                                                                                                       //
                                                                                                                       //
    var conversations = Conversations.find({                                                                           // 97
      integrationId: id                                                                                                // 97
    }).fetch();                                                                                                        // 97
    var conversationIds = conversations.map(function (c) {                                                             // 98
      return c._id;                                                                                                    // 98
    }); // remove messages                                                                                             // 98
                                                                                                                       //
    Messages.remove({                                                                                                  // 101
      conversationId: {                                                                                                // 101
        $in: conversationIds                                                                                           // 101
      }                                                                                                                // 101
    }); // remove conversations                                                                                        // 101
                                                                                                                       //
    Conversations.remove({                                                                                             // 104
      integrationId: id                                                                                                // 104
    }); // remove customers                                                                                            // 104
                                                                                                                       //
    Customers.remove({                                                                                                 // 107
      integrationId: id                                                                                                // 107
    });                                                                                                                // 107
    return Integrations.remove(id);                                                                                    // 109
  }                                                                                                                    // 110
});                                                                                                                    // 79
var saveMessengerApperance = new ValidatedMethod({                                                                     // 113
  name: 'integrations.saveMessengerApperance',                                                                         // 114
  mixins: [ErxesMixin],                                                                                                // 115
  validate: function (_ref9) {                                                                                         // 117
    var _id = _ref9._id,                                                                                               // 117
        doc = _ref9.doc;                                                                                               // 117
    check(_id, String);                                                                                                // 118
    check(doc, {                                                                                                       // 119
      color: String,                                                                                                   // 120
      wallpaper: Match.Optional(String),                                                                               // 121
      logo: Match.Optional(String)                                                                                     // 122
    });                                                                                                                // 119
  },                                                                                                                   // 124
  run: function (_ref10) {                                                                                             // 126
    var _id = _ref10._id,                                                                                              // 126
        doc = _ref10.doc;                                                                                              // 126
    return Integrations.update({                                                                                       // 127
      _id: _id                                                                                                         // 127
    }, {                                                                                                               // 127
      $set: {                                                                                                          // 127
        uiOptions: doc                                                                                                 // 127
      }                                                                                                                // 127
    });                                                                                                                // 127
  }                                                                                                                    // 128
});                                                                                                                    // 113
var saveMessengerConfigs = new ValidatedMethod({                                                                       // 131
  name: 'integrations.saveMessengerConfigs',                                                                           // 132
  mixins: [ErxesMixin],                                                                                                // 133
  validate: function (_ref11) {                                                                                        // 135
    var _id = _ref11._id,                                                                                              // 135
        doc = _ref11.doc;                                                                                              // 135
    check(_id, String);                                                                                                // 136
    check(doc, messengerSchema);                                                                                       // 137
  },                                                                                                                   // 138
  run: function (_ref12) {                                                                                             // 140
    var _id = _ref12._id,                                                                                              // 140
        doc = _ref12.doc;                                                                                              // 140
    return Integrations.update({                                                                                       // 141
      _id: _id                                                                                                         // 141
    }, {                                                                                                               // 141
      $set: {                                                                                                          // 141
        messengerData: doc                                                                                             // 141
      }                                                                                                                // 141
    });                                                                                                                // 141
  }                                                                                                                    // 142
});                                                                                                                    // 131
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"constants.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/integrations/constants.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  KIND_CHOICES: function () {                                                                                          // 1
    return KIND_CHOICES;                                                                                               // 1
  },                                                                                                                   // 1
  FORM_LOAD_TYPES: function () {                                                                                       // 1
    return FORM_LOAD_TYPES;                                                                                            // 1
  },                                                                                                                   // 1
  FORM_SUCCESS_ACTIONS: function () {                                                                                  // 1
    return FORM_SUCCESS_ACTIONS;                                                                                       // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var KIND_CHOICES = {                                                                                                   // 1
  MESSENGER: 'messenger',                                                                                              // 2
  FORM: 'form',                                                                                                        // 3
  TWITTER: 'twitter',                                                                                                  // 4
  FACEBOOK: 'facebook',                                                                                                // 5
  ALL_LIST: ['messenger', 'form', 'twitter', 'facebook']                                                               // 6
};                                                                                                                     // 1
var FORM_LOAD_TYPES = {                                                                                                // 9
  SHOUTBOX: 'shoutbox',                                                                                                // 10
  POPUP: 'popup',                                                                                                      // 11
  EMBEDDED: 'embedded',                                                                                                // 12
  ALL_LIST: ['', 'shoutbox', 'popup', 'embedded']                                                                      // 13
};                                                                                                                     // 9
var FORM_SUCCESS_ACTIONS = {                                                                                           // 16
  EMAIL: 'email',                                                                                                      // 17
  REDIRECT: 'redirect',                                                                                                // 18
  ONPAGE: 'onPage',                                                                                                    // 19
  ALL_LIST: ['', 'email', 'redirect', 'onPage']                                                                        // 20
};                                                                                                                     // 16
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"integrations.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","faker","meteor/mongo","meteor/random","meteor/aldeed:simple-schema","meteor/dburles:factory","/imports/api/brands/brands","/imports/api/channels/channels","./social/social","./constants",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/integrations/integrations.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");                                                //
                                                                                                                       //
var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                                       //
                                                                                                                       //
var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");                          //
                                                                                                                       //
var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                                 //
                                                                                                                       //
var _inherits2 = require("babel-runtime/helpers/inherits");                                                            //
                                                                                                                       //
var _inherits3 = _interopRequireDefault(_inherits2);                                                                   //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
module.export({                                                                                                        // 1
  Integrations: function () {                                                                                          // 1
    return Integrations;                                                                                               // 1
  },                                                                                                                   // 1
  formSchema: function () {                                                                                            // 1
    return formSchema;                                                                                                 // 1
  },                                                                                                                   // 1
  messengerSchema: function () {                                                                                       // 1
    return messengerSchema;                                                                                            // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var faker = void 0;                                                                                                    // 1
module.importSync("faker", {                                                                                           // 1
  "default": function (v) {                                                                                            // 1
    faker = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Mongo = void 0;                                                                                                    // 1
module.importSync("meteor/mongo", {                                                                                    // 1
  Mongo: function (v) {                                                                                                // 1
    Mongo = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var Random = void 0;                                                                                                   // 1
module.importSync("meteor/random", {                                                                                   // 1
  Random: function (v) {                                                                                               // 1
    Random = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var SimpleSchema = void 0;                                                                                             // 1
module.importSync("meteor/aldeed:simple-schema", {                                                                     // 1
  SimpleSchema: function (v) {                                                                                         // 1
    SimpleSchema = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var Factory = void 0;                                                                                                  // 1
module.importSync("meteor/dburles:factory", {                                                                          // 1
  Factory: function (v) {                                                                                              // 1
    Factory = v;                                                                                                       // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var Brands = void 0;                                                                                                   // 1
module.importSync("/imports/api/brands/brands", {                                                                      // 1
  Brands: function (v) {                                                                                               // 1
    Brands = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
var Channels = void 0;                                                                                                 // 1
module.importSync("/imports/api/channels/channels", {                                                                  // 1
  Channels: function (v) {                                                                                             // 1
    Channels = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 6);                                                                                                                 // 1
var facebookSchema = void 0,                                                                                           // 1
    twitterSchema = void 0;                                                                                            // 1
module.importSync("./social/social", {                                                                                 // 1
  facebookSchema: function (v) {                                                                                       // 1
    facebookSchema = v;                                                                                                // 1
  },                                                                                                                   // 1
  twitterSchema: function (v) {                                                                                        // 1
    twitterSchema = v;                                                                                                 // 1
  }                                                                                                                    // 1
}, 7);                                                                                                                 // 1
var KIND_CHOICES = void 0,                                                                                             // 1
    FORM_LOAD_TYPES = void 0,                                                                                          // 1
    FORM_SUCCESS_ACTIONS = void 0;                                                                                     // 1
module.importSync("./constants", {                                                                                     // 1
  KIND_CHOICES: function (v) {                                                                                         // 1
    KIND_CHOICES = v;                                                                                                  // 1
  },                                                                                                                   // 1
  FORM_LOAD_TYPES: function (v) {                                                                                      // 1
    FORM_LOAD_TYPES = v;                                                                                               // 1
  },                                                                                                                   // 1
  FORM_SUCCESS_ACTIONS: function (v) {                                                                                 // 1
    FORM_SUCCESS_ACTIONS = v;                                                                                          // 1
  }                                                                                                                    // 1
}, 8);                                                                                                                 // 1
                                                                                                                       //
var IntegrationCollections = function (_Mongo$Collection) {                                                            //
  (0, _inherits3.default)(IntegrationCollections, _Mongo$Collection);                                                  //
                                                                                                                       //
  function IntegrationCollections() {                                                                                  //
    (0, _classCallCheck3.default)(this, IntegrationCollections);                                                       //
    return (0, _possibleConstructorReturn3.default)(this, _Mongo$Collection.apply(this, arguments));                   //
  }                                                                                                                    //
                                                                                                                       //
  return IntegrationCollections;                                                                                       //
}(Mongo.Collection);                                                                                                   //
                                                                                                                       //
var Integrations = new IntegrationCollections('integrations');                                                         // 13
Integrations.deny({                                                                                                    // 15
  insert: function () {                                                                                                // 16
    return true;                                                                                                       // 17
  },                                                                                                                   // 18
  update: function () {                                                                                                // 19
    return true;                                                                                                       // 20
  },                                                                                                                   // 21
  remove: function () {                                                                                                // 22
    return true;                                                                                                       // 23
  }                                                                                                                    // 24
}); // form integration options                                                                                        // 15
                                                                                                                       //
var formSchema = new SimpleSchema({                                                                                    // 28
  loadType: {                                                                                                          // 29
    type: String,                                                                                                      // 30
    allowedValues: FORM_LOAD_TYPES.ALL_LIST,                                                                           // 31
    optional: true                                                                                                     // 32
  },                                                                                                                   // 29
  successAction: {                                                                                                     // 35
    type: String,                                                                                                      // 36
    allowedValues: FORM_SUCCESS_ACTIONS.ALL_LIST,                                                                      // 37
    optional: true                                                                                                     // 38
  },                                                                                                                   // 35
  fromEmail: {                                                                                                         // 41
    type: String,                                                                                                      // 42
    optional: true                                                                                                     // 43
  },                                                                                                                   // 41
  userEmailTitle: {                                                                                                    // 46
    type: String,                                                                                                      // 47
    optional: true                                                                                                     // 48
  },                                                                                                                   // 46
  userEmailContent: {                                                                                                  // 51
    type: String,                                                                                                      // 52
    optional: true                                                                                                     // 53
  },                                                                                                                   // 51
  adminEmails: {                                                                                                       // 56
    type: [String],                                                                                                    // 57
    optional: true                                                                                                     // 58
  },                                                                                                                   // 56
  adminEmailTitle: {                                                                                                   // 61
    type: String,                                                                                                      // 62
    optional: true                                                                                                     // 63
  },                                                                                                                   // 61
  adminEmailContent: {                                                                                                 // 66
    type: String,                                                                                                      // 67
    optional: true                                                                                                     // 68
  },                                                                                                                   // 66
  thankContent: {                                                                                                      // 71
    type: String,                                                                                                      // 72
    optional: true                                                                                                     // 73
  },                                                                                                                   // 71
  redirectUrl: {                                                                                                       // 76
    type: String,                                                                                                      // 77
    optional: true                                                                                                     // 78
  }                                                                                                                    // 76
});                                                                                                                    // 28
var onlineHoursSchema = new SimpleSchema({                                                                             // 82
  _id: {                                                                                                               // 83
    type: String                                                                                                       // 84
  },                                                                                                                   // 83
  day: {                                                                                                               // 86
    type: String                                                                                                       // 87
  },                                                                                                                   // 86
  from: {                                                                                                              // 89
    type: String                                                                                                       // 90
  },                                                                                                                   // 89
  to: {                                                                                                                // 92
    type: String                                                                                                       // 93
  }                                                                                                                    // 92
}); // messenger ==============                                                                                        // 82
                                                                                                                       //
var messengerSchema = new SimpleSchema({                                                                               // 98
  notifyCustomer: {                                                                                                    // 99
    type: Boolean,                                                                                                     // 100
    optional: true                                                                                                     // 101
  },                                                                                                                   // 99
  // manual, auto                                                                                                      // 104
  availabilityMethod: {                                                                                                // 105
    type: String,                                                                                                      // 106
    optional: true,                                                                                                    // 107
    allowedValues: ['manual', 'auto']                                                                                  // 108
  },                                                                                                                   // 105
  isOnline: {                                                                                                          // 110
    type: Boolean,                                                                                                     // 111
    optional: true                                                                                                     // 112
  },                                                                                                                   // 110
  onlineHours: {                                                                                                       // 114
    type: [onlineHoursSchema],                                                                                         // 115
    optional: true                                                                                                     // 116
  },                                                                                                                   // 114
  timezone: {                                                                                                          // 118
    type: String,                                                                                                      // 119
    optional: true                                                                                                     // 120
  },                                                                                                                   // 118
  welcomeMessage: {                                                                                                    // 122
    type: String,                                                                                                      // 123
    optional: true                                                                                                     // 124
  },                                                                                                                   // 122
  awayMessage: {                                                                                                       // 126
    type: String,                                                                                                      // 127
    optional: true                                                                                                     // 128
  },                                                                                                                   // 126
  thankYouMessage: {                                                                                                   // 130
    type: String,                                                                                                      // 131
    optional: true                                                                                                     // 132
  }                                                                                                                    // 130
});                                                                                                                    // 98
Integrations.schema = new SimpleSchema({                                                                               // 136
  // messenger , twitter ...                                                                                           // 137
  kind: {                                                                                                              // 138
    type: String,                                                                                                      // 139
    allowedValues: KIND_CHOICES.ALL_LIST                                                                               // 140
  },                                                                                                                   // 138
  name: {                                                                                                              // 143
    type: String                                                                                                       // 144
  },                                                                                                                   // 143
  brandId: {                                                                                                           // 146
    type: String                                                                                                       // 147
  },                                                                                                                   // 146
  formId: {                                                                                                            // 149
    type: String,                                                                                                      // 150
    optional: true                                                                                                     // 151
  },                                                                                                                   // 149
  // form integration options                                                                                          // 154
  formData: {                                                                                                          // 155
    type: formSchema,                                                                                                  // 156
    optional: true                                                                                                     // 157
  },                                                                                                                   // 155
  // messenger availability, text and other options                                                                    // 160
  messengerData: {                                                                                                     // 161
    type: messengerSchema,                                                                                             // 162
    optional: true                                                                                                     // 163
  },                                                                                                                   // 161
  // twitter authentication info                                                                                       // 166
  twitterData: {                                                                                                       // 167
    type: twitterSchema,                                                                                               // 168
    optional: true                                                                                                     // 169
  },                                                                                                                   // 167
  // facebook authentication info                                                                                      // 172
  facebookData: {                                                                                                      // 173
    type: facebookSchema,                                                                                              // 174
    optional: true                                                                                                     // 175
  },                                                                                                                   // 173
  // ui options                                                                                                        // 178
  uiOptions: {                                                                                                         // 179
    type: Object,                                                                                                      // 180
    blackbox: true,                                                                                                    // 181
    optional: true                                                                                                     // 182
  }                                                                                                                    // 179
});                                                                                                                    // 136
Integrations.attachSchema(Integrations.schema);                                                                        // 186
Integrations.helpers({                                                                                                 // 188
  brand: function () {                                                                                                 // 189
    return Brands.findOne(this.brandId) || {};                                                                         // 190
  },                                                                                                                   // 191
  channels: function () {                                                                                              // 192
    return Channels.find({                                                                                             // 193
      integrationIds: {                                                                                                // 193
        $in: [this._id]                                                                                                // 193
      }                                                                                                                // 193
    }).fetch();                                                                                                        // 193
  }                                                                                                                    // 194
});                                                                                                                    // 188
Integrations.publicFields = {                                                                                          // 197
  name: 1,                                                                                                             // 198
  kind: 1,                                                                                                             // 199
  brandId: 1,                                                                                                          // 200
  formId: 1,                                                                                                           // 201
  uiOptions: 1,                                                                                                        // 202
  formData: 1,                                                                                                         // 203
  messengerData: 1                                                                                                     // 204
};                                                                                                                     // 197
Factory.define('integration', Integrations, {                                                                          // 207
  name: function () {                                                                                                  // 208
    return faker.random.word();                                                                                        // 208
  },                                                                                                                   // 208
  kind: KIND_CHOICES.MESSENGER,                                                                                        // 209
  brandId: function () {                                                                                               // 210
    return Random.id();                                                                                                // 210
  }                                                                                                                    // 210
});                                                                                                                    // 207
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"brands":{"server":{"methods.js":["meteor/meteor","meteor/check","meteor/mdg:validated-method","/imports/api/utils","../brands",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/brands/server/methods.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  add: function () {                                                                                                   // 1
    return add;                                                                                                        // 1
  },                                                                                                                   // 1
  edit: function () {                                                                                                  // 1
    return edit;                                                                                                       // 1
  },                                                                                                                   // 1
  remove: function () {                                                                                                // 1
    return remove;                                                                                                     // 1
  },                                                                                                                   // 1
  configEmail: function () {                                                                                           // 1
    return configEmail;                                                                                                // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var check = void 0;                                                                                                    // 1
module.importSync("meteor/check", {                                                                                    // 1
  check: function (v) {                                                                                                // 1
    check = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var ValidatedMethod = void 0;                                                                                          // 1
module.importSync("meteor/mdg:validated-method", {                                                                     // 1
  ValidatedMethod: function (v) {                                                                                      // 1
    ValidatedMethod = v;                                                                                               // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var ErxesMixin = void 0;                                                                                               // 1
module.importSync("/imports/api/utils", {                                                                              // 1
  ErxesMixin: function (v) {                                                                                           // 1
    ErxesMixin = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var Brands = void 0,                                                                                                   // 1
    emailConfigSchema = void 0;                                                                                        // 1
module.importSync("../brands", {                                                                                       // 1
  Brands: function (v) {                                                                                               // 1
    Brands = v;                                                                                                        // 1
  },                                                                                                                   // 1
  emailConfigSchema: function (v) {                                                                                    // 1
    emailConfigSchema = v;                                                                                             // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var add = new ValidatedMethod({                                                                                        // 8
  name: 'brands.add',                                                                                                  // 9
  mixins: [ErxesMixin],                                                                                                // 10
  validate: function (_ref) {                                                                                          // 12
    var doc = _ref.doc;                                                                                                // 12
    check(doc, Brands.schema);                                                                                         // 13
  },                                                                                                                   // 14
  run: function (_ref2) {                                                                                              // 16
    var doc = _ref2.doc;                                                                                               // 16
    var id = Brands.insert(Object.assign({                                                                             // 17
      userId: this.userId                                                                                              // 17
    }, doc));                                                                                                          // 17
    return id;                                                                                                         // 18
  }                                                                                                                    // 19
});                                                                                                                    // 8
var edit = new ValidatedMethod({                                                                                       // 23
  name: 'brands.edit',                                                                                                 // 24
  mixins: [ErxesMixin],                                                                                                // 25
  validate: function (_ref3) {                                                                                         // 27
    var id = _ref3.id,                                                                                                 // 27
        doc = _ref3.doc;                                                                                               // 27
    check(id, String);                                                                                                 // 28
    check(doc, Brands.schema);                                                                                         // 29
  },                                                                                                                   // 30
  run: function (_ref4) {                                                                                              // 32
    var id = _ref4.id,                                                                                                 // 32
        doc = _ref4.doc;                                                                                               // 32
    var brand = Brands.findOne(id, {                                                                                   // 33
      fields: {                                                                                                        // 34
        userId: 1                                                                                                      // 35
      }                                                                                                                // 34
    });                                                                                                                // 33
                                                                                                                       //
    if (!brand) {                                                                                                      // 39
      throw new Meteor.Error('brands.edit.notFound', 'Brand not found');                                               // 40
    }                                                                                                                  // 41
                                                                                                                       //
    return Brands.update(id, {                                                                                         // 43
      $set: doc                                                                                                        // 43
    });                                                                                                                // 43
  }                                                                                                                    // 44
});                                                                                                                    // 23
var remove = new ValidatedMethod({                                                                                     // 48
  name: 'brands.remove',                                                                                               // 49
  mixins: [ErxesMixin],                                                                                                // 50
  validate: function (id) {                                                                                            // 52
    check(id, String);                                                                                                 // 53
  },                                                                                                                   // 54
  run: function (id) {                                                                                                 // 56
    var brand = Brands.findOne(id, {                                                                                   // 57
      fields: {                                                                                                        // 57
        userId: 1                                                                                                      // 57
      }                                                                                                                // 57
    });                                                                                                                // 57
                                                                                                                       //
    if (!brand) {                                                                                                      // 59
      throw new Meteor.Error('brands.remove.notFound', 'Brand not found');                                             // 60
    }                                                                                                                  // 61
                                                                                                                       //
    return Brands.remove(id);                                                                                          // 63
  }                                                                                                                    // 64
});                                                                                                                    // 48
var configEmail = new ValidatedMethod({                                                                                // 68
  name: 'brands.configEmail',                                                                                          // 69
  mixins: [ErxesMixin],                                                                                                // 70
  validate: function (_ref5) {                                                                                         // 72
    var id = _ref5.id,                                                                                                 // 72
        config = _ref5.config;                                                                                         // 72
    check(id, String);                                                                                                 // 73
    check(config, emailConfigSchema);                                                                                  // 74
  },                                                                                                                   // 75
  run: function (_ref6) {                                                                                              // 77
    var id = _ref6.id,                                                                                                 // 77
        config = _ref6.config;                                                                                         // 77
    return Brands.update(id, {                                                                                         // 78
      $set: {                                                                                                          // 78
        emailConfig: config                                                                                            // 78
      }                                                                                                                // 78
    });                                                                                                                // 78
  }                                                                                                                    // 79
});                                                                                                                    // 68
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"brands.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","faker","meteor/mongo","meteor/random","meteor/dburles:factory","meteor/aldeed:simple-schema",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/brands/brands.js                                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");                                                //
                                                                                                                       //
var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                                       //
                                                                                                                       //
var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");                          //
                                                                                                                       //
var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                                 //
                                                                                                                       //
var _inherits2 = require("babel-runtime/helpers/inherits");                                                            //
                                                                                                                       //
var _inherits3 = _interopRequireDefault(_inherits2);                                                                   //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
module.export({                                                                                                        // 1
  Brands: function () {                                                                                                // 1
    return Brands;                                                                                                     // 1
  },                                                                                                                   // 1
  emailConfigSchema: function () {                                                                                     // 1
    return emailConfigSchema;                                                                                          // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var faker = void 0;                                                                                                    // 1
module.importSync("faker", {                                                                                           // 1
  "default": function (v) {                                                                                            // 1
    faker = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Mongo = void 0;                                                                                                    // 1
module.importSync("meteor/mongo", {                                                                                    // 1
  Mongo: function (v) {                                                                                                // 1
    Mongo = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var Random = void 0;                                                                                                   // 1
module.importSync("meteor/random", {                                                                                   // 1
  Random: function (v) {                                                                                               // 1
    Random = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var Factory = void 0;                                                                                                  // 1
module.importSync("meteor/dburles:factory", {                                                                          // 1
  Factory: function (v) {                                                                                              // 1
    Factory = v;                                                                                                       // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var SimpleSchema = void 0;                                                                                             // 1
module.importSync("meteor/aldeed:simple-schema", {                                                                     // 1
  SimpleSchema: function (v) {                                                                                         // 1
    SimpleSchema = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
                                                                                                                       //
// Brand collection                                                                                                    // 7
var BrandsCollection = function (_Mongo$Collection) {                                                                  //
  (0, _inherits3.default)(BrandsCollection, _Mongo$Collection);                                                        //
                                                                                                                       //
  function BrandsCollection() {                                                                                        //
    (0, _classCallCheck3.default)(this, BrandsCollection);                                                             //
    return (0, _possibleConstructorReturn3.default)(this, _Mongo$Collection.apply(this, arguments));                   //
  }                                                                                                                    //
                                                                                                                       //
  BrandsCollection.prototype.insert = function () {                                                                    //
    function insert(doc, callback) {                                                                                   //
      var brand = Object.assign({}, doc); // generate code automatically                                               // 10
                                                                                                                       //
      var code = Random.id().substr(0, 6);                                                                             // 13
                                                                                                                       //
      while (this.findOne({                                                                                            // 14
        code: code                                                                                                     // 14
      })) {                                                                                                            // 14
        code = Random.id().substr(0, 6);                                                                               // 15
      }                                                                                                                // 16
                                                                                                                       //
      brand.code = code;                                                                                               // 18
      brand.createdAt = new Date();                                                                                    // 19
      brand.emailConfig = {                                                                                            // 20
        type: 'simple'                                                                                                 // 20
      };                                                                                                               // 20
      return _Mongo$Collection.prototype.insert.call(this, brand, callback);                                           // 22
    }                                                                                                                  // 23
                                                                                                                       //
    return insert;                                                                                                     //
  }();                                                                                                                 //
                                                                                                                       //
  return BrandsCollection;                                                                                             //
}(Mongo.Collection);                                                                                                   //
                                                                                                                       //
var Brands = new BrandsCollection('brands');                                                                           // 26
// Deny all client-side updates since we will be using methods to manage                                               // 28
// this collection                                                                                                     // 29
Brands.deny({                                                                                                          // 30
  insert: function () {                                                                                                // 31
    return true;                                                                                                       // 32
  },                                                                                                                   // 33
  update: function () {                                                                                                // 34
    return true;                                                                                                       // 35
  },                                                                                                                   // 36
  remove: function () {                                                                                                // 37
    return true;                                                                                                       // 38
  }                                                                                                                    // 39
});                                                                                                                    // 30
var emailConfigSchema = new SimpleSchema({                                                                             // 42
  type: {                                                                                                              // 43
    type: String,                                                                                                      // 44
    allowedValues: ['simple', 'custom']                                                                                // 45
  },                                                                                                                   // 43
  template: {                                                                                                          // 47
    type: String,                                                                                                      // 48
    optional: true                                                                                                     // 49
  }                                                                                                                    // 47
});                                                                                                                    // 42
Brands.schema = new SimpleSchema({                                                                                     // 53
  name: {                                                                                                              // 54
    type: String                                                                                                       // 55
  },                                                                                                                   // 54
  description: {                                                                                                       // 57
    type: String,                                                                                                      // 58
    optional: true                                                                                                     // 59
  }                                                                                                                    // 57
});                                                                                                                    // 53
Brands.schemaExtra = new SimpleSchema({                                                                                // 63
  code: {                                                                                                              // 64
    type: String                                                                                                       // 65
  },                                                                                                                   // 64
  userId: {                                                                                                            // 67
    type: String,                                                                                                      // 68
    regEx: SimpleSchema.RegEx.Id                                                                                       // 69
  },                                                                                                                   // 67
  createdAt: {                                                                                                         // 71
    type: Date                                                                                                         // 72
  },                                                                                                                   // 71
  schema: {                                                                                                            // 74
    type: Object,                                                                                                      // 75
    blackbox: true,                                                                                                    // 76
    optional: true                                                                                                     // 77
  },                                                                                                                   // 74
  emailConfig: {                                                                                                       // 79
    type: emailConfigSchema,                                                                                           // 80
    optional: true                                                                                                     // 81
  }                                                                                                                    // 79
});                                                                                                                    // 63
Brands.attachSchema(Brands.schema);                                                                                    // 85
Brands.attachSchema(Brands.schemaExtra);                                                                               // 86
Brands.publicFields = {                                                                                                // 88
  name: 1,                                                                                                             // 89
  code: 1,                                                                                                             // 90
  description: 1,                                                                                                      // 91
  userId: 1,                                                                                                           // 92
  createdAt: 1,                                                                                                        // 93
  schema: 1,                                                                                                           // 94
  emailConfig: 1                                                                                                       // 95
};                                                                                                                     // 88
Factory.define('brand', Brands, {                                                                                      // 98
  name: function () {                                                                                                  // 99
    return faker.random.word();                                                                                        // 99
  },                                                                                                                   // 99
  userId: function () {                                                                                                // 100
    return Random.id();                                                                                                // 100
  }                                                                                                                    // 100
});                                                                                                                    // 98
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"channels":{"server":{"methods.js":["meteor/meteor","meteor/check","meteor/mdg:validated-method","/imports/api/server/utils","/imports/api/utils","../channels",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/channels/server/methods.js                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  add: function () {                                                                                                   // 1
    return add;                                                                                                        // 1
  },                                                                                                                   // 1
  edit: function () {                                                                                                  // 1
    return edit;                                                                                                       // 1
  },                                                                                                                   // 1
  remove: function () {                                                                                                // 1
    return remove;                                                                                                     // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var check = void 0;                                                                                                    // 1
module.importSync("meteor/check", {                                                                                    // 1
  check: function (v) {                                                                                                // 1
    check = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var ValidatedMethod = void 0;                                                                                          // 1
module.importSync("meteor/mdg:validated-method", {                                                                     // 1
  ValidatedMethod: function (v) {                                                                                      // 1
    ValidatedMethod = v;                                                                                               // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var sendNotification = void 0;                                                                                         // 1
module.importSync("/imports/api/server/utils", {                                                                       // 1
  sendNotification: function (v) {                                                                                     // 1
    sendNotification = v;                                                                                              // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var ErxesMixin = void 0;                                                                                               // 1
module.importSync("/imports/api/utils", {                                                                              // 1
  ErxesMixin: function (v) {                                                                                           // 1
    ErxesMixin = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var Channels = void 0;                                                                                                 // 1
module.importSync("../channels", {                                                                                     // 1
  Channels: function (v) {                                                                                             // 1
    Channels = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
                                                                                                                       //
var sendNotifications = function (channelId, _memberIds, userId) {                                                     // 8
  var memberIds = _memberIds || [];                                                                                    // 9
  var channel = Channels.findOne({                                                                                     // 10
    _id: channelId                                                                                                     // 10
  });                                                                                                                  // 10
  var content = "You have invited to '" + channel.name + "' channel.";                                                 // 12
  sendNotification({                                                                                                   // 14
    createdUser: userId,                                                                                               // 15
    notifType: 'channelMembersChange',                                                                                 // 16
    title: content,                                                                                                    // 17
    content: content,                                                                                                  // 18
    link: "/inbox/" + channel._id,                                                                                     // 19
    // exclude current user                                                                                            // 21
    receivers: memberIds.filter(function (id) {                                                                        // 22
      return id !== userId;                                                                                            // 22
    })                                                                                                                 // 22
  });                                                                                                                  // 14
}; // channel add                                                                                                      // 24
                                                                                                                       //
                                                                                                                       //
var add = new ValidatedMethod({                                                                                        // 27
  name: 'channels.add',                                                                                                // 28
  mixins: [ErxesMixin],                                                                                                // 29
  validate: function (_ref) {                                                                                          // 31
    var doc = _ref.doc;                                                                                                // 31
    // check doc                                                                                                       // 32
    check(doc, Channels.schema);                                                                                       // 33
  },                                                                                                                   // 34
  run: function (_ref2) {                                                                                              // 36
    var doc = _ref2.doc;                                                                                               // 36
    var obj = Object.assign({                                                                                          // 37
      userId: this.userId                                                                                              // 37
    }, doc);                                                                                                           // 37
    var channelId = Channels.insert(obj); // send notification                                                         // 39
                                                                                                                       //
    sendNotifications(channelId, doc.memberIds, this.userId);                                                          // 42
    return channelId;                                                                                                  // 44
  }                                                                                                                    // 45
});                                                                                                                    // 27
var edit = new ValidatedMethod({                                                                                       // 49
  name: 'channels.edit',                                                                                               // 50
  mixins: [ErxesMixin],                                                                                                // 51
  validate: function (_ref3) {                                                                                         // 53
    var id = _ref3.id,                                                                                                 // 53
        doc = _ref3.doc;                                                                                               // 53
    check(id, String);                                                                                                 // 54
    check(doc, Channels.schema);                                                                                       // 55
  },                                                                                                                   // 56
  run: function (_ref4) {                                                                                              // 58
    var id = _ref4.id,                                                                                                 // 58
        doc = _ref4.doc;                                                                                               // 58
    var obj = Channels.findOne(id, {                                                                                   // 59
      fields: {                                                                                                        // 59
        userId: 1                                                                                                      // 59
      }                                                                                                                // 59
    });                                                                                                                // 59
                                                                                                                       //
    if (!obj) {                                                                                                        // 61
      throw new Meteor.Error('channels.edit.notFound', 'Channel not found');                                           // 62
    }                                                                                                                  // 63
                                                                                                                       //
    Object.assign(doc, {                                                                                               // 65
      memberIds: doc.memberIds || []                                                                                   // 65
    }); // add current user to members automatically                                                                   // 65
                                                                                                                       //
    if (doc.memberIds.indexOf(this.userId) === -1) {                                                                   // 68
      doc.memberIds.push(this.userId);                                                                                 // 69
    } // update action                                                                                                 // 70
                                                                                                                       //
                                                                                                                       //
    Channels.update(id, {                                                                                              // 73
      $set: doc                                                                                                        // 73
    });                                                                                                                // 73
    var updatedChannel = Channels.findOne(id); // send notification                                                    // 75
                                                                                                                       //
    sendNotifications(id, updatedChannel.memberIds, this.userId);                                                      // 78
  }                                                                                                                    // 79
});                                                                                                                    // 49
var remove = new ValidatedMethod({                                                                                     // 83
  name: 'channels.remove',                                                                                             // 84
  mixins: [ErxesMixin],                                                                                                // 85
  validate: function (id) {                                                                                            // 87
    check(id, String);                                                                                                 // 88
  },                                                                                                                   // 89
  run: function (id) {                                                                                                 // 91
    var obj = Channels.findOne(id, {                                                                                   // 92
      fields: {                                                                                                        // 92
        userId: 1                                                                                                      // 92
      }                                                                                                                // 92
    });                                                                                                                // 92
                                                                                                                       //
    if (!obj) {                                                                                                        // 94
      throw new Meteor.Error('channels.remove.notFound', 'Channel not found');                                         // 95
    }                                                                                                                  // 96
                                                                                                                       //
    return Channels.remove(id);                                                                                        // 98
  }                                                                                                                    // 99
});                                                                                                                    // 83
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"channels.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","faker","meteor/mongo","meteor/random","meteor/aldeed:simple-schema","meteor/dburles:factory",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/channels/channels.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");                                                //
                                                                                                                       //
var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                                       //
                                                                                                                       //
var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");                          //
                                                                                                                       //
var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                                 //
                                                                                                                       //
var _inherits2 = require("babel-runtime/helpers/inherits");                                                            //
                                                                                                                       //
var _inherits3 = _interopRequireDefault(_inherits2);                                                                   //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
module.export({                                                                                                        // 1
  Channels: function () {                                                                                              // 1
    return Channels;                                                                                                   // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var faker = void 0;                                                                                                    // 1
module.importSync("faker", {                                                                                           // 1
  "default": function (v) {                                                                                            // 1
    faker = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Mongo = void 0;                                                                                                    // 1
module.importSync("meteor/mongo", {                                                                                    // 1
  Mongo: function (v) {                                                                                                // 1
    Mongo = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var Random = void 0;                                                                                                   // 1
module.importSync("meteor/random", {                                                                                   // 1
  Random: function (v) {                                                                                               // 1
    Random = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var SimpleSchema = void 0;                                                                                             // 1
module.importSync("meteor/aldeed:simple-schema", {                                                                     // 1
  SimpleSchema: function (v) {                                                                                         // 1
    SimpleSchema = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var Factory = void 0;                                                                                                  // 1
module.importSync("meteor/dburles:factory", {                                                                          // 1
  Factory: function (v) {                                                                                              // 1
    Factory = v;                                                                                                       // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
                                                                                                                       //
var ChannelsCollection = function (_Mongo$Collection) {                                                                //
  (0, _inherits3.default)(ChannelsCollection, _Mongo$Collection);                                                      //
                                                                                                                       //
  function ChannelsCollection() {                                                                                      //
    (0, _classCallCheck3.default)(this, ChannelsCollection);                                                           //
    return (0, _possibleConstructorReturn3.default)(this, _Mongo$Collection.apply(this, arguments));                   //
  }                                                                                                                    //
                                                                                                                       //
  ChannelsCollection.prototype.insert = function () {                                                                  //
    function insert(doc, callback) {                                                                                   //
      // extend doc with auto values                                                                                   // 9
      var modifier = Object.assign({                                                                                   // 10
        createdAt: new Date(),                                                                                         // 12
        conversationCount: 0,                                                                                          // 13
        openConversationCount: 0                                                                                       // 14
      }, doc); // add current user to members                                                                          // 11
                                                                                                                       //
      if (modifier.memberIds.indexOf(modifier.userId) === -1) {                                                        // 20
        modifier.memberIds.push(modifier.userId);                                                                      // 21
      }                                                                                                                // 22
                                                                                                                       //
      return _Mongo$Collection.prototype.insert.call(this, modifier, callback);                                        // 24
    }                                                                                                                  // 25
                                                                                                                       //
    return insert;                                                                                                     //
  }();                                                                                                                 //
                                                                                                                       //
  return ChannelsCollection;                                                                                           //
}(Mongo.Collection);                                                                                                   //
                                                                                                                       //
var Channels = new ChannelsCollection('channels');                                                                     // 28
Channels.deny({                                                                                                        // 30
  insert: function () {                                                                                                // 31
    return true;                                                                                                       // 32
  },                                                                                                                   // 33
  update: function () {                                                                                                // 34
    return true;                                                                                                       // 35
  },                                                                                                                   // 36
  remove: function () {                                                                                                // 37
    return true;                                                                                                       // 38
  }                                                                                                                    // 39
});                                                                                                                    // 30
Channels.schema = new SimpleSchema({                                                                                   // 42
  name: {                                                                                                              // 43
    type: String                                                                                                       // 44
  },                                                                                                                   // 43
  description: {                                                                                                       // 46
    type: String,                                                                                                      // 47
    optional: true                                                                                                     // 48
  },                                                                                                                   // 46
  integrationIds: {                                                                                                    // 50
    type: [String],                                                                                                    // 51
    regEx: SimpleSchema.RegEx.Id                                                                                       // 52
  },                                                                                                                   // 50
  memberIds: {                                                                                                         // 54
    type: [String],                                                                                                    // 55
    regEx: SimpleSchema.RegEx.Id                                                                                       // 56
  }                                                                                                                    // 54
});                                                                                                                    // 42
Channels.schemaExtra = new SimpleSchema({                                                                              // 60
  createdAt: {                                                                                                         // 61
    type: Date                                                                                                         // 62
  },                                                                                                                   // 61
  userId: {                                                                                                            // 64
    type: String,                                                                                                      // 65
    regEx: SimpleSchema.RegEx.Id                                                                                       // 66
  },                                                                                                                   // 64
  // All conversation count                                                                                            // 69
  conversationCount: {                                                                                                 // 70
    type: Number                                                                                                       // 71
  },                                                                                                                   // 70
  // Open/unresolved conversation count                                                                                // 74
  openConversationCount: {                                                                                             // 75
    type: Number                                                                                                       // 76
  }                                                                                                                    // 75
});                                                                                                                    // 60
Channels.attachSchema(Channels.schema);                                                                                // 80
Channels.attachSchema(Channels.schemaExtra);                                                                           // 81
Channels.publicFields = {                                                                                              // 83
  name: 1,                                                                                                             // 84
  description: 1,                                                                                                      // 85
  integrationIds: 1,                                                                                                   // 86
  memberIds: 1,                                                                                                        // 87
  userId: 1,                                                                                                           // 88
  createdAt: 1,                                                                                                        // 89
  openConversationCount: 1,                                                                                            // 90
  conversationCount: 1                                                                                                 // 91
};                                                                                                                     // 83
Factory.define('channel', Channels, {                                                                                  // 94
  name: function () {                                                                                                  // 95
    return faker.random.word();                                                                                        // 95
  },                                                                                                                   // 95
  memberIds: function () {                                                                                             // 96
    return [Random.id()];                                                                                              // 96
  },                                                                                                                   // 96
  integrationIds: function () {                                                                                        // 97
    return [Random.id()];                                                                                              // 97
  },                                                                                                                   // 97
  userId: function () {                                                                                                // 98
    return Random.id();                                                                                                // 98
  }                                                                                                                    // 98
});                                                                                                                    // 94
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"conversations":{"server":{"apolloPubSubs.js":["../../server/utils",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/conversations/server/apolloPubSubs.js                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  messageInserted: function () {                                                                                       // 1
    return messageInserted;                                                                                            // 1
  },                                                                                                                   // 1
  conversationsChanged: function () {                                                                                  // 1
    return conversationsChanged;                                                                                       // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var mutate = void 0;                                                                                                   // 1
module.importSync("../../server/utils", {                                                                              // 1
  mutate: function (v) {                                                                                               // 1
    mutate = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
                                                                                                                       //
var messageInserted = function (messageId) {                                                                           // 8
  return mutate("\n    mutation {\n      conversationMessageInserted(_id: \"" + messageId + "\")\n    }\n  ");         // 8
};                                                                                                                     // 8
                                                                                                                       //
var conversationsChanged = function (conversationIds, type) {                                                          // 17
  return mutate("\n    mutation {\n      conversationsChanged(_ids: " + JSON.stringify(conversationIds) + ", type: \"" + type + "\")\n    }\n  ");
};                                                                                                                     // 17
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"cronJobs.js":["meteor/meteor","meteor/underscore","moment","meteor/percolate:synced-cron","/imports/api/server/utils","/imports/api/customers/customers","/imports/api/brands/brands","../conversations","../constants","../messages",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/conversations/server/cronJobs.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
                                                                                                                       //
var _ = void 0;                                                                                                        // 1
                                                                                                                       //
module.importSync("meteor/underscore", {                                                                               // 1
  _: function (v) {                                                                                                    // 1
    _ = v;                                                                                                             // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var moment = void 0;                                                                                                   // 1
module.importSync("moment", {                                                                                          // 1
  "default": function (v) {                                                                                            // 1
    moment = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var SyncedCron = void 0;                                                                                               // 1
module.importSync("meteor/percolate:synced-cron", {                                                                    // 1
  SyncedCron: function (v) {                                                                                           // 1
    SyncedCron = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var sendEmail = void 0;                                                                                                // 1
module.importSync("/imports/api/server/utils", {                                                                       // 1
  sendEmail: function (v) {                                                                                            // 1
    sendEmail = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var Customers = void 0;                                                                                                // 1
module.importSync("/imports/api/customers/customers", {                                                                // 1
  Customers: function (v) {                                                                                            // 1
    Customers = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
var Brands = void 0;                                                                                                   // 1
module.importSync("/imports/api/brands/brands", {                                                                      // 1
  Brands: function (v) {                                                                                               // 1
    Brands = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 6);                                                                                                                 // 1
var Conversations = void 0;                                                                                            // 1
module.importSync("../conversations", {                                                                                // 1
  Conversations: function (v) {                                                                                        // 1
    Conversations = v;                                                                                                 // 1
  }                                                                                                                    // 1
}, 7);                                                                                                                 // 1
var CONVERSATION_STATUSES = void 0;                                                                                    // 1
module.importSync("../constants", {                                                                                    // 1
  CONVERSATION_STATUSES: function (v) {                                                                                // 1
    CONVERSATION_STATUSES = v;                                                                                         // 1
  }                                                                                                                    // 1
}, 8);                                                                                                                 // 1
var Messages = void 0;                                                                                                 // 1
module.importSync("../messages", {                                                                                     // 1
  Messages: function (v) {                                                                                             // 1
    Messages = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 9);                                                                                                                 // 1
                                                                                                                       //
function sendMessageEmail() {                                                                                          // 12
  // new or open conversations                                                                                         // 13
  var conversations = Conversations.find({                                                                             // 14
    status: {                                                                                                          // 16
      $in: [CONVERSATION_STATUSES.NEW, CONVERSATION_STATUSES.OPEN]                                                     // 16
    }                                                                                                                  // 16
  }, {                                                                                                                 // 15
    fields: {                                                                                                          // 18
      _id: 1,                                                                                                          // 18
      customerId: 1,                                                                                                   // 18
      brandId: 1                                                                                                       // 18
    }                                                                                                                  // 18
  });                                                                                                                  // 18
                                                                                                                       //
  _.each(conversations.fetch(), function (conversation) {                                                              // 21
    var customer = Customers.findOne(conversation.customerId);                                                         // 22
    var brand = Brands.findOne(conversation.brandId);                                                                  // 23
                                                                                                                       //
    if (!customer || !customer.email) {                                                                                // 25
      return;                                                                                                          // 26
    }                                                                                                                  // 27
                                                                                                                       //
    if (!brand) {                                                                                                      // 28
      return;                                                                                                          // 29
    } // user's last non answered question                                                                             // 30
                                                                                                                       //
                                                                                                                       //
    var question = Messages.findOne({                                                                                  // 33
      conversationId: conversation._id,                                                                                // 35
      customerId: {                                                                                                    // 36
        $exists: true                                                                                                  // 36
      }                                                                                                                // 36
    }, {                                                                                                               // 34
      sort: {                                                                                                          // 38
        createdAt: -1                                                                                                  // 38
      }                                                                                                                // 38
    }) || {};                                                                                                          // 38
    question.createdAt = moment(question.createdAt).format('DD MMM YY, HH:mm'); // generate admin unread answers       // 41
                                                                                                                       //
    var answers = [];                                                                                                  // 44
    var adminMessages = Messages.find({                                                                                // 46
      conversationId: conversation._id,                                                                                // 48
      userId: {                                                                                                        // 49
        $exists: true                                                                                                  // 49
      },                                                                                                               // 49
      isCustomerRead: {                                                                                                // 50
        $exists: false                                                                                                 // 50
      },                                                                                                               // 50
      // exclude internal notes                                                                                        // 52
      internal: false                                                                                                  // 53
    }, {                                                                                                               // 47
      sort: {                                                                                                          // 55
        createdAt: 1                                                                                                   // 55
      }                                                                                                                // 55
    }).fetch();                                                                                                        // 55
                                                                                                                       //
    _.each(adminMessages, function (message) {                                                                         // 58
      var answer = message; // add user object to answer                                                               // 59
                                                                                                                       //
      answer.user = Meteor.users.findOne(message.userId);                                                              // 62
      answer.createdAt = moment(answer.createdAt).format('DD MMM YY, HH:mm');                                          // 63
      answers.push(answer);                                                                                            // 64
    });                                                                                                                // 65
                                                                                                                       //
    if (answers.length < 1) {                                                                                          // 67
      return;                                                                                                          // 68
    } // template data                                                                                                 // 69
                                                                                                                       //
                                                                                                                       //
    var data = {                                                                                                       // 72
      customer: customer,                                                                                              // 72
      question: question,                                                                                              // 72
      answers: answers,                                                                                                // 72
      brand: brand                                                                                                     // 72
    }; // add user's signature                                                                                         // 72
                                                                                                                       //
    var user = Meteor.users.findOne(answers[0].userId);                                                                // 75
                                                                                                                       //
    if (user && user.emailSignatures) {                                                                                // 77
      var signature = _.find(user.emailSignatures, function (s) {                                                      // 78
        return brand._id === s.brandId;                                                                                // 78
      });                                                                                                              // 78
                                                                                                                       //
      if (signature) {                                                                                                 // 80
        data.signature = signature.signature;                                                                          // 81
      }                                                                                                                // 82
    } // send email                                                                                                    // 83
                                                                                                                       //
                                                                                                                       //
    sendEmail({                                                                                                        // 86
      to: customer.email,                                                                                              // 87
      subject: "Reply from \"" + brand.name + "\"",                                                                    // 88
      template: {                                                                                                      // 89
        name: 'conversationCron',                                                                                      // 90
        isCustom: true,                                                                                                // 91
        data: data                                                                                                     // 92
      }                                                                                                                // 89
    }); // mark sent messages as read                                                                                  // 86
                                                                                                                       //
    Messages.update({                                                                                                  // 97
      conversationId: conversation._id,                                                                                // 99
      userId: {                                                                                                        // 100
        $exists: true                                                                                                  // 100
      },                                                                                                               // 100
      isCustomerRead: {                                                                                                // 101
        $exists: false                                                                                                 // 101
      }                                                                                                                // 101
    }, {                                                                                                               // 98
      $set: {                                                                                                          // 103
        isCustomerRead: true                                                                                           // 103
      }                                                                                                                // 103
    }, {                                                                                                               // 103
      multi: true                                                                                                      // 104
    });                                                                                                                // 104
  });                                                                                                                  // 106
}                                                                                                                      // 107
                                                                                                                       //
SyncedCron.add({                                                                                                       // 109
  name: "Send unread conversation messages to customer's email",                                                       // 110
  schedule: function (parser) {                                                                                        // 112
    // return parser.text('every 10 seconds');                                                                         // 113
    return parser.text('every 10 minutes');                                                                            // 114
  },                                                                                                                   // 115
  job: function () {                                                                                                   // 117
    sendMessageEmail();                                                                                                // 118
  }                                                                                                                    // 119
});                                                                                                                    // 109
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"methods.js":["babel-runtime/helpers/extends","meteor/meteor","meteor/check","meteor/underscore","meteor/mdg:validated-method","strip","/imports/api/utils","/imports/api/server/utils","/imports/api/integrations/constants","/imports/api/integrations/social/server/twitter","/imports/api/integrations/social/server/facebook","/imports/api/conversations/messages","/imports/api/conversations/conversations","/imports/api/conversations/constants","./apolloPubSubs",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/conversations/server/methods.js                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = require("babel-runtime/helpers/extends");                                                              //
                                                                                                                       //
var _extends3 = _interopRequireDefault(_extends2);                                                                     //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
module.export({                                                                                                        // 1
  addMessage: function () {                                                                                            // 1
    return addMessage;                                                                                                 // 1
  },                                                                                                                   // 1
  assign: function () {                                                                                                // 1
    return assign;                                                                                                     // 1
  },                                                                                                                   // 1
  unassign: function () {                                                                                              // 1
    return unassign;                                                                                                   // 1
  },                                                                                                                   // 1
  changeStatus: function () {                                                                                          // 1
    return changeStatus;                                                                                               // 1
  },                                                                                                                   // 1
  star: function () {                                                                                                  // 1
    return star;                                                                                                       // 1
  },                                                                                                                   // 1
  unstar: function () {                                                                                                // 1
    return unstar;                                                                                                     // 1
  },                                                                                                                   // 1
  toggleParticipate: function () {                                                                                     // 1
    return toggleParticipate;                                                                                          // 1
  },                                                                                                                   // 1
  markAsRead: function () {                                                                                            // 1
    return markAsRead;                                                                                                 // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var check = void 0;                                                                                                    // 1
module.importSync("meteor/check", {                                                                                    // 1
  check: function (v) {                                                                                                // 1
    check = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
                                                                                                                       //
var _ = void 0;                                                                                                        // 1
                                                                                                                       //
module.importSync("meteor/underscore", {                                                                               // 1
  _: function (v) {                                                                                                    // 1
    _ = v;                                                                                                             // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var ValidatedMethod = void 0;                                                                                          // 1
module.importSync("meteor/mdg:validated-method", {                                                                     // 1
  ValidatedMethod: function (v) {                                                                                      // 1
    ValidatedMethod = v;                                                                                               // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var strip = void 0;                                                                                                    // 1
module.importSync("strip", {                                                                                           // 1
  "default": function (v) {                                                                                            // 1
    strip = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var ErxesMixin = void 0;                                                                                               // 1
module.importSync("/imports/api/utils", {                                                                              // 1
  ErxesMixin: function (v) {                                                                                           // 1
    ErxesMixin = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
var sendNotification = void 0,                                                                                         // 1
    sendEmail = void 0;                                                                                                // 1
module.importSync("/imports/api/server/utils", {                                                                       // 1
  sendNotification: function (v) {                                                                                     // 1
    sendNotification = v;                                                                                              // 1
  },                                                                                                                   // 1
  sendEmail: function (v) {                                                                                            // 1
    sendEmail = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 6);                                                                                                                 // 1
var KIND_CHOICES = void 0;                                                                                             // 1
module.importSync("/imports/api/integrations/constants", {                                                             // 1
  KIND_CHOICES: function (v) {                                                                                         // 1
    KIND_CHOICES = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 7);                                                                                                                 // 1
var tweetReply = void 0;                                                                                               // 1
module.importSync("/imports/api/integrations/social/server/twitter", {                                                 // 1
  tweetReply: function (v) {                                                                                           // 1
    tweetReply = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 8);                                                                                                                 // 1
var facebookReply = void 0;                                                                                            // 1
module.importSync("/imports/api/integrations/social/server/facebook", {                                                // 1
  facebookReply: function (v) {                                                                                        // 1
    facebookReply = v;                                                                                                 // 1
  }                                                                                                                    // 1
}, 9);                                                                                                                 // 1
var Messages = void 0,                                                                                                 // 1
    FormSchema = void 0;                                                                                               // 1
module.importSync("/imports/api/conversations/messages", {                                                             // 1
  Messages: function (v) {                                                                                             // 1
    Messages = v;                                                                                                      // 1
  },                                                                                                                   // 1
  FormSchema: function (v) {                                                                                           // 1
    FormSchema = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 10);                                                                                                                // 1
var Conversations = void 0,                                                                                            // 1
    ConversationIdsSchema = void 0,                                                                                    // 1
    AssignSchema = void 0,                                                                                             // 1
    ChangeStatusSchema = void 0;                                                                                       // 1
module.importSync("/imports/api/conversations/conversations", {                                                        // 1
  Conversations: function (v) {                                                                                        // 1
    Conversations = v;                                                                                                 // 1
  },                                                                                                                   // 1
  ConversationIdsSchema: function (v) {                                                                                // 1
    ConversationIdsSchema = v;                                                                                         // 1
  },                                                                                                                   // 1
  AssignSchema: function (v) {                                                                                         // 1
    AssignSchema = v;                                                                                                  // 1
  },                                                                                                                   // 1
  ChangeStatusSchema: function (v) {                                                                                   // 1
    ChangeStatusSchema = v;                                                                                            // 1
  }                                                                                                                    // 1
}, 11);                                                                                                                // 1
var CONVERSATION_STATUSES = void 0;                                                                                    // 1
module.importSync("/imports/api/conversations/constants", {                                                            // 1
  CONVERSATION_STATUSES: function (v) {                                                                                // 1
    CONVERSATION_STATUSES = v;                                                                                         // 1
  }                                                                                                                    // 1
}, 12);                                                                                                                // 1
var conversationsChanged = void 0,                                                                                     // 1
    messageInserted = void 0;                                                                                          // 1
module.importSync("./apolloPubSubs", {                                                                                 // 1
  conversationsChanged: function (v) {                                                                                 // 1
    conversationsChanged = v;                                                                                          // 1
  },                                                                                                                   // 1
  messageInserted: function (v) {                                                                                      // 1
    messageInserted = v;                                                                                               // 1
  }                                                                                                                    // 1
}, 13);                                                                                                                // 1
                                                                                                                       //
/*                                                                                                                     // 22
 * all possible users they can get notifications                                                                       //
 */var conversationNotifReceivers = function (conversation, currentUserId) {                                           //
  var userIds = []; // assigned user can get notifications                                                             // 26
                                                                                                                       //
  if (conversation.assignedUserId) {                                                                                   // 29
    userIds.push(conversation.assignedUserId);                                                                         // 30
  } // participated users can get notifications                                                                        // 31
                                                                                                                       //
                                                                                                                       //
  if (conversation.participatedUserIds) {                                                                              // 34
    userIds = _.union(userIds, conversation.participatedUserIds);                                                      // 35
  } // exclude current user                                                                                            // 36
                                                                                                                       //
                                                                                                                       //
  userIds = _.without(userIds, currentUserId);                                                                         // 39
  return userIds;                                                                                                      // 41
}; /*                                                                                                                  // 42
    * create new message from admin                                                                                    //
    */                                                                                                                 //
                                                                                                                       //
var addMessage = new ValidatedMethod({                                                                                 // 47
  name: 'conversations.addMessage',                                                                                    // 48
  mixins: [ErxesMixin],                                                                                                // 49
  validate: FormSchema.validator(),                                                                                    // 50
  run: function (_doc) {                                                                                               // 52
    var doc = _doc;                                                                                                    // 53
    var conversation = Conversations.findOne(doc.conversationId);                                                      // 54
                                                                                                                       //
    if (!conversation) {                                                                                               // 56
      throw new Meteor.Error('conversations.addMessage.conversationNotFound', 'Conversation not found');               // 57
    }                                                                                                                  // 61
                                                                                                                       //
    var integration = conversation.integration(); // normalize content, attachments                                    // 63
                                                                                                                       //
    var content = doc.content || '';                                                                                   // 66
    var attachments = doc.attachments || [];                                                                           // 67
    doc.content = content;                                                                                             // 69
    doc.attachments = attachments; // if there is no attachments and no content then throw content required            // 70
    // error                                                                                                           // 73
                                                                                                                       //
    if (attachments.length === 0 && !strip(content)) {                                                                 // 74
      throw new Meteor.Error('conversations.addMessage.contentRequired', 'Content is required');                       // 75
    } // setting conversation's content to last message                                                                // 76
                                                                                                                       //
                                                                                                                       //
    Conversations.update({                                                                                             // 79
      _id: doc.conversationId                                                                                          // 79
    }, {                                                                                                               // 79
      $set: {                                                                                                          // 79
        content: content                                                                                               // 79
      }                                                                                                                // 79
    });                                                                                                                // 79
    var title = 'You have a new message.'; // send notification                                                        // 81
                                                                                                                       //
    sendNotification({                                                                                                 // 84
      createdUser: this.userId,                                                                                        // 85
      notifType: 'conversationAddMessage',                                                                             // 86
      title: title,                                                                                                    // 87
      content: content,                                                                                                // 88
      link: "/inbox/details/" + conversation._id,                                                                      // 89
      receivers: conversationNotifReceivers(conversation, this.userId)                                                 // 90
    });                                                                                                                // 84
    var userId = this.userId; // do not send internal message to third service integrations                            // 93
                                                                                                                       //
    if (doc.internal) {                                                                                                // 96
      return Messages.insert((0, _extends3.default)({}, doc, {                                                         // 97
        userId: userId                                                                                                 // 97
      }));                                                                                                             // 97
    } // send reply to twitter                                                                                         // 98
                                                                                                                       //
                                                                                                                       //
    if (integration.kind === KIND_CHOICES.TWITTER) {                                                                   // 101
      return tweetReply(conversation, strip(content));                                                                 // 102
    }                                                                                                                  // 103
                                                                                                                       //
    var messageId = Messages.insert((0, _extends3.default)({}, doc, {                                                  // 105
      userId: userId                                                                                                   // 105
    })); // notify graphl subscription                                                                                 // 105
                                                                                                                       //
    messageInserted(messageId);                                                                                        // 108
    var customer = conversation.customer(); // if conversation's integration kind is form then send reply to           // 110
    // customer's email                                                                                                // 113
                                                                                                                       //
    var kind = integration.kind;                                                                                       // 114
    var email = customer ? customer.email : '';                                                                        // 115
                                                                                                                       //
    if (kind === KIND_CHOICES.FORM && email) {                                                                         // 117
      sendEmail({                                                                                                      // 118
        to: customer.email,                                                                                            // 119
        subject: 'Reply',                                                                                              // 120
        template: {                                                                                                    // 121
          name: 'notification',                                                                                        // 122
          data: {                                                                                                      // 123
            notification: {                                                                                            // 124
              title: 'reply',                                                                                          // 125
              content: content,                                                                                        // 126
              date: new Date()                                                                                         // 127
            }                                                                                                          // 124
          }                                                                                                            // 123
        }                                                                                                              // 121
      });                                                                                                              // 118
    } // send reply to facebook                                                                                        // 132
                                                                                                                       //
                                                                                                                       //
    if (integration.kind === KIND_CHOICES.FACEBOOK) {                                                                  // 135
      // when facebook kind is feed, assign commentId in extraData                                                     // 136
      facebookReply(conversation, strip(content), messageId);                                                          // 137
    }                                                                                                                  // 138
                                                                                                                       //
    return messageId;                                                                                                  // 140
  }                                                                                                                    // 141
});                                                                                                                    // 47
                                                                                                                       //
var checkConversationsExistance = function (conversationIds) {                                                         // 144
  var selector = {                                                                                                     // 145
    _id: {                                                                                                             // 145
      $in: conversationIds                                                                                             // 145
    }                                                                                                                  // 145
  };                                                                                                                   // 145
  var conversations = Conversations.find(selector).fetch();                                                            // 146
                                                                                                                       //
  if (conversations.length !== conversationIds.length) {                                                               // 148
    throw new Meteor.Error('conversations.conversationNotFound', 'Conversation not found.');                           // 149
  }                                                                                                                    // 150
                                                                                                                       //
  return {                                                                                                             // 152
    selector: selector,                                                                                                // 152
    conversations: conversations                                                                                       // 152
  };                                                                                                                   // 152
}; /*                                                                                                                  // 153
    * assign employee to conversation                                                                                  //
    */                                                                                                                 //
                                                                                                                       //
var assign = new ValidatedMethod({                                                                                     // 158
  name: 'conversations.assign',                                                                                        // 159
  mixins: [ErxesMixin],                                                                                                // 160
  validate: AssignSchema.validator(),                                                                                  // 161
  run: function (_ref) {                                                                                               // 163
    var _this = this;                                                                                                  // 163
                                                                                                                       //
    var conversationIds = _ref.conversationIds,                                                                        // 163
        assignedUserId = _ref.assignedUserId;                                                                          // 163
                                                                                                                       //
    // check conversations existance                                                                                   // 164
    var _checkConversationsEx = checkConversationsExistance(conversationIds),                                          // 163
        selector = _checkConversationsEx.selector;                                                                     // 163
                                                                                                                       //
    if (!Meteor.users.findOne(assignedUserId)) {                                                                       // 167
      throw new Meteor.Error('conversations.assign.userNotFound', 'User not found.');                                  // 168
    }                                                                                                                  // 169
                                                                                                                       //
    Conversations.update({                                                                                             // 171
      _id: {                                                                                                           // 172
        $in: conversationIds                                                                                           // 172
      }                                                                                                                // 172
    }, {                                                                                                               // 172
      $set: {                                                                                                          // 173
        assignedUserId: assignedUserId                                                                                 // 173
      }                                                                                                                // 173
    }, {                                                                                                               // 173
      multi: true                                                                                                      // 174
    }); // notify graphl subscription                                                                                  // 174
                                                                                                                       //
    conversationsChanged(conversationIds, 'statusChanged');                                                            // 178
    var updatedConversations = Conversations.find(selector).fetch(); // send notification                              // 180
                                                                                                                       //
    _.each(updatedConversations, function (conversation) {                                                             // 183
      var content = 'Assigned user has changed';                                                                       // 184
      sendNotification({                                                                                               // 186
        createdUser: _this.userId,                                                                                     // 187
        notifType: 'conversationAssigneeChange',                                                                       // 188
        title: content,                                                                                                // 189
        content: content,                                                                                              // 190
        link: "/inbox/details/" + conversation._id,                                                                    // 191
        receivers: conversationNotifReceivers(conversation, _this.userId)                                              // 192
      });                                                                                                              // 186
    });                                                                                                                // 194
  }                                                                                                                    // 195
});                                                                                                                    // 158
var unassign = new ValidatedMethod({                                                                                   // 201
  name: 'conversations.unassign',                                                                                      // 202
  mixins: [ErxesMixin],                                                                                                // 203
  validate: ConversationIdsSchema.validator(),                                                                         // 204
  run: function (_ref2) {                                                                                              // 206
    var conversationIds = _ref2.conversationIds;                                                                       // 206
    // check conversations existance                                                                                   // 207
    checkConversationsExistance(conversationIds);                                                                      // 208
    Conversations.update({                                                                                             // 210
      _id: {                                                                                                           // 211
        $in: conversationIds                                                                                           // 211
      }                                                                                                                // 211
    }, {                                                                                                               // 211
      $unset: {                                                                                                        // 212
        assignedUserId: 1                                                                                              // 212
      }                                                                                                                // 212
    }, {                                                                                                               // 212
      multi: true                                                                                                      // 213
    }); // notify graphl subscription                                                                                  // 213
                                                                                                                       //
    conversationsChanged(conversationIds, 'statusChanged');                                                            // 217
  }                                                                                                                    // 218
});                                                                                                                    // 201
var changeStatus = new ValidatedMethod({                                                                               // 224
  name: 'conversations.changeStatus',                                                                                  // 225
  mixins: [ErxesMixin],                                                                                                // 226
  validate: ChangeStatusSchema.validator(),                                                                            // 227
  run: function (_ref3) {                                                                                              // 229
    var _this2 = this;                                                                                                 // 229
                                                                                                                       //
    var conversationIds = _ref3.conversationIds,                                                                       // 229
        status = _ref3.status;                                                                                         // 229
                                                                                                                       //
    // check conversations existance                                                                                   // 230
    var _checkConversationsEx2 = checkConversationsExistance(conversationIds),                                         // 229
        conversations = _checkConversationsEx2.conversations;                                                          // 229
                                                                                                                       //
    Conversations.update({                                                                                             // 233
      _id: {                                                                                                           // 233
        $in: conversationIds                                                                                           // 233
      }                                                                                                                // 233
    }, {                                                                                                               // 233
      $set: {                                                                                                          // 233
        status: status                                                                                                 // 233
      }                                                                                                                // 233
    }, {                                                                                                               // 233
      multi: true                                                                                                      // 233
    }); // notify graphl subscription                                                                                  // 233
                                                                                                                       //
    conversationsChanged(conversationIds, 'statusChanged'); // send notification                                       // 236
                                                                                                                       //
    _.each(conversations, function (conversation) {                                                                    // 239
      // if associated integration's notify customer config is setted as true                                          // 240
      // send email to customer, when conversation close                                                               // 241
      if (status === CONVERSATION_STATUSES.CLOSED) {                                                                   // 242
        var customer = conversation.customer();                                                                        // 243
        var integration = conversation.integration();                                                                  // 244
        var messengerData = integration.messengerData || {};                                                           // 245
        var notifyCustomer = messengerData.notifyCustomer || false;                                                    // 246
                                                                                                                       //
        if (notifyCustomer && customer.email) {                                                                        // 248
          // send email to customer                                                                                    // 249
          sendEmail({                                                                                                  // 250
            to: customer.email,                                                                                        // 251
            subject: 'Conversation detail',                                                                            // 252
            template: {                                                                                                // 253
              name: 'conversationDetail',                                                                              // 254
              data: {                                                                                                  // 255
                conversationDetail: {                                                                                  // 256
                  title: 'Conversation detail',                                                                        // 257
                  messages: Messages.find({                                                                            // 258
                    conversationId: conversation._id                                                                   // 258
                  }).fetch(),                                                                                          // 258
                  date: new Date()                                                                                     // 259
                }                                                                                                      // 256
              }                                                                                                        // 255
            }                                                                                                          // 253
          });                                                                                                          // 250
        }                                                                                                              // 264
      }                                                                                                                // 265
                                                                                                                       //
      var content = 'Conversation status has changed.';                                                                // 267
      sendNotification({                                                                                               // 269
        createdUser: _this2.userId,                                                                                    // 270
        notifType: 'conversationStateChange',                                                                          // 271
        title: content,                                                                                                // 272
        content: content,                                                                                              // 273
        link: "/inbox/details/" + conversation._id,                                                                    // 274
        receivers: conversationNotifReceivers(conversation, _this2.userId)                                             // 275
      });                                                                                                              // 269
    });                                                                                                                // 277
  }                                                                                                                    // 278
});                                                                                                                    // 224
var star = new ValidatedMethod({                                                                                       // 284
  name: 'conversations.star',                                                                                          // 285
  mixins: [ErxesMixin],                                                                                                // 286
  validate: ConversationIdsSchema.validator(),                                                                         // 287
  run: function (_ref4) {                                                                                              // 289
    var conversationIds = _ref4.conversationIds;                                                                       // 289
    // check conversations existance                                                                                   // 290
    checkConversationsExistance(conversationIds);                                                                      // 291
    Meteor.users.update(this.userId, {                                                                                 // 293
      $addToSet: {                                                                                                     // 294
        'details.starredConversationIds': {                                                                            // 295
          $each: conversationIds                                                                                       // 295
        }                                                                                                              // 295
      }                                                                                                                // 294
    });                                                                                                                // 293
  }                                                                                                                    // 298
});                                                                                                                    // 284
var unstar = new ValidatedMethod({                                                                                     // 304
  name: 'conversations.unstar',                                                                                        // 305
  mixins: [ErxesMixin],                                                                                                // 306
  validate: ConversationIdsSchema.validator(),                                                                         // 307
  run: function (_ref5) {                                                                                              // 309
    var conversationIds = _ref5.conversationIds;                                                                       // 309
    // check conversations existance                                                                                   // 310
    checkConversationsExistance(conversationIds);                                                                      // 311
    Meteor.users.update(this.userId, {                                                                                 // 313
      $pull: {                                                                                                         // 314
        'details.starredConversationIds': {                                                                            // 314
          $in: conversationIds                                                                                         // 314
        }                                                                                                              // 314
      }                                                                                                                // 314
    });                                                                                                                // 313
  }                                                                                                                    // 316
});                                                                                                                    // 304
var toggleParticipate = new ValidatedMethod({                                                                          // 322
  name: 'conversations.toggleParticipate',                                                                             // 323
  mixins: [ErxesMixin],                                                                                                // 324
  validate: ConversationIdsSchema.validator(),                                                                         // 325
  run: function (_ref6) {                                                                                              // 327
    var conversationIds = _ref6.conversationIds;                                                                       // 327
                                                                                                                       //
    // check conversations existance                                                                                   // 328
    var _checkConversationsEx3 = checkConversationsExistance(conversationIds),                                         // 327
        selector = _checkConversationsEx3.selector;                                                                    // 327
                                                                                                                       //
    var extendSelector = (0, _extends3.default)({}, selector, {                                                        // 331
      participatedUserIds: {                                                                                           // 333
        $in: [this.userId]                                                                                             // 333
      }                                                                                                                // 333
    }); // not previously added                                                                                        // 331
                                                                                                                       //
    if (Conversations.find(extendSelector).count() === 0) {                                                            // 337
      Conversations.update(selector, {                                                                                 // 338
        $addToSet: {                                                                                                   // 340
          participatedUserIds: this.userId                                                                             // 340
        }                                                                                                              // 340
      }, {                                                                                                             // 340
        multi: true                                                                                                    // 341
      });                                                                                                              // 341
    } else {                                                                                                           // 343
      // remove                                                                                                        // 344
      Conversations.update(selector, {                                                                                 // 345
        $pull: {                                                                                                       // 347
          participatedUserIds: {                                                                                       // 347
            $in: [this.userId]                                                                                         // 347
          }                                                                                                            // 347
        }                                                                                                              // 347
      }, {                                                                                                             // 347
        multi: true                                                                                                    // 348
      });                                                                                                              // 348
    } // notify graphl subscription                                                                                    // 350
                                                                                                                       //
                                                                                                                       //
    conversationsChanged(conversationIds, 'participatedStateChanged');                                                 // 353
  }                                                                                                                    // 354
});                                                                                                                    // 322
var markAsRead = new ValidatedMethod({                                                                                 // 360
  name: 'conversations.markAsRead',                                                                                    // 361
  mixins: [ErxesMixin],                                                                                                // 362
  validate: function (_ref7) {                                                                                         // 364
    var conversationId = _ref7.conversationId;                                                                         // 364
    check(conversationId, String);                                                                                     // 365
  },                                                                                                                   // 366
  run: function (_ref8) {                                                                                              // 368
    var conversationId = _ref8.conversationId;                                                                         // 368
    var conversation = Conversations.findOne({                                                                         // 369
      _id: conversationId                                                                                              // 369
    });                                                                                                                // 369
                                                                                                                       //
    if (conversation) {                                                                                                // 371
      var readUserIds = conversation.readUserIds; // if current user is first one                                      // 372
                                                                                                                       //
      if (!readUserIds) {                                                                                              // 375
        return Conversations.update({                                                                                  // 376
          _id: conversationId                                                                                          // 377
        }, {                                                                                                           // 377
          $set: {                                                                                                      // 378
            readUserIds: [this.userId]                                                                                 // 378
          }                                                                                                            // 378
        });                                                                                                            // 378
      } // if current user is not in read users list then add it                                                       // 380
                                                                                                                       //
                                                                                                                       //
      if (!readUserIds.includes(this.userId)) {                                                                        // 383
        return Conversations.update({                                                                                  // 384
          _id: conversationId                                                                                          // 385
        }, {                                                                                                           // 385
          $push: {                                                                                                     // 386
            readUserIds: this.userId                                                                                   // 386
          }                                                                                                            // 386
        });                                                                                                            // 386
      }                                                                                                                // 388
    }                                                                                                                  // 389
                                                                                                                       //
    return 'not affected';                                                                                             // 391
  }                                                                                                                    // 392
});                                                                                                                    // 360
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"constants.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/conversations/constants.js                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  CONVERSATION_STATUSES: function () {                                                                                 // 1
    return CONVERSATION_STATUSES;                                                                                      // 1
  },                                                                                                                   // 1
  FACEBOOK_DATA_KINDS: function () {                                                                                   // 1
    return FACEBOOK_DATA_KINDS;                                                                                        // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var CONVERSATION_STATUSES = {                                                                                          // 1
  NEW: 'new',                                                                                                          // 2
  OPEN: 'open',                                                                                                        // 3
  CLOSED: 'closed',                                                                                                    // 4
  ALL_LIST: ['new', 'open', 'closed']                                                                                  // 5
};                                                                                                                     // 1
var FACEBOOK_DATA_KINDS = {                                                                                            // 8
  FEED: 'feed',                                                                                                        // 9
  MESSENGER: 'messenger',                                                                                              // 10
  ALL_LIST: ['feed', 'messenger']                                                                                      // 11
};                                                                                                                     // 8
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"conversations.js":["babel-runtime/helpers/extends","babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","faker","meteor/meteor","meteor/random","meteor/dburles:factory","meteor/aldeed:simple-schema","/imports/api/customers/customers","/imports/api/integrations/integrations","/imports/api/tags/utils","./constants",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/conversations/conversations.js                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = require("babel-runtime/helpers/extends");                                                              //
                                                                                                                       //
var _extends3 = _interopRequireDefault(_extends2);                                                                     //
                                                                                                                       //
var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");                                                //
                                                                                                                       //
var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                                       //
                                                                                                                       //
var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");                          //
                                                                                                                       //
var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                                 //
                                                                                                                       //
var _inherits2 = require("babel-runtime/helpers/inherits");                                                            //
                                                                                                                       //
var _inherits3 = _interopRequireDefault(_inherits2);                                                                   //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
module.export({                                                                                                        // 1
  Conversations: function () {                                                                                         // 1
    return Conversations;                                                                                              // 1
  },                                                                                                                   // 1
  addParticipator: function () {                                                                                       // 1
    return addParticipator;                                                                                            // 1
  },                                                                                                                   // 1
  ConversationIdsSchema: function () {                                                                                 // 1
    return ConversationIdsSchema;                                                                                      // 1
  },                                                                                                                   // 1
  AssignSchema: function () {                                                                                          // 1
    return AssignSchema;                                                                                               // 1
  },                                                                                                                   // 1
  ChangeStatusSchema: function () {                                                                                    // 1
    return ChangeStatusSchema;                                                                                         // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var faker = void 0;                                                                                                    // 1
module.importSync("faker", {                                                                                           // 1
  "default": function (v) {                                                                                            // 1
    faker = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var Random = void 0;                                                                                                   // 1
module.importSync("meteor/random", {                                                                                   // 1
  Random: function (v) {                                                                                               // 1
    Random = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var Factory = void 0;                                                                                                  // 1
module.importSync("meteor/dburles:factory", {                                                                          // 1
  Factory: function (v) {                                                                                              // 1
    Factory = v;                                                                                                       // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var SimpleSchema = void 0;                                                                                             // 1
module.importSync("meteor/aldeed:simple-schema", {                                                                     // 1
  SimpleSchema: function (v) {                                                                                         // 1
    SimpleSchema = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var Customers = void 0;                                                                                                // 1
module.importSync("/imports/api/customers/customers", {                                                                // 1
  Customers: function (v) {                                                                                            // 1
    Customers = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
var Integrations = void 0;                                                                                             // 1
module.importSync("/imports/api/integrations/integrations", {                                                          // 1
  Integrations: function (v) {                                                                                         // 1
    Integrations = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 6);                                                                                                                 // 1
var TagsCollection = void 0,                                                                                           // 1
    tagsHelper = void 0,                                                                                               // 1
    tagSchemaOptions = void 0;                                                                                         // 1
module.importSync("/imports/api/tags/utils", {                                                                         // 1
  TagsCollection: function (v) {                                                                                       // 1
    TagsCollection = v;                                                                                                // 1
  },                                                                                                                   // 1
  tagsHelper: function (v) {                                                                                           // 1
    tagsHelper = v;                                                                                                    // 1
  },                                                                                                                   // 1
  tagSchemaOptions: function (v) {                                                                                     // 1
    tagSchemaOptions = v;                                                                                              // 1
  }                                                                                                                    // 1
}, 7);                                                                                                                 // 1
var CONVERSATION_STATUSES = void 0,                                                                                    // 1
    FACEBOOK_DATA_KINDS = void 0;                                                                                      // 1
module.importSync("./constants", {                                                                                     // 1
  CONVERSATION_STATUSES: function (v) {                                                                                // 1
    CONVERSATION_STATUSES = v;                                                                                         // 1
  },                                                                                                                   // 1
  FACEBOOK_DATA_KINDS: function (v) {                                                                                  // 1
    FACEBOOK_DATA_KINDS = v;                                                                                           // 1
  }                                                                                                                    // 1
}, 8);                                                                                                                 // 1
                                                                                                                       //
var ConversationsCollection = function (_TagsCollection) {                                                             //
  (0, _inherits3.default)(ConversationsCollection, _TagsCollection);                                                   //
                                                                                                                       //
  function ConversationsCollection() {                                                                                 //
    (0, _classCallCheck3.default)(this, ConversationsCollection);                                                      //
    return (0, _possibleConstructorReturn3.default)(this, _TagsCollection.apply(this, arguments));                     //
  }                                                                                                                    //
                                                                                                                       //
  ConversationsCollection.prototype.insert = function () {                                                             //
    function insert(doc, callback) {                                                                                   //
      var conversation = Object.assign({                                                                               // 14
        createdAt: new Date(),                                                                                         // 16
        number: this.find().count() + 1,                                                                               // 17
        messageCount: 0                                                                                                // 18
      }, doc);                                                                                                         // 15
      return _TagsCollection.prototype.insert.call(this, conversation, callback);                                      // 23
    }                                                                                                                  // 24
                                                                                                                       //
    return insert;                                                                                                     //
  }();                                                                                                                 //
                                                                                                                       //
  return ConversationsCollection;                                                                                      //
}(TagsCollection);                                                                                                     //
                                                                                                                       //
var Conversations = new ConversationsCollection('conversations');                                                      // 27
Conversations.TAG_TYPE = 'conversation';                                                                               // 29
Conversations.helpers((0, _extends3.default)({                                                                         // 31
  customer: function () {                                                                                              // 32
    return Customers.findOne(this.customerId) || {};                                                                   // 33
  },                                                                                                                   // 34
  user: function () {                                                                                                  // 35
    return Meteor.users.findOne(this.userId);                                                                          // 36
  },                                                                                                                   // 37
  integration: function () {                                                                                           // 38
    return Integrations.findOne(this.integrationId) || {};                                                             // 39
  },                                                                                                                   // 40
  assignedUser: function () {                                                                                          // 41
    return Meteor.users.findOne(this.assignedUserId);                                                                  // 42
  },                                                                                                                   // 43
  participatedUsers: function () {                                                                                     // 44
    var query = {                                                                                                      // 45
      _id: {                                                                                                           // 45
        $in: this.participatedUserIds || []                                                                            // 45
      }                                                                                                                // 45
    };                                                                                                                 // 45
    return Meteor.users.find(query).fetch();                                                                           // 46
  },                                                                                                                   // 47
  participatorCount: function () {                                                                                     // 48
    return this.participatedUserIds && this.participatedUserIds.length || 0;                                           // 49
  }                                                                                                                    // 50
}, tagsHelper));                                                                                                       // 31
                                                                                                                       //
var addParticipator = function (_ref) {                                                                                // 54
  var conversationId = _ref.conversationId,                                                                            // 54
      userId = _ref.userId;                                                                                            // 54
                                                                                                                       //
  if (conversationId && userId) {                                                                                      // 55
    Conversations.update(conversationId, {                                                                             // 56
      $addToSet: {                                                                                                     // 57
        participatedUserIds: userId                                                                                    // 57
      }                                                                                                                // 57
    });                                                                                                                // 56
  }                                                                                                                    // 59
};                                                                                                                     // 60
                                                                                                                       //
Conversations.deny({                                                                                                   // 62
  insert: function () {                                                                                                // 63
    return true;                                                                                                       // 64
  },                                                                                                                   // 65
  update: function () {                                                                                                // 66
    return true;                                                                                                       // 67
  },                                                                                                                   // 68
  remove: function () {                                                                                                // 69
    return true;                                                                                                       // 70
  }                                                                                                                    // 71
}); // twitter schema ====================                                                                             // 62
                                                                                                                       //
var twitterDirectMessageSchema = new SimpleSchema({                                                                    // 75
  senderId: {                                                                                                          // 76
    type: Number                                                                                                       // 77
  },                                                                                                                   // 76
  senderIdStr: {                                                                                                       // 79
    type: String                                                                                                       // 80
  },                                                                                                                   // 79
  recipientId: {                                                                                                       // 82
    type: Number                                                                                                       // 83
  },                                                                                                                   // 82
  recipientIdStr: {                                                                                                    // 85
    type: String                                                                                                       // 86
  }                                                                                                                    // 85
});                                                                                                                    // 75
var twitterSchema = new SimpleSchema({                                                                                 // 90
  id: {                                                                                                                // 91
    type: Number,                                                                                                      // 92
    optional: true                                                                                                     // 93
  },                                                                                                                   // 91
  idStr: {                                                                                                             // 95
    type: String,                                                                                                      // 96
    optional: true                                                                                                     // 97
  },                                                                                                                   // 95
  screenName: {                                                                                                        // 99
    type: String,                                                                                                      // 100
    optional: true                                                                                                     // 101
  },                                                                                                                   // 99
  isDirectMessage: {                                                                                                   // 103
    type: Boolean                                                                                                      // 104
  },                                                                                                                   // 103
  directMessage: {                                                                                                     // 106
    type: twitterDirectMessageSchema,                                                                                  // 107
    optional: true                                                                                                     // 108
  }                                                                                                                    // 106
}); // facebook schema                                                                                                 // 90
                                                                                                                       //
var facebookSchema = new SimpleSchema({                                                                                // 113
  kind: {                                                                                                              // 114
    type: String,                                                                                                      // 115
    allowedValues: FACEBOOK_DATA_KINDS.ALL_LIST                                                                        // 116
  },                                                                                                                   // 114
  senderName: {                                                                                                        // 118
    type: String,                                                                                                      // 119
    optional: true                                                                                                     // 120
  },                                                                                                                   // 118
  senderId: {                                                                                                          // 122
    type: String                                                                                                       // 123
  },                                                                                                                   // 122
  recipientId: {                                                                                                       // 125
    type: String,                                                                                                      // 126
    optional: true                                                                                                     // 127
  },                                                                                                                   // 125
  // when wall post                                                                                                    // 130
  postId: {                                                                                                            // 131
    type: String,                                                                                                      // 132
    optional: true                                                                                                     // 133
  },                                                                                                                   // 131
  pageId: {                                                                                                            // 136
    type: String                                                                                                       // 137
  }                                                                                                                    // 136
});                                                                                                                    // 113
Conversations.schema = new SimpleSchema((0, _extends3.default)({                                                       // 141
  content: {                                                                                                           // 142
    type: String                                                                                                       // 143
  },                                                                                                                   // 142
  integrationId: {                                                                                                     // 145
    type: String,                                                                                                      // 146
    regEx: SimpleSchema.RegEx.Id                                                                                       // 147
  },                                                                                                                   // 145
  customerId: {                                                                                                        // 149
    type: String,                                                                                                      // 150
    regEx: SimpleSchema.RegEx.Id,                                                                                      // 151
    optional: true                                                                                                     // 152
  },                                                                                                                   // 149
  userId: {                                                                                                            // 154
    type: String,                                                                                                      // 155
    optional: true,                                                                                                    // 156
    regEx: SimpleSchema.RegEx.Id                                                                                       // 157
  },                                                                                                                   // 154
  twitterData: {                                                                                                       // 159
    type: twitterSchema,                                                                                               // 160
    optional: true                                                                                                     // 161
  },                                                                                                                   // 159
  facebookData: {                                                                                                      // 163
    type: facebookSchema,                                                                                              // 164
    optional: true                                                                                                     // 165
  },                                                                                                                   // 163
  assignedUserId: {                                                                                                    // 167
    type: String,                                                                                                      // 168
    regEx: SimpleSchema.RegEx.Id,                                                                                      // 169
    optional: true                                                                                                     // 170
  },                                                                                                                   // 167
  status: {                                                                                                            // 172
    type: String,                                                                                                      // 173
    allowedValues: CONVERSATION_STATUSES.ALL_LIST                                                                      // 174
  },                                                                                                                   // 172
  participatedUserIds: {                                                                                               // 176
    type: [String],                                                                                                    // 177
    regEx: SimpleSchema.RegEx.Id,                                                                                      // 178
    optional: true                                                                                                     // 179
  },                                                                                                                   // 176
  // users's informed history                                                                                          // 182
  readUserIds: {                                                                                                       // 183
    type: [String],                                                                                                    // 184
    regEx: SimpleSchema.RegEx.Id,                                                                                      // 185
    optional: true                                                                                                     // 186
  },                                                                                                                   // 183
  createdAt: {                                                                                                         // 189
    type: Date                                                                                                         // 190
  },                                                                                                                   // 189
  // number of total messages                                                                                          // 193
  messageCount: {                                                                                                      // 194
    type: Number                                                                                                       // 195
  },                                                                                                                   // 194
  // number of total conversations                                                                                     // 198
  number: {                                                                                                            // 199
    type: Number                                                                                                       // 200
  }                                                                                                                    // 199
}, tagSchemaOptions()));                                                                                               // 141
Conversations.attachSchema(Conversations.schema); // Helper schemas. Using in method checks                            // 206
                                                                                                                       //
var ConversationIdsSchema = new SimpleSchema({                                                                         // 209
  conversationIds: {                                                                                                   // 210
    type: [String],                                                                                                    // 211
    regEx: SimpleSchema.RegEx.Id                                                                                       // 212
  }                                                                                                                    // 210
});                                                                                                                    // 209
var AssignSchema = new SimpleSchema({                                                                                  // 216
  conversationIds: {                                                                                                   // 217
    type: [String],                                                                                                    // 218
    regEx: SimpleSchema.RegEx.Id                                                                                       // 219
  },                                                                                                                   // 217
  assignedUserId: {                                                                                                    // 221
    type: String,                                                                                                      // 222
    regEx: SimpleSchema.RegEx.Id                                                                                       // 223
  }                                                                                                                    // 221
});                                                                                                                    // 216
var ChangeStatusSchema = new SimpleSchema({                                                                            // 227
  conversationIds: {                                                                                                   // 228
    type: [String],                                                                                                    // 229
    regEx: SimpleSchema.RegEx.Id                                                                                       // 230
  },                                                                                                                   // 228
  status: {                                                                                                            // 232
    type: String,                                                                                                      // 233
    allowedValues: CONVERSATION_STATUSES.ALL_LIST                                                                      // 234
  }                                                                                                                    // 232
});                                                                                                                    // 227
Conversations.publicFields = {                                                                                         // 238
  number: 1,                                                                                                           // 239
  assignedUserId: 1,                                                                                                   // 240
  content: 1,                                                                                                          // 241
  customerId: 1,                                                                                                       // 242
  userId: 1,                                                                                                           // 243
  integrationId: 1,                                                                                                    // 244
  status: 1,                                                                                                           // 245
  createdAt: 1,                                                                                                        // 246
  messageCount: 1,                                                                                                     // 247
  participatedUserIds: 1,                                                                                              // 248
  facebookData: 1,                                                                                                     // 249
  readUserIds: 1,                                                                                                      // 250
  tagIds: 1                                                                                                            // 251
};                                                                                                                     // 238
Factory.define('conversation', Conversations, {                                                                        // 254
  content: function () {                                                                                               // 255
    return faker.lorem.sentence();                                                                                     // 255
  },                                                                                                                   // 255
  customerId: function () {                                                                                            // 256
    return Random.id();                                                                                                // 256
  },                                                                                                                   // 256
  integrationId: function () {                                                                                         // 257
    return Factory.create('integration')._id;                                                                          // 257
  },                                                                                                                   // 257
  status: function () {                                                                                                // 258
    return CONVERSATION_STATUSES.NEW;                                                                                  // 258
  }                                                                                                                    // 258
});                                                                                                                    // 254
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"messageCountDenormalizer.js":["./messages.js","./conversations.js",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/conversations/messageCountDenormalizer.js                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Messages = void 0;                                                                                                 // 1
module.importSync("./messages.js", {                                                                                   // 1
  Messages: function (v) {                                                                                             // 1
    Messages = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Conversations = void 0;                                                                                            // 1
module.importSync("./conversations.js", {                                                                              // 1
  Conversations: function (v) {                                                                                        // 1
    Conversations = v;                                                                                                 // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var messageCountDenormalizer = {                                                                                       // 4
  _updateConversation: function (conversationId) {                                                                     // 5
    // Recalculate the correct message count direct from MongoDB                                                       // 6
    var messageCount = Messages.find({                                                                                 // 7
      conversationId: conversationId                                                                                   // 8
    }).count();                                                                                                        // 7
    Conversations.update(conversationId, {                                                                             // 11
      $set: {                                                                                                          // 11
        messageCount: messageCount                                                                                     // 11
      }                                                                                                                // 11
    });                                                                                                                // 11
  },                                                                                                                   // 12
  afterInsertMessage: function (message) {                                                                             // 14
    this._updateConversation(message.conversationId);                                                                  // 15
  },                                                                                                                   // 16
  // Here we need to take the list of messages being removed,                                                          // 18
  // selected *before* the update because otherwise we can't figure out                                                // 19
  // the relevant message id(s) (if the message has been deleted)                                                      // 20
  afterRemoveMessages: function (messages) {                                                                           // 21
    var _this = this;                                                                                                  // 21
                                                                                                                       //
    messages.forEach(function (message) {                                                                              // 22
      return _this._updateConversation(message.conversationId);                                                        // 22
    });                                                                                                                // 22
  }                                                                                                                    // 23
};                                                                                                                     // 4
module.export("default", exports.default = messageCountDenormalizer);                                                  // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"messages.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","faker","meteor/meteor","meteor/mongo","meteor/random","meteor/underscore","meteor/dburles:factory","meteor/aldeed:simple-schema","/imports/api/customers/customers","./messageCountDenormalizer.js","./conversations",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/conversations/messages.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");                                                //
                                                                                                                       //
var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                                       //
                                                                                                                       //
var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");                          //
                                                                                                                       //
var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                                 //
                                                                                                                       //
var _inherits2 = require("babel-runtime/helpers/inherits");                                                            //
                                                                                                                       //
var _inherits3 = _interopRequireDefault(_inherits2);                                                                   //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
module.export({                                                                                                        // 1
  Messages: function () {                                                                                              // 1
    return Messages;                                                                                                   // 1
  },                                                                                                                   // 1
  FormSchema: function () {                                                                                            // 1
    return FormSchema;                                                                                                 // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var faker = void 0;                                                                                                    // 1
module.importSync("faker", {                                                                                           // 1
  "default": function (v) {                                                                                            // 1
    faker = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var Mongo = void 0;                                                                                                    // 1
module.importSync("meteor/mongo", {                                                                                    // 1
  Mongo: function (v) {                                                                                                // 1
    Mongo = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var Random = void 0;                                                                                                   // 1
module.importSync("meteor/random", {                                                                                   // 1
  Random: function (v) {                                                                                               // 1
    Random = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
                                                                                                                       //
var _ = void 0;                                                                                                        // 1
                                                                                                                       //
module.importSync("meteor/underscore", {                                                                               // 1
  _: function (v) {                                                                                                    // 1
    _ = v;                                                                                                             // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var Factory = void 0;                                                                                                  // 1
module.importSync("meteor/dburles:factory", {                                                                          // 1
  Factory: function (v) {                                                                                              // 1
    Factory = v;                                                                                                       // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
var SimpleSchema = void 0;                                                                                             // 1
module.importSync("meteor/aldeed:simple-schema", {                                                                     // 1
  SimpleSchema: function (v) {                                                                                         // 1
    SimpleSchema = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 6);                                                                                                                 // 1
var Customers = void 0;                                                                                                // 1
module.importSync("/imports/api/customers/customers", {                                                                // 1
  Customers: function (v) {                                                                                            // 1
    Customers = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 7);                                                                                                                 // 1
var messageCountDenormalizer = void 0;                                                                                 // 1
module.importSync("./messageCountDenormalizer.js", {                                                                   // 1
  "default": function (v) {                                                                                            // 1
    messageCountDenormalizer = v;                                                                                      // 1
  }                                                                                                                    // 1
}, 8);                                                                                                                 // 1
var addParticipator = void 0;                                                                                          // 1
module.importSync("./conversations", {                                                                                 // 1
  addParticipator: function (v) {                                                                                      // 1
    addParticipator = v;                                                                                               // 1
  }                                                                                                                    // 1
}, 9);                                                                                                                 // 1
                                                                                                                       //
var MessagesCollection = function (_Mongo$Collection) {                                                                //
  (0, _inherits3.default)(MessagesCollection, _Mongo$Collection);                                                      //
                                                                                                                       //
  function MessagesCollection() {                                                                                      //
    (0, _classCallCheck3.default)(this, MessagesCollection);                                                           //
    return (0, _possibleConstructorReturn3.default)(this, _Mongo$Collection.apply(this, arguments));                   //
  }                                                                                                                    //
                                                                                                                       //
  MessagesCollection.prototype.insert = function () {                                                                  //
    function insert(doc, callback) {                                                                                   //
      var message = Object.assign({                                                                                    // 18
        createdAt: new Date()                                                                                          // 18
      }, doc);                                                                                                         // 18
                                                                                                                       //
      var result = _Mongo$Collection.prototype.insert.call(this, message, callback);                                   // 20
                                                                                                                       //
      messageCountDenormalizer.afterInsertMessage(message); // add created user to participators                       // 22
                                                                                                                       //
      if (message.userId) {                                                                                            // 25
        addParticipator({                                                                                              // 26
          conversationId: message.conversationId,                                                                      // 27
          userId: message.userId                                                                                       // 28
        });                                                                                                            // 26
      } // add mentioned users to participators                                                                        // 30
                                                                                                                       //
                                                                                                                       //
      _.each(message.mentionedUserIds || [], function (userId) {                                                       // 33
        addParticipator({                                                                                              // 34
          conversationId: message.conversationId,                                                                      // 35
          userId: userId                                                                                               // 36
        });                                                                                                            // 34
      });                                                                                                              // 38
                                                                                                                       //
      return result;                                                                                                   // 40
    }                                                                                                                  // 41
                                                                                                                       //
    return insert;                                                                                                     //
  }();                                                                                                                 //
                                                                                                                       //
  MessagesCollection.prototype.remove = function () {                                                                  //
    function remove(selector) {                                                                                        //
      var messages = this.find(selector).fetch();                                                                      // 44
                                                                                                                       //
      var result = _Mongo$Collection.prototype.remove.call(this, selector);                                            // 45
                                                                                                                       //
      messageCountDenormalizer.afterRemoveMessages(messages);                                                          // 47
      return result;                                                                                                   // 49
    }                                                                                                                  // 50
                                                                                                                       //
    return remove;                                                                                                     //
  }();                                                                                                                 //
                                                                                                                       //
  return MessagesCollection;                                                                                           //
}(Mongo.Collection);                                                                                                   //
                                                                                                                       //
var Messages = new MessagesCollection('conversation_messages');                                                        // 53
Messages.helpers({                                                                                                     // 55
  customer: function () {                                                                                              // 56
    return Customers.findOne(this.customerId);                                                                         // 57
  },                                                                                                                   // 58
  user: function () {                                                                                                  // 60
    return Meteor.users.findOne(this.userId);                                                                          // 61
  }                                                                                                                    // 62
});                                                                                                                    // 55
Messages.deny({                                                                                                        // 65
  insert: function () {                                                                                                // 66
    return true;                                                                                                       // 67
  },                                                                                                                   // 68
  update: function () {                                                                                                // 69
    return true;                                                                                                       // 70
  },                                                                                                                   // 71
  remove: function () {                                                                                                // 72
    return true;                                                                                                       // 73
  }                                                                                                                    // 74
});                                                                                                                    // 65
var FormSchema = new SimpleSchema({                                                                                    // 77
  // only required when there is no attachments                                                                        // 78
  content: {                                                                                                           // 79
    type: String,                                                                                                      // 80
    defaultValue: '',                                                                                                  // 81
    optional: true                                                                                                     // 82
  },                                                                                                                   // 79
  attachments: {                                                                                                       // 85
    type: [new SimpleSchema({                                                                                          // 86
      url: {                                                                                                           // 88
        type: String,                                                                                                  // 88
        optional: true                                                                                                 // 88
      },                                                                                                               // 88
      type: {                                                                                                          // 89
        type: String,                                                                                                  // 89
        optional: true                                                                                                 // 89
      },                                                                                                               // 89
      name: {                                                                                                          // 90
        type: String,                                                                                                  // 90
        optional: true                                                                                                 // 90
      },                                                                                                               // 90
      size: {                                                                                                          // 91
        type: Number,                                                                                                  // 91
        optional: true                                                                                                 // 91
      }                                                                                                                // 91
    })],                                                                                                               // 87
    optional: true                                                                                                     // 95
  },                                                                                                                   // 85
  mentionedUserIds: {                                                                                                  // 98
    type: [String],                                                                                                    // 99
    optional: true                                                                                                     // 100
  },                                                                                                                   // 98
  conversationId: {                                                                                                    // 103
    type: String,                                                                                                      // 104
    regEx: SimpleSchema.RegEx.Id                                                                                       // 105
  },                                                                                                                   // 103
  internal: {                                                                                                          // 108
    type: Boolean                                                                                                      // 109
  }                                                                                                                    // 108
});                                                                                                                    // 77
var facebookSchema = new SimpleSchema({                                                                                // 113
  commentId: {                                                                                                         // 114
    type: String,                                                                                                      // 115
    optional: true                                                                                                     // 116
  },                                                                                                                   // 114
  // comment, reaction, etc ...                                                                                        // 119
  item: {                                                                                                              // 120
    type: String,                                                                                                      // 121
    optional: true                                                                                                     // 122
  },                                                                                                                   // 120
  // when share photo                                                                                                  // 125
  photoId: {                                                                                                           // 126
    type: String,                                                                                                      // 127
    optional: true                                                                                                     // 128
  },                                                                                                                   // 126
  // when share video                                                                                                  // 131
  videoId: {                                                                                                           // 132
    type: String,                                                                                                      // 133
    optional: true                                                                                                     // 134
  },                                                                                                                   // 132
  link: {                                                                                                              // 137
    type: String,                                                                                                      // 138
    optional: true                                                                                                     // 139
  },                                                                                                                   // 137
  reactionType: {                                                                                                      // 142
    type: String,                                                                                                      // 143
    optional: true                                                                                                     // 144
  },                                                                                                                   // 142
  senderId: {                                                                                                          // 147
    type: String,                                                                                                      // 148
    optional: true                                                                                                     // 149
  },                                                                                                                   // 147
  senderName: {                                                                                                        // 152
    type: String,                                                                                                      // 153
    optional: true                                                                                                     // 154
  }                                                                                                                    // 152
});                                                                                                                    // 113
Messages.schema = new SimpleSchema([FormSchema, {                                                                      // 158
  customerId: {                                                                                                        // 161
    type: String,                                                                                                      // 162
    optional: true,                                                                                                    // 163
    regEx: SimpleSchema.RegEx.Id                                                                                       // 164
  },                                                                                                                   // 161
  userId: {                                                                                                            // 167
    type: String,                                                                                                      // 168
    optional: true,                                                                                                    // 169
    regEx: SimpleSchema.RegEx.Id                                                                                       // 170
  },                                                                                                                   // 167
  createdAt: {                                                                                                         // 173
    type: Date                                                                                                         // 174
  },                                                                                                                   // 173
  isCustomerRead: {                                                                                                    // 177
    type: Boolean,                                                                                                     // 178
    optional: true                                                                                                     // 179
  },                                                                                                                   // 177
  engageData: {                                                                                                        // 182
    type: Object,                                                                                                      // 183
    optional: true,                                                                                                    // 184
    blackbox: true                                                                                                     // 185
  },                                                                                                                   // 182
  formWidgetData: {                                                                                                    // 188
    type: Object,                                                                                                      // 189
    optional: true,                                                                                                    // 190
    blackbox: true                                                                                                     // 191
  },                                                                                                                   // 188
  facebookData: {                                                                                                      // 194
    type: facebookSchema,                                                                                              // 195
    optional: true                                                                                                     // 196
  }                                                                                                                    // 194
}]);                                                                                                                   // 160
Messages.attachSchema(Messages.schema);                                                                                // 201
Messages.publicFields = {                                                                                              // 203
  content: 1,                                                                                                          // 204
  attachments: 1,                                                                                                      // 205
  mentionedUserIds: 1,                                                                                                 // 206
  conversationId: 1,                                                                                                   // 207
  customerId: 1,                                                                                                       // 208
  userId: 1,                                                                                                           // 209
  createdAt: 1,                                                                                                        // 210
  engageData: 1,                                                                                                       // 211
  formWidgetData: 1,                                                                                                   // 212
  facebookData: 1,                                                                                                     // 213
  internal: 1                                                                                                          // 214
};                                                                                                                     // 203
Factory.define('message', Messages, {                                                                                  // 217
  content: function () {                                                                                               // 218
    return faker.lorem.sentence();                                                                                     // 218
  },                                                                                                                   // 218
  conversationId: function () {                                                                                        // 219
    return Random.id();                                                                                                // 219
  },                                                                                                                   // 219
  customerId: function () {                                                                                            // 220
    return Random.id();                                                                                                // 220
  },                                                                                                                   // 220
  userId: function () {                                                                                                // 221
    return Random.id();                                                                                                // 221
  },                                                                                                                   // 221
  internal: function () {                                                                                              // 222
    return false;                                                                                                      // 222
  }                                                                                                                    // 222
});                                                                                                                    // 217
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"utils.js":["babel-runtime/helpers/extends","./conversations","./messages","./constants",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/conversations/utils.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = require("babel-runtime/helpers/extends");                                                              //
                                                                                                                       //
var _extends3 = _interopRequireDefault(_extends2);                                                                     //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
module.export({                                                                                                        // 1
  createConversation: function () {                                                                                    // 1
    return createConversation;                                                                                         // 1
  },                                                                                                                   // 1
  createMessage: function () {                                                                                         // 1
    return createMessage;                                                                                              // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Conversations = void 0;                                                                                            // 1
module.importSync("./conversations", {                                                                                 // 1
  Conversations: function (v) {                                                                                        // 1
    Conversations = v;                                                                                                 // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Messages = void 0;                                                                                                 // 1
module.importSync("./messages", {                                                                                      // 1
  Messages: function (v) {                                                                                             // 1
    Messages = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var CONVERSATION_STATUSES = void 0;                                                                                    // 1
module.importSync("./constants", {                                                                                     // 1
  CONVERSATION_STATUSES: function (v) {                                                                                // 1
    CONVERSATION_STATUSES = v;                                                                                         // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
                                                                                                                       //
var createConversation = function (doc) {                                                                              // 5
  return Conversations.insert((0, _extends3.default)({}, doc, {                                                        // 6
    status: CONVERSATION_STATUSES.NEW,                                                                                 // 8
    createdAt: new Date(),                                                                                             // 9
    number: Conversations.find().count() + 1,                                                                          // 10
    messageCount: 0                                                                                                    // 11
  }));                                                                                                                 // 6
};                                                                                                                     // 13
                                                                                                                       //
var createMessage = function (doc) {                                                                                   // 15
  return Messages.insert((0, _extends3.default)({}, doc, {                                                             // 16
    createdAt: new Date(),                                                                                             // 18
    internal: false                                                                                                    // 19
  }));                                                                                                                 // 16
};                                                                                                                     // 21
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"customers":{"server":{"methods.js":["meteor/mdg:validated-method","meteor/check","meteor/random","/imports/api/utils","../segments","../customers",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/customers/server/methods.js                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  createSegment: function () {                                                                                         // 1
    return createSegment;                                                                                              // 1
  },                                                                                                                   // 1
  editSegment: function () {                                                                                           // 1
    return editSegment;                                                                                                // 1
  },                                                                                                                   // 1
  removeSegment: function () {                                                                                         // 1
    return removeSegment;                                                                                              // 1
  },                                                                                                                   // 1
  createInternalNote: function () {                                                                                    // 1
    return createInternalNote;                                                                                         // 1
  },                                                                                                                   // 1
  removeInternalNote: function () {                                                                                    // 1
    return removeInternalNote;                                                                                         // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var ValidatedMethod = void 0;                                                                                          // 1
module.importSync("meteor/mdg:validated-method", {                                                                     // 1
  ValidatedMethod: function (v) {                                                                                      // 1
    ValidatedMethod = v;                                                                                               // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var check = void 0;                                                                                                    // 1
module.importSync("meteor/check", {                                                                                    // 1
  check: function (v) {                                                                                                // 1
    check = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var Random = void 0;                                                                                                   // 1
module.importSync("meteor/random", {                                                                                   // 1
  Random: function (v) {                                                                                               // 1
    Random = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var ErxesMixin = void 0;                                                                                               // 1
module.importSync("/imports/api/utils", {                                                                              // 1
  ErxesMixin: function (v) {                                                                                           // 1
    ErxesMixin = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var Segments = void 0;                                                                                                 // 1
module.importSync("../segments", {                                                                                     // 1
  "default": function (v) {                                                                                            // 1
    Segments = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var Customers = void 0;                                                                                                // 1
module.importSync("../customers", {                                                                                    // 1
  Customers: function (v) {                                                                                            // 1
    Customers = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
var createSegment = new ValidatedMethod({                                                                              // 12
  name: 'customers.createSegment',                                                                                     // 13
  mixins: [ErxesMixin],                                                                                                // 14
  validate: Segments.simpleSchema().validator(),                                                                       // 16
  run: function (doc) {                                                                                                // 18
    return Segments.insert(doc);                                                                                       // 19
  }                                                                                                                    // 20
});                                                                                                                    // 12
var editSegment = new ValidatedMethod({                                                                                // 23
  name: 'customers.editSegment',                                                                                       // 24
  mixins: [ErxesMixin],                                                                                                // 25
  validate: function (_ref) {                                                                                          // 27
    var id = _ref.id,                                                                                                  // 27
        doc = _ref.doc;                                                                                                // 27
    check(id, String);                                                                                                 // 28
    check(doc, Segments.simpleSchema());                                                                               // 29
  },                                                                                                                   // 30
  run: function (_ref2) {                                                                                              // 32
    var id = _ref2.id,                                                                                                 // 32
        doc = _ref2.doc;                                                                                               // 32
    return Segments.update(id, {                                                                                       // 33
      $set: doc                                                                                                        // 33
    });                                                                                                                // 33
  }                                                                                                                    // 34
});                                                                                                                    // 23
var removeSegment = new ValidatedMethod({                                                                              // 37
  name: 'customers.removeSegment',                                                                                     // 38
  mixins: [ErxesMixin],                                                                                                // 39
  validate: function (id) {                                                                                            // 41
    check(id, String);                                                                                                 // 42
  },                                                                                                                   // 43
  run: function (id) {                                                                                                 // 45
    return Segments.remove(id);                                                                                        // 46
  }                                                                                                                    // 47
});                                                                                                                    // 37
var createInternalNote = new ValidatedMethod({                                                                         // 54
  name: 'customers.createInternalNote',                                                                                // 55
  mixins: [ErxesMixin],                                                                                                // 56
  validate: function (_ref3) {                                                                                         // 58
    var customerId = _ref3.customerId,                                                                                 // 58
        internalNote = _ref3.internalNote;                                                                             // 58
    check(customerId, String);                                                                                         // 59
    check(internalNote, String);                                                                                       // 60
  },                                                                                                                   // 61
  run: function (_ref4) {                                                                                              // 63
    var customerId = _ref4.customerId,                                                                                 // 63
        internalNote = _ref4.internalNote;                                                                             // 63
    var internalNoteObj = {                                                                                            // 64
      _id: Random.id(),                                                                                                // 65
      content: internalNote,                                                                                           // 66
      createdBy: this.userId,                                                                                          // 67
      createdDate: new Date()                                                                                          // 68
    };                                                                                                                 // 64
    Customers.update(customerId, {                                                                                     // 71
      $addToSet: {                                                                                                     // 71
        internalNotes: internalNoteObj                                                                                 // 71
      }                                                                                                                // 71
    });                                                                                                                // 71
  }                                                                                                                    // 72
});                                                                                                                    // 54
var removeInternalNote = new ValidatedMethod({                                                                         // 75
  name: 'customers.removeInternalNote',                                                                                // 76
  mixins: [ErxesMixin],                                                                                                // 77
  validate: function (_ref5) {                                                                                         // 79
    var customerId = _ref5.customerId,                                                                                 // 79
        internalNoteId = _ref5.internalNoteId;                                                                         // 79
    check(customerId, String);                                                                                         // 80
    check(internalNoteId, String);                                                                                     // 81
  },                                                                                                                   // 82
  run: function (_ref6) {                                                                                              // 84
    var _this = this;                                                                                                  // 84
                                                                                                                       //
    var customerId = _ref6.customerId,                                                                                 // 84
        internalNoteId = _ref6.internalNoteId;                                                                         // 84
    var notes = Customers.findOne(customerId).internalNotes || [];                                                     // 85
    var canDelete = !!notes.find(function (n) {                                                                        // 86
      return n.createdBy === _this.userId;                                                                             // 86
    });                                                                                                                // 86
                                                                                                                       //
    if (!canDelete) {                                                                                                  // 88
      throw new Meteor.Error('permissionDenied', 'Permission denied.');                                                // 89
    }                                                                                                                  // 90
                                                                                                                       //
    Customers.update(customerId, {                                                                                     // 92
      $pull: {                                                                                                         // 92
        internalNotes: {                                                                                               // 92
          _id: internalNoteId                                                                                          // 92
        }                                                                                                              // 92
      }                                                                                                                // 92
    });                                                                                                                // 92
  }                                                                                                                    // 93
});                                                                                                                    // 75
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"constants.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/customers/constants.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  connectors: function () {                                                                                            // 1
    return connectors;                                                                                                 // 1
  },                                                                                                                   // 1
  types: function () {                                                                                                 // 1
    return types;                                                                                                      // 1
  },                                                                                                                   // 1
  operators: function () {                                                                                             // 1
    return operators;                                                                                                  // 1
  },                                                                                                                   // 1
  dateUnits: function () {                                                                                             // 1
    return dateUnits;                                                                                                  // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var connectors = {                                                                                                     // 1
  any: 'any',                                                                                                          // 2
  all: 'all'                                                                                                           // 3
};                                                                                                                     // 1
var types = {                                                                                                          // 6
  string: 'String',                                                                                                    // 7
  number: 'Number',                                                                                                    // 8
  boolean: 'Boolean',                                                                                                  // 9
  date: 'Date'                                                                                                         // 10
};                                                                                                                     // 6
var operators = {                                                                                                      // 13
  string: [{                                                                                                           // 14
    name: 'equals',                                                                                                    // 15
    value: 'e'                                                                                                         // 15
  }, {                                                                                                                 // 15
    name: 'does not equal',                                                                                            // 16
    value: 'dne'                                                                                                       // 16
  }, {                                                                                                                 // 16
    name: 'contains',                                                                                                  // 17
    value: 'c'                                                                                                         // 17
  }, {                                                                                                                 // 17
    name: 'does not contain',                                                                                          // 18
    value: 'dnc'                                                                                                       // 18
  }, {                                                                                                                 // 18
    name: 'is set',                                                                                                    // 19
    value: 'is',                                                                                                       // 19
    noInput: true                                                                                                      // 19
  }, {                                                                                                                 // 19
    name: 'is not set',                                                                                                // 20
    value: 'ins',                                                                                                      // 20
    noInput: true                                                                                                      // 20
  }],                                                                                                                  // 20
  number: [{                                                                                                           // 22
    name: 'is greater than',                                                                                           // 23
    value: 'igt'                                                                                                       // 23
  }, {                                                                                                                 // 23
    name: 'equals to',                                                                                                 // 24
    value: 'et'                                                                                                        // 24
  }, {                                                                                                                 // 24
    name: 'is less than',                                                                                              // 25
    value: 'ilt'                                                                                                       // 25
  }, {                                                                                                                 // 25
    name: 'is set',                                                                                                    // 26
    value: 'is',                                                                                                       // 26
    noInput: true                                                                                                      // 26
  }, {                                                                                                                 // 26
    name: 'is not set',                                                                                                // 27
    value: 'ins',                                                                                                      // 27
    noInput: true                                                                                                      // 27
  }],                                                                                                                  // 27
  boolean: [{                                                                                                          // 29
    name: 'is true',                                                                                                   // 30
    value: 'it',                                                                                                       // 30
    noInput: true                                                                                                      // 30
  }, {                                                                                                                 // 30
    name: 'is false',                                                                                                  // 31
    value: 'if',                                                                                                       // 31
    noInput: true                                                                                                      // 31
  }, {                                                                                                                 // 31
    name: 'is set',                                                                                                    // 32
    value: 'is',                                                                                                       // 32
    noInput: true                                                                                                      // 32
  }, {                                                                                                                 // 32
    name: 'is not set',                                                                                                // 33
    value: 'ins',                                                                                                      // 33
    noInput: true                                                                                                      // 33
  }],                                                                                                                  // 33
  date: [{                                                                                                             // 35
    name: 'was less than',                                                                                             // 36
    value: 'wlt'                                                                                                       // 36
  }, {                                                                                                                 // 36
    name: 'was more than',                                                                                             // 37
    value: 'wmt'                                                                                                       // 37
  }, {                                                                                                                 // 37
    name: 'will occur within',                                                                                         // 38
    value: 'wow'                                                                                                       // 38
  }, {                                                                                                                 // 38
    name: 'will occur after',                                                                                          // 39
    value: 'woa'                                                                                                       // 39
  }, {                                                                                                                 // 39
    name: 'is set',                                                                                                    // 40
    value: 'is',                                                                                                       // 40
    noInput: true                                                                                                      // 40
  }, {                                                                                                                 // 40
    name: 'is not set',                                                                                                // 41
    value: 'ins',                                                                                                      // 41
    noInput: true                                                                                                      // 41
  }]                                                                                                                   // 41
};                                                                                                                     // 13
var dateUnits = {                                                                                                      // 45
  days: 'days',                                                                                                        // 46
  weeks: 'weeks',                                                                                                      // 47
  months: 'months'                                                                                                     // 48
};                                                                                                                     // 45
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"customers.js":["babel-runtime/helpers/slicedToArray","babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","babel-runtime/helpers/extends","faker","meteor/random","meteor/underscore","meteor/dburles:factory","meteor/aldeed:simple-schema","/imports/api/integrations/integrations","/imports/api/brands/brands","/imports/api/tags/utils",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/customers/customers.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _slicedToArray2 = require("babel-runtime/helpers/slicedToArray");                                                  //
                                                                                                                       //
var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);                                                         //
                                                                                                                       //
var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");                                                //
                                                                                                                       //
var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                                       //
                                                                                                                       //
var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");                          //
                                                                                                                       //
var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                                 //
                                                                                                                       //
var _inherits2 = require("babel-runtime/helpers/inherits");                                                            //
                                                                                                                       //
var _inherits3 = _interopRequireDefault(_inherits2);                                                                   //
                                                                                                                       //
var _extends2 = require("babel-runtime/helpers/extends");                                                              //
                                                                                                                       //
var _extends3 = _interopRequireDefault(_extends2);                                                                     //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
module.export({                                                                                                        // 1
  Customers: function () {                                                                                             // 1
    return Customers;                                                                                                  // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var faker = void 0;                                                                                                    // 1
module.importSync("faker", {                                                                                           // 1
  "default": function (v) {                                                                                            // 1
    faker = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Random = void 0;                                                                                                   // 1
module.importSync("meteor/random", {                                                                                   // 1
  Random: function (v) {                                                                                               // 1
    Random = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
                                                                                                                       //
var _ = void 0;                                                                                                        // 1
                                                                                                                       //
module.importSync("meteor/underscore", {                                                                               // 1
  _: function (v) {                                                                                                    // 1
    _ = v;                                                                                                             // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var Factory = void 0;                                                                                                  // 1
module.importSync("meteor/dburles:factory", {                                                                          // 1
  Factory: function (v) {                                                                                              // 1
    Factory = v;                                                                                                       // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var SimpleSchema = void 0;                                                                                             // 1
module.importSync("meteor/aldeed:simple-schema", {                                                                     // 1
  SimpleSchema: function (v) {                                                                                         // 1
    SimpleSchema = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var Integrations = void 0;                                                                                             // 1
module.importSync("/imports/api/integrations/integrations", {                                                          // 1
  Integrations: function (v) {                                                                                         // 1
    Integrations = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
var Brands = void 0;                                                                                                   // 1
module.importSync("/imports/api/brands/brands", {                                                                      // 1
  Brands: function (v) {                                                                                               // 1
    Brands = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 6);                                                                                                                 // 1
var TagsCollection = void 0,                                                                                           // 1
    tagsHelper = void 0,                                                                                               // 1
    tagSchemaOptions = void 0;                                                                                         // 1
module.importSync("/imports/api/tags/utils", {                                                                         // 1
  TagsCollection: function (v) {                                                                                       // 1
    TagsCollection = v;                                                                                                // 1
  },                                                                                                                   // 1
  tagsHelper: function (v) {                                                                                           // 1
    tagsHelper = v;                                                                                                    // 1
  },                                                                                                                   // 1
  tagSchemaOptions: function (v) {                                                                                     // 1
    tagSchemaOptions = v;                                                                                              // 1
  }                                                                                                                    // 1
}, 7);                                                                                                                 // 1
var messengerSchema = new SimpleSchema({                                                                               // 10
  lastSeenAt: {                                                                                                        // 11
    type: Date,                                                                                                        // 12
    label: 'Messenger: Last online'                                                                                    // 13
  },                                                                                                                   // 11
  sessionCount: {                                                                                                      // 15
    type: Number,                                                                                                      // 16
    label: 'Messenger: Session count'                                                                                  // 17
  },                                                                                                                   // 15
  isActive: {                                                                                                          // 19
    type: Boolean,                                                                                                     // 20
    label: 'Messenger: Is online'                                                                                      // 21
  },                                                                                                                   // 19
  customData: {                                                                                                        // 23
    type: Object,                                                                                                      // 24
    blackbox: true,                                                                                                    // 25
    optional: true                                                                                                     // 26
  }                                                                                                                    // 23
});                                                                                                                    // 10
var twitterSchema = new SimpleSchema({                                                                                 // 30
  id: {                                                                                                                // 31
    type: Number,                                                                                                      // 32
    label: 'Twitter: ID (Number)'                                                                                      // 33
  },                                                                                                                   // 31
  idStr: {                                                                                                             // 35
    type: String,                                                                                                      // 36
    label: 'Twitter: ID (String)'                                                                                      // 37
  },                                                                                                                   // 35
  name: {                                                                                                              // 39
    type: String,                                                                                                      // 40
    label: 'Twitter: Name'                                                                                             // 41
  },                                                                                                                   // 39
  screenName: {                                                                                                        // 43
    type: String,                                                                                                      // 44
    label: 'Twitter: Screen name'                                                                                      // 45
  },                                                                                                                   // 43
  profileImageUrl: {                                                                                                   // 47
    type: String,                                                                                                      // 48
    label: 'Twitter: Profile photo'                                                                                    // 49
  }                                                                                                                    // 47
});                                                                                                                    // 30
var facebookSchema = new SimpleSchema({                                                                                // 53
  id: {                                                                                                                // 54
    type: String,                                                                                                      // 55
    label: 'Facebook: ID'                                                                                              // 56
  },                                                                                                                   // 54
  profilePic: {                                                                                                        // 58
    type: String,                                                                                                      // 59
    optional: true,                                                                                                    // 60
    label: 'Facebook: Profile photo'                                                                                   // 61
  }                                                                                                                    // 58
});                                                                                                                    // 53
var internalNoteSchema = new SimpleSchema({                                                                            // 65
  _id: {                                                                                                               // 66
    type: String,                                                                                                      // 67
    regEx: SimpleSchema.RegEx.Id                                                                                       // 68
  },                                                                                                                   // 66
  content: {                                                                                                           // 70
    type: String                                                                                                       // 71
  },                                                                                                                   // 70
  createdBy: {                                                                                                         // 73
    type: String,                                                                                                      // 74
    regEx: SimpleSchema.RegEx.Id                                                                                       // 75
  },                                                                                                                   // 73
  createdDate: {                                                                                                       // 77
    type: Date                                                                                                         // 78
  }                                                                                                                    // 77
});                                                                                                                    // 65
var schema = new SimpleSchema((0, _extends3.default)({                                                                 // 82
  name: {                                                                                                              // 83
    type: String,                                                                                                      // 84
    optional: true,                                                                                                    // 85
    label: 'Name'                                                                                                      // 86
  },                                                                                                                   // 83
  email: {                                                                                                             // 88
    type: String,                                                                                                      // 89
    regEx: SimpleSchema.RegEx.Email,                                                                                   // 90
    optional: true,                                                                                                    // 91
    label: 'Email'                                                                                                     // 92
  },                                                                                                                   // 88
  phone: {                                                                                                             // 94
    type: String,                                                                                                      // 95
    optional: true,                                                                                                    // 96
    label: 'Phone number'                                                                                              // 97
  },                                                                                                                   // 94
  isUser: {                                                                                                            // 99
    type: Boolean,                                                                                                     // 100
    label: 'Is user of one of our products',                                                                           // 101
    optional: true                                                                                                     // 102
  },                                                                                                                   // 99
  integrationId: {                                                                                                     // 104
    type: String,                                                                                                      // 105
    regEx: SimpleSchema.RegEx.Id                                                                                       // 106
  },                                                                                                                   // 104
  createdAt: {                                                                                                         // 108
    type: Date,                                                                                                        // 109
    label: 'Member since'                                                                                              // 110
  },                                                                                                                   // 108
  internalNotes: {                                                                                                     // 112
    type: [internalNoteSchema],                                                                                        // 113
    optional: true                                                                                                     // 114
  },                                                                                                                   // 112
  // Integration data                                                                                                  // 117
  messengerData: {                                                                                                     // 118
    type: messengerSchema,                                                                                             // 119
    optional: true                                                                                                     // 120
  },                                                                                                                   // 118
  twitterData: {                                                                                                       // 122
    type: twitterSchema,                                                                                               // 123
    optional: true                                                                                                     // 124
  },                                                                                                                   // 122
  facebookData: {                                                                                                      // 126
    type: facebookSchema,                                                                                              // 127
    optional: true                                                                                                     // 128
  }                                                                                                                    // 126
}, tagSchemaOptions()));                                                                                               // 82
                                                                                                                       //
var CustomersCollection = function (_TagsCollection) {                                                                 //
  (0, _inherits3.default)(CustomersCollection, _TagsCollection);                                                       //
                                                                                                                       //
  function CustomersCollection() {                                                                                     //
    (0, _classCallCheck3.default)(this, CustomersCollection);                                                          //
    return (0, _possibleConstructorReturn3.default)(this, _TagsCollection.apply(this, arguments));                     //
  }                                                                                                                    //
                                                                                                                       //
  CustomersCollection.prototype.insert = function () {                                                                 //
    function insert(doc, callback) {                                                                                   //
      var customer = Object.assign({                                                                                   // 136
        createdAt: new Date()                                                                                          // 136
      }, doc);                                                                                                         // 136
      return _TagsCollection.prototype.insert.call(this, customer, callback);                                          // 138
    }                                                                                                                  // 139
                                                                                                                       //
    return insert;                                                                                                     //
  }(); /**                                                                                                             //
        * Public displayable fields of customer object.                                                                //
        * Only the child fields (leaf fields).                                                                         //
        * They're used for construct the table columns and segment filter fields.                                      //
        * @return {Array.String} Fields names                                                                          //
        */                                                                                                             //
                                                                                                                       //
  CustomersCollection.prototype.getPublicFields = function () {                                                        //
    function getPublicFields() {                                                                                       //
      var _this2 = this;                                                                                               // 147
                                                                                                                       //
      var schema = this.simpleSchema().schema();                                                                       // 148
      var fields = Object.keys(schema).filter(function (key) {                                                         // 149
        // Can't accepts below types of fields                                                                         // 151
        var unacceptedTypes = ['Object', 'Array'];                                                                     // 152
        var isAcceptedType = unacceptedTypes.indexOf(schema[key].type.name) < 0; // Exclude the fields which is used for internal use
                                                                                                                       //
        var _key$split = key.split('.'),                                                                               // 150
            _key$split2 = (0, _slicedToArray3.default)(_key$split, 1),                                                 // 150
            parentFieldName = _key$split2[0];                                                                          // 150
                                                                                                                       //
        var notInternalUseField = _this2.internalUseFields.indexOf(parentFieldName) < 0;                               // 157
        return isAcceptedType && notInternalUseField;                                                                  // 159
      }).map(function (key) {                                                                                          // 160
        return {                                                                                                       // 161
          key: key,                                                                                                    // 162
          label: schema[key].label || key                                                                              // 163
        };                                                                                                             // 161
      });                                                                                                              // 161
      return fields;                                                                                                   // 166
    }                                                                                                                  // 167
                                                                                                                       //
    return getPublicFields;                                                                                            //
  }();                                                                                                                 //
                                                                                                                       //
  return CustomersCollection;                                                                                          //
}(TagsCollection);                                                                                                     //
                                                                                                                       //
var Customers = new CustomersCollection('customers');                                                                  // 170
Customers.attachSchema(schema); // collection helpers                                                                  // 172
                                                                                                                       //
Customers.helpers((0, _extends3.default)({                                                                             // 175
  integration: function () {                                                                                           // 176
    return Integrations.findOne(this.integrationId);                                                                   // 177
  },                                                                                                                   // 178
  getIntegrationData: function () {                                                                                    // 179
    return {                                                                                                           // 180
      messenger: this.messengerData || {},                                                                             // 181
      twitter: this.twitterData || {},                                                                                 // 182
      facebook: this.facebookData || {}                                                                                // 183
    };                                                                                                                 // 180
  },                                                                                                                   // 185
  brand: function () {                                                                                                 // 186
    var integration = this.integration();                                                                              // 187
    return Brands.findOne(integration && integration.brandId);                                                         // 188
  },                                                                                                                   // 189
  getMessengerCustomData: function () {                                                                                // 190
    var results = [];                                                                                                  // 191
    var data = this.messengerData.customData || {};                                                                    // 192
                                                                                                                       //
    _.each(_.keys(data), function (key) {                                                                              // 194
      results.push({                                                                                                   // 195
        name: key.replace(/_/g, ' '),                                                                                  // 196
        value: data[key]                                                                                               // 197
      });                                                                                                              // 195
    });                                                                                                                // 199
                                                                                                                       //
    return results;                                                                                                    // 201
  }                                                                                                                    // 202
}, tagsHelper));                                                                                                       // 175
Customers.TAG_TYPE = 'customer';                                                                                       // 206
Customers.deny({                                                                                                       // 208
  insert: function () {                                                                                                // 209
    return true;                                                                                                       // 210
  },                                                                                                                   // 211
  update: function () {                                                                                                // 212
    return true;                                                                                                       // 213
  },                                                                                                                   // 214
  remove: function () {                                                                                                // 215
    return true;                                                                                                       // 216
  }                                                                                                                    // 217
});                                                                                                                    // 208
Customers.publicFields = {                                                                                             // 220
  name: 1,                                                                                                             // 221
  email: 1,                                                                                                            // 222
  phone: 1,                                                                                                            // 223
  isUser: 1,                                                                                                           // 224
  integrationId: 1,                                                                                                    // 225
  createdAt: 1,                                                                                                        // 226
  messengerData: 1,                                                                                                    // 227
  twitterData: 1,                                                                                                      // 228
  facebookData: 1,                                                                                                     // 229
  tagIds: 1,                                                                                                           // 230
  internalNotes: 1                                                                                                     // 231
}; /**                                                                                                                 // 220
    * This fields list is used for not displaying                                                                      //
    * internal use fields on customer segments form.                                                                   //
    */                                                                                                                 //
Customers.internalUseFields = ['tagIds', 'integrationId', 'internalNotes'];                                            // 238
Factory.define('customer', Customers, {                                                                                // 240
  email: function () {                                                                                                 // 241
    return faker.internet.email();                                                                                     // 241
  },                                                                                                                   // 241
  integrationId: function () {                                                                                         // 242
    return Random.id();                                                                                                // 242
  }                                                                                                                    // 242
});                                                                                                                    // 240
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"queryBuilder.js":["moment",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/customers/queryBuilder.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var moment = void 0;                                                                                                   // 1
module.importSync("moment", {                                                                                          // 1
  "default": function (v) {                                                                                            // 1
    moment = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
module.export("default", exports.default = {                                                                           // 1
  segments: function (segment, headSegment) {                                                                          // 4
    var _childQuery;                                                                                                   // 4
                                                                                                                       //
    var query = {                                                                                                      // 5
      $and: []                                                                                                         // 5
    };                                                                                                                 // 5
    var childQuery = (_childQuery = {}, _childQuery[segment.connector === 'any' ? '$or' : '$and'] = segment.conditions.map(function (condition) {
      var _ref;                                                                                                        // 8
                                                                                                                       //
      return _ref = {}, _ref[condition.field] = convertConditionToQuery(condition), _ref;                              // 8
    }), _childQuery);                                                                                                  // 8
                                                                                                                       //
    if (segment.conditions.length) {                                                                                   // 12
      query.$and.push(childQuery);                                                                                     // 13
    } // Fetching parent segment                                                                                       // 14
                                                                                                                       //
                                                                                                                       //
    var embeddedParentSegment = typeof segment.getParentSegment === 'function' ? segment.getParentSegment() : null;    // 17
    var parentSegment = headSegment || embeddedParentSegment;                                                          // 20
                                                                                                                       //
    if (parentSegment) {                                                                                               // 22
      var _parentQuery;                                                                                                // 22
                                                                                                                       //
      var parentQuery = (_parentQuery = {}, _parentQuery[parentSegment.connector === 'any' ? '$or' : '$and'] = parentSegment.conditions.map(function (condition) {
        var _ref2;                                                                                                     // 26
                                                                                                                       //
        return _ref2 = {}, _ref2[condition.field] = convertConditionToQuery(condition), _ref2;                         // 26
      }), _parentQuery);                                                                                               // 26
                                                                                                                       //
      if (parentSegment.conditions.length) {                                                                           // 30
        query.$and.push(parentQuery);                                                                                  // 31
      }                                                                                                                // 32
    }                                                                                                                  // 33
                                                                                                                       //
    return query.$and.length ? query : {};                                                                             // 35
  }                                                                                                                    // 36
});                                                                                                                    // 3
                                                                                                                       //
function convertConditionToQuery(condition) {                                                                          // 39
  var operator = condition.operator,                                                                                   // 39
      type = condition.type,                                                                                           // 39
      dateUnit = condition.dateUnit,                                                                                   // 39
      value = condition.value;                                                                                         // 39
  var transformedValue = void 0;                                                                                       // 41
                                                                                                                       //
  switch (type) {                                                                                                      // 43
    case 'string':                                                                                                     // 44
      transformedValue = value && value.toLowerCase();                                                                 // 45
      break;                                                                                                           // 46
                                                                                                                       //
    case 'number':                                                                                                     // 47
    case 'date':                                                                                                       // 48
      transformedValue = parseInt(value, 10);                                                                          // 49
      break;                                                                                                           // 50
                                                                                                                       //
    default:                                                                                                           // 51
      transformedValue = value;                                                                                        // 52
      break;                                                                                                           // 53
  }                                                                                                                    // 43
                                                                                                                       //
  switch (operator) {                                                                                                  // 56
    case 'e':                                                                                                          // 57
    case 'et':                                                                                                         // 58
    default:                                                                                                           // 59
      return transformedValue;                                                                                         // 60
                                                                                                                       //
    case 'dne':                                                                                                        // 61
      return {                                                                                                         // 62
        $ne: transformedValue                                                                                          // 62
      };                                                                                                               // 62
                                                                                                                       //
    case 'c':                                                                                                          // 63
      return {                                                                                                         // 64
        $regex: new RegExp(".*" + escapeRegExp(transformedValue) + ".*", 'i')                                          // 64
      };                                                                                                               // 64
                                                                                                                       //
    case 'dnc':                                                                                                        // 65
      return {                                                                                                         // 66
        $regex: new RegExp("^((?!" + escapeRegExp(transformedValue) + ").)*$", 'i')                                    // 66
      };                                                                                                               // 66
                                                                                                                       //
    case 'igt':                                                                                                        // 67
      return {                                                                                                         // 68
        $gt: transformedValue                                                                                          // 68
      };                                                                                                               // 68
                                                                                                                       //
    case 'ilt':                                                                                                        // 69
      return {                                                                                                         // 70
        $lt: transformedValue                                                                                          // 70
      };                                                                                                               // 70
                                                                                                                       //
    case 'it':                                                                                                         // 71
      return true;                                                                                                     // 72
                                                                                                                       //
    case 'if':                                                                                                         // 73
      return false;                                                                                                    // 74
                                                                                                                       //
    case 'wlt':                                                                                                        // 75
      return {                                                                                                         // 76
        $gte: moment().subtract(transformedValue, dateUnit).toDate(),                                                  // 77
        $lte: new Date()                                                                                               // 78
      };                                                                                                               // 76
                                                                                                                       //
    case 'wmt':                                                                                                        // 80
      return {                                                                                                         // 81
        $lte: moment().subtract(transformedValue, dateUnit).toDate()                                                   // 82
      };                                                                                                               // 81
                                                                                                                       //
    case 'wow':                                                                                                        // 84
      return {                                                                                                         // 85
        $lte: moment().add(transformedValue, dateUnit).toDate(),                                                       // 86
        $gte: new Date()                                                                                               // 87
      };                                                                                                               // 85
                                                                                                                       //
    case 'woa':                                                                                                        // 89
      return {                                                                                                         // 90
        $gte: moment().add(transformedValue, dateUnit).toDate()                                                        // 91
      };                                                                                                               // 90
                                                                                                                       //
    case 'is':                                                                                                         // 93
      return {                                                                                                         // 94
        $exists: true                                                                                                  // 94
      };                                                                                                               // 94
                                                                                                                       //
    case 'ins':                                                                                                        // 95
      return {                                                                                                         // 96
        $exists: false                                                                                                 // 96
      };                                                                                                               // 96
  }                                                                                                                    // 56
}                                                                                                                      // 98
                                                                                                                       //
function escapeRegExp(string) {                                                                                        // 100
  return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'); // $& means the whole matched string                           // 101
}                                                                                                                      // 102
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"segments.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","meteor/mongo","meteor/aldeed:simple-schema","./constants",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/customers/segments.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");                                                //
                                                                                                                       //
var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                                       //
                                                                                                                       //
var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");                          //
                                                                                                                       //
var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                                 //
                                                                                                                       //
var _inherits2 = require("babel-runtime/helpers/inherits");                                                            //
                                                                                                                       //
var _inherits3 = _interopRequireDefault(_inherits2);                                                                   //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
var Mongo = void 0;                                                                                                    // 1
module.importSync("meteor/mongo", {                                                                                    // 1
  Mongo: function (v) {                                                                                                // 1
    Mongo = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var SimpleSchema = void 0;                                                                                             // 1
module.importSync("meteor/aldeed:simple-schema", {                                                                     // 1
  SimpleSchema: function (v) {                                                                                         // 1
    SimpleSchema = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var types = void 0,                                                                                                    // 1
    connectors = void 0,                                                                                               // 1
    dateUnits = void 0;                                                                                                // 1
module.importSync("./constants", {                                                                                     // 1
  types: function (v) {                                                                                                // 1
    types = v;                                                                                                         // 1
  },                                                                                                                   // 1
  connectors: function (v) {                                                                                           // 1
    connectors = v;                                                                                                    // 1
  },                                                                                                                   // 1
  dateUnits: function (v) {                                                                                            // 1
    dateUnits = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var conditionSchema = new SimpleSchema({                                                                               // 5
  field: {                                                                                                             // 6
    type: String                                                                                                       // 7
  },                                                                                                                   // 6
  operator: {                                                                                                          // 9
    type: String                                                                                                       // 10
  },                                                                                                                   // 9
  value: {                                                                                                             // 12
    type: String,                                                                                                      // 13
    optional: true                                                                                                     // 14
  },                                                                                                                   // 12
  dateUnit: {                                                                                                          // 16
    type: String,                                                                                                      // 17
    optional: true,                                                                                                    // 18
    allowedValues: Object.keys(dateUnits)                                                                              // 19
  },                                                                                                                   // 16
  type: {                                                                                                              // 21
    type: String,                                                                                                      // 22
    allowedValues: Object.keys(types)                                                                                  // 23
  }                                                                                                                    // 21
});                                                                                                                    // 5
var schema = new SimpleSchema({                                                                                        // 27
  name: {                                                                                                              // 28
    type: String                                                                                                       // 29
  },                                                                                                                   // 28
  description: {                                                                                                       // 31
    type: String,                                                                                                      // 32
    optional: true                                                                                                     // 33
  },                                                                                                                   // 31
  subOf: {                                                                                                             // 35
    type: String,                                                                                                      // 36
    regEx: SimpleSchema.RegEx.Id,                                                                                      // 37
    optional: true                                                                                                     // 38
  },                                                                                                                   // 35
  color: {                                                                                                             // 40
    type: String                                                                                                       // 41
  },                                                                                                                   // 40
  connector: {                                                                                                         // 43
    type: String,                                                                                                      // 44
    allowedValues: Object.keys(connectors)                                                                             // 45
  },                                                                                                                   // 43
  conditions: {                                                                                                        // 47
    type: [conditionSchema]                                                                                            // 48
  }                                                                                                                    // 47
});                                                                                                                    // 27
                                                                                                                       //
var SegmentsCollection = function (_Mongo$Collection) {                                                                //
  (0, _inherits3.default)(SegmentsCollection, _Mongo$Collection);                                                      //
                                                                                                                       //
  function SegmentsCollection() {                                                                                      //
    (0, _classCallCheck3.default)(this, SegmentsCollection);                                                           //
    return (0, _possibleConstructorReturn3.default)(this, _Mongo$Collection.apply(this, arguments));                   //
  }                                                                                                                    //
                                                                                                                       //
  SegmentsCollection.prototype.insert = function () {                                                                  //
    function insert(doc, callback) {                                                                                   //
      return _Mongo$Collection.prototype.insert.call(this, doc, callback);                                             // 54
    }                                                                                                                  // 55
                                                                                                                       //
    return insert;                                                                                                     //
  }();                                                                                                                 //
                                                                                                                       //
  SegmentsCollection.prototype.remove = function () {                                                                  //
    function remove(selector, callback) {                                                                              //
      return _Mongo$Collection.prototype.remove.call(this, selector, callback);                                        // 58
    }                                                                                                                  // 59
                                                                                                                       //
    return remove;                                                                                                     //
  }();                                                                                                                 //
                                                                                                                       //
  return SegmentsCollection;                                                                                           //
}(Mongo.Collection);                                                                                                   //
                                                                                                                       //
var Segments = new SegmentsCollection('segments');                                                                     // 62
Segments.attachSchema(schema);                                                                                         // 64
Segments.helpers({                                                                                                     // 66
  getParentSegment: function () {                                                                                      // 67
    return Segments.findOne(this.subOf);                                                                               // 68
  },                                                                                                                   // 69
  getSubSegments: function () {                                                                                        // 70
    return Segments.find({                                                                                             // 71
      subOf: this._id                                                                                                  // 71
    }).fetch();                                                                                                        // 71
  }                                                                                                                    // 72
});                                                                                                                    // 66
module.export("default", exports.default = Segments);                                                                  // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"engage":{"server":{"cronJobs.js":["meteor/percolate:synced-cron","/imports/api/engage/engage","/imports/api/engage/utils",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/engage/server/cronJobs.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var SyncedCron = void 0;                                                                                               // 1
module.importSync("meteor/percolate:synced-cron", {                                                                    // 1
  SyncedCron: function (v) {                                                                                           // 1
    SyncedCron = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Messages = void 0;                                                                                                 // 1
module.importSync("/imports/api/engage/engage", {                                                                      // 1
  Messages: function (v) {                                                                                             // 1
    Messages = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var send = void 0;                                                                                                     // 1
module.importSync("/imports/api/engage/utils", {                                                                       // 1
  send: function (v) {                                                                                                 // 1
    send = v;                                                                                                          // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
                                                                                                                       //
var sendAutoMessage = function () {                                                                                    // 5
  return Messages.find({                                                                                               // 5
    kind: 'auto',                                                                                                      // 6
    isLive: true                                                                                                       // 6
  }).forEach(function (message) {                                                                                      // 6
    return send(message);                                                                                              // 6
  });                                                                                                                  // 6
};                                                                                                                     // 5
                                                                                                                       //
SyncedCron.add({                                                                                                       // 8
  name: 'Send auto messages',                                                                                          // 9
  schedule: function (parser) {                                                                                        // 11
    return parser.text('every day at 11pm');                                                                           // 12
  },                                                                                                                   // 13
  job: function () {                                                                                                   // 15
    sendAutoMessage();                                                                                                 // 16
  }                                                                                                                    // 17
});                                                                                                                    // 8
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"methods.js":["meteor/check","meteor/mdg:validated-method","/imports/api/utils","../engage","../constants","../utils",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/engage/server/methods.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  messagesAdd: function () {                                                                                           // 1
    return messagesAdd;                                                                                                // 1
  },                                                                                                                   // 1
  messagesEdit: function () {                                                                                          // 1
    return messagesEdit;                                                                                               // 1
  },                                                                                                                   // 1
  messagesRemove: function () {                                                                                        // 1
    return messagesRemove;                                                                                             // 1
  },                                                                                                                   // 1
  messagesSetLive: function () {                                                                                       // 1
    return messagesSetLive;                                                                                            // 1
  },                                                                                                                   // 1
  messagesSetPause: function () {                                                                                      // 1
    return messagesSetPause;                                                                                           // 1
  },                                                                                                                   // 1
  messagesSetLiveManual: function () {                                                                                 // 1
    return messagesSetLiveManual;                                                                                      // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var check = void 0;                                                                                                    // 1
module.importSync("meteor/check", {                                                                                    // 1
  check: function (v) {                                                                                                // 1
    check = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var ValidatedMethod = void 0;                                                                                          // 1
module.importSync("meteor/mdg:validated-method", {                                                                     // 1
  ValidatedMethod: function (v) {                                                                                      // 1
    ValidatedMethod = v;                                                                                               // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var ErxesMixin = void 0;                                                                                               // 1
module.importSync("/imports/api/utils", {                                                                              // 1
  ErxesMixin: function (v) {                                                                                           // 1
    ErxesMixin = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var Messages = void 0;                                                                                                 // 1
module.importSync("../engage", {                                                                                       // 1
  Messages: function (v) {                                                                                             // 1
    Messages = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var MESSAGE_KINDS = void 0;                                                                                            // 1
module.importSync("../constants", {                                                                                    // 1
  MESSAGE_KINDS: function (v) {                                                                                        // 1
    MESSAGE_KINDS = v;                                                                                                 // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var send = void 0;                                                                                                     // 1
module.importSync("../utils", {                                                                                        // 1
  send: function (v) {                                                                                                 // 1
    send = v;                                                                                                          // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
var messagesAdd = new ValidatedMethod({                                                                                // 9
  name: 'engage.messages.add',                                                                                         // 10
  mixins: [ErxesMixin],                                                                                                // 11
  validate: function (_ref) {                                                                                          // 13
    var doc = _ref.doc;                                                                                                // 13
    check(doc, Messages.schema);                                                                                       // 14
  },                                                                                                                   // 15
  run: function (_ref2) {                                                                                              // 17
    var doc = _ref2.doc;                                                                                               // 17
    doc.createdUserId = this.userId;                                                                                   // 18
    doc.createdDate = new Date();                                                                                      // 19
    doc.deliveryReports = {}; // create                                                                                // 20
                                                                                                                       //
    var messageId = Messages.insert(doc); // if manual and live then send immediately                                  // 23
                                                                                                                       //
    if (doc.kind === MESSAGE_KINDS.MANUAL && doc.isLive) {                                                             // 26
      var message = Messages.findOne(messageId);                                                                       // 27
      send(message);                                                                                                   // 29
    }                                                                                                                  // 30
                                                                                                                       //
    return {                                                                                                           // 32
      messageId: messageId,                                                                                            // 32
      method: doc.method                                                                                               // 32
    };                                                                                                                 // 32
  }                                                                                                                    // 33
});                                                                                                                    // 9
var messagesEdit = new ValidatedMethod({                                                                               // 37
  name: 'engage.messages.edit',                                                                                        // 38
  mixins: [ErxesMixin],                                                                                                // 39
  validate: function (_ref3) {                                                                                         // 41
    var id = _ref3.id,                                                                                                 // 41
        doc = _ref3.doc;                                                                                               // 41
    check(id, String);                                                                                                 // 42
    check(doc, Messages.schema);                                                                                       // 43
  },                                                                                                                   // 44
  run: function (_ref4) {                                                                                              // 46
    var id = _ref4.id,                                                                                                 // 46
        doc = _ref4.doc;                                                                                               // 46
    Messages.update(id, {                                                                                              // 47
      $set: doc                                                                                                        // 47
    });                                                                                                                // 47
    return {                                                                                                           // 49
      messageId: id,                                                                                                   // 49
      method: doc.method                                                                                               // 49
    };                                                                                                                 // 49
  }                                                                                                                    // 50
});                                                                                                                    // 37
var messagesRemove = new ValidatedMethod({                                                                             // 54
  name: 'engage.messages.remove',                                                                                      // 55
  mixins: [ErxesMixin],                                                                                                // 56
  validate: function (id) {                                                                                            // 58
    check(id, String);                                                                                                 // 59
  },                                                                                                                   // 60
  run: function (id) {                                                                                                 // 62
    return Messages.remove(id);                                                                                        // 63
  }                                                                                                                    // 64
});                                                                                                                    // 54
var messagesSetLive = new ValidatedMethod({                                                                            // 68
  name: 'engage.messages.setLive',                                                                                     // 69
  mixins: [ErxesMixin],                                                                                                // 70
  validate: function (id) {                                                                                            // 72
    check(id, String);                                                                                                 // 73
  },                                                                                                                   // 74
  run: function (id) {                                                                                                 // 76
    return Messages.update(id, {                                                                                       // 77
      $set: {                                                                                                          // 77
        isLive: true,                                                                                                  // 77
        isDraft: false                                                                                                 // 77
      }                                                                                                                // 77
    });                                                                                                                // 77
  }                                                                                                                    // 78
});                                                                                                                    // 68
var messagesSetPause = new ValidatedMethod({                                                                           // 82
  name: 'engage.messages.setPause',                                                                                    // 83
  mixins: [ErxesMixin],                                                                                                // 84
  validate: function (id) {                                                                                            // 86
    check(id, String);                                                                                                 // 87
  },                                                                                                                   // 88
  run: function (id) {                                                                                                 // 90
    return Messages.update(id, {                                                                                       // 91
      $set: {                                                                                                          // 91
        isLive: false                                                                                                  // 91
      }                                                                                                                // 91
    });                                                                                                                // 91
  }                                                                                                                    // 92
});                                                                                                                    // 82
var messagesSetLiveManual = new ValidatedMethod({                                                                      // 96
  name: 'engage.messages.setLiveManual',                                                                               // 97
  mixins: [ErxesMixin],                                                                                                // 98
  validate: function (id) {                                                                                            // 100
    check(id, String);                                                                                                 // 101
  },                                                                                                                   // 102
  run: function (id) {                                                                                                 // 104
    Messages.update(id, {                                                                                              // 105
      $set: {                                                                                                          // 105
        isLive: true,                                                                                                  // 105
        isDraft: false                                                                                                 // 105
      }                                                                                                                // 105
    });                                                                                                                // 105
    var message = Messages.findOne(id); // if manual and live then send                                                // 107
                                                                                                                       //
    send(message);                                                                                                     // 110
  }                                                                                                                    // 111
});                                                                                                                    // 96
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"constants.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/engage/constants.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  EMAIL_CONTENT_CLASS: function () {                                                                                   // 1
    return EMAIL_CONTENT_CLASS;                                                                                        // 1
  },                                                                                                                   // 1
  EMAIL_CONTENT_PLACEHOLDER: function () {                                                                             // 1
    return EMAIL_CONTENT_PLACEHOLDER;                                                                                  // 1
  },                                                                                                                   // 1
  MESSAGE_KINDS: function () {                                                                                         // 1
    return MESSAGE_KINDS;                                                                                              // 1
  },                                                                                                                   // 1
  EMAIL_CONTENT_KEYS_FOR_SELECT: function () {                                                                         // 1
    return EMAIL_CONTENT_KEYS_FOR_SELECT;                                                                              // 1
  },                                                                                                                   // 1
  statusFilters: function () {                                                                                         // 1
    return statusFilters;                                                                                              // 1
  },                                                                                                                   // 1
  MESSENGER_KINDS: function () {                                                                                       // 1
    return MESSENGER_KINDS;                                                                                            // 1
  },                                                                                                                   // 1
  METHODS: function () {                                                                                               // 1
    return METHODS;                                                                                                    // 1
  },                                                                                                                   // 1
  SENT_AS_CHOICES: function () {                                                                                       // 1
    return SENT_AS_CHOICES;                                                                                            // 1
  },                                                                                                                   // 1
  VISITOR_AUDIENCE_RULES: function () {                                                                                // 1
    return VISITOR_AUDIENCE_RULES;                                                                                     // 1
  },                                                                                                                   // 1
  RULE_CONDITIONS: function () {                                                                                       // 1
    return RULE_CONDITIONS;                                                                                            // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var EMAIL_CONTENT_CLASS = 'erxes-email-content';                                                                       // 1
var EMAIL_CONTENT_PLACEHOLDER = "<div class=\"" + EMAIL_CONTENT_CLASS + "\"></div>";                                   // 2
var MESSAGE_KINDS = {                                                                                                  // 4
  AUTO: 'auto',                                                                                                        // 5
  VISITOR_AUTO: 'visitorAuto',                                                                                         // 6
  MANUAL: 'manual',                                                                                                    // 7
  ALL_LIST: ['auto', 'visitorAuto', 'manual']                                                                          // 8
};                                                                                                                     // 4
var EMAIL_CONTENT_KEYS_FOR_SELECT = [{                                                                                 // 11
  group: {                                                                                                             // 13
    value: 'customer',                                                                                                 // 13
    text: 'Customer'                                                                                                   // 13
  },                                                                                                                   // 13
  options: [{                                                                                                          // 14
    value: 'name',                                                                                                     // 14
    text: 'Name'                                                                                                       // 14
  }, {                                                                                                                 // 14
    value: 'email',                                                                                                    // 14
    text: 'Email'                                                                                                      // 14
  }]                                                                                                                   // 14
}, {                                                                                                                   // 12
  group: {                                                                                                             // 17
    value: 'user',                                                                                                     // 17
    text: 'User'                                                                                                       // 17
  },                                                                                                                   // 17
  options: [{                                                                                                          // 18
    value: 'fullName',                                                                                                 // 19
    text: 'Fullname'                                                                                                   // 19
  }, {                                                                                                                 // 19
    value: 'position',                                                                                                 // 20
    text: 'Position'                                                                                                   // 20
  }, {                                                                                                                 // 20
    value: 'email',                                                                                                    // 21
    text: 'Email'                                                                                                      // 21
  }]                                                                                                                   // 21
}];                                                                                                                    // 16
var statusFilters = [{                                                                                                 // 26
  key: 'live',                                                                                                         // 27
  value: 'Live'                                                                                                        // 27
}, {                                                                                                                   // 27
  key: 'draft',                                                                                                        // 28
  value: 'Draft'                                                                                                       // 28
}, {                                                                                                                   // 28
  key: 'paused',                                                                                                       // 29
  value: 'Paused'                                                                                                      // 29
}, {                                                                                                                   // 29
  key: 'yours',                                                                                                        // 30
  value: 'Your messages'                                                                                               // 30
}];                                                                                                                    // 30
var MESSENGER_KINDS = {                                                                                                // 33
  CHAT: 'chat',                                                                                                        // 34
  NOTE: 'note',                                                                                                        // 35
  POST: 'post',                                                                                                        // 36
  ALL_LIST: ['chat', 'note', 'post'],                                                                                  // 37
  SELECT_OPTIONS: [{                                                                                                   // 38
    value: 'chat',                                                                                                     // 39
    text: 'Chat'                                                                                                       // 39
  }, {                                                                                                                 // 39
    value: 'note',                                                                                                     // 40
    text: 'Note'                                                                                                       // 40
  }, {                                                                                                                 // 40
    value: 'post',                                                                                                     // 41
    text: 'Post'                                                                                                       // 41
  }]                                                                                                                   // 41
};                                                                                                                     // 33
var METHODS = {                                                                                                        // 45
  MESSENGER: 'messenger',                                                                                              // 46
  EMAIL: 'email',                                                                                                      // 47
  ALL_LIST: ['messenger', 'email']                                                                                     // 48
};                                                                                                                     // 45
var SENT_AS_CHOICES = {                                                                                                // 51
  BADGE: 'badge',                                                                                                      // 52
  SNIPPET: 'snippet',                                                                                                  // 53
  FULL_MESSAGE: 'fullMessage',                                                                                         // 54
  ALL_LIST: ['badge', 'snippet', 'fullMessage'],                                                                       // 55
  SELECT_OPTIONS: [{                                                                                                   // 56
    value: 'badge',                                                                                                    // 57
    text: 'Badge'                                                                                                      // 57
  }, {                                                                                                                 // 57
    value: 'snippet',                                                                                                  // 58
    text: 'Snippet'                                                                                                    // 58
  }, {                                                                                                                 // 58
    value: 'fullMessage',                                                                                              // 59
    text: 'Show the full message'                                                                                      // 59
  }]                                                                                                                   // 59
};                                                                                                                     // 51
var VISITOR_AUDIENCE_RULES = [{                                                                                        // 63
  value: '',                                                                                                           // 64
  text: ''                                                                                                             // 64
}, {                                                                                                                   // 64
  value: 'browserLanguage',                                                                                            // 65
  text: 'Browser language'                                                                                             // 65
}, {                                                                                                                   // 65
  value: 'currentPageUrl',                                                                                             // 66
  text: 'Current page url'                                                                                             // 66
}, {                                                                                                                   // 66
  value: 'country',                                                                                                    // 67
  text: 'Country'                                                                                                      // 67
}, {                                                                                                                   // 67
  value: 'city',                                                                                                       // 68
  text: 'City'                                                                                                         // 68
}, {                                                                                                                   // 68
  value: 'numberOfVisits',                                                                                             // 69
  text: 'Number of visits'                                                                                             // 69
}];                                                                                                                    // 69
var stringTypeChoices = [{                                                                                             // 72
  value: '',                                                                                                           // 73
  text: ''                                                                                                             // 73
}, {                                                                                                                   // 73
  value: 'is',                                                                                                         // 74
  text: 'is'                                                                                                           // 74
}, {                                                                                                                   // 74
  value: 'isNot',                                                                                                      // 75
  text: 'is not'                                                                                                       // 75
}, {                                                                                                                   // 75
  value: 'startsWith',                                                                                                 // 76
  text: 'starts with'                                                                                                  // 76
}, {                                                                                                                   // 76
  value: 'endsWith',                                                                                                   // 77
  text: 'ends with'                                                                                                    // 77
}, {                                                                                                                   // 77
  value: 'contains',                                                                                                   // 78
  text: 'contains'                                                                                                     // 78
}, {                                                                                                                   // 78
  value: 'doesNotContain',                                                                                             // 79
  text: 'does not contain'                                                                                             // 79
}, {                                                                                                                   // 79
  value: 'isUnknown',                                                                                                  // 80
  text: 'is unknown'                                                                                                   // 80
}, {                                                                                                                   // 80
  value: 'hasAnyValue',                                                                                                // 81
  text: 'has any value'                                                                                                // 81
}];                                                                                                                    // 81
var numberTypeChoices = [{                                                                                             // 84
  value: '',                                                                                                           // 85
  text: ''                                                                                                             // 85
}, {                                                                                                                   // 85
  value: 'greaterThan',                                                                                                // 86
  text: 'Greater than'                                                                                                 // 86
}, {                                                                                                                   // 86
  value: 'lessThan',                                                                                                   // 87
  text: 'Less than'                                                                                                    // 87
}, {                                                                                                                   // 87
  value: 'is',                                                                                                         // 88
  text: 'is'                                                                                                           // 88
}, {                                                                                                                   // 88
  value: 'isNot',                                                                                                      // 89
  text: 'is not'                                                                                                       // 89
}, {                                                                                                                   // 89
  value: 'isUnknown',                                                                                                  // 90
  text: 'is unknown'                                                                                                   // 90
}, {                                                                                                                   // 90
  value: 'hasAnyValue',                                                                                                // 91
  text: 'has any value'                                                                                                // 91
}];                                                                                                                    // 91
var RULE_CONDITIONS = {                                                                                                // 94
  browserLanguage: stringTypeChoices,                                                                                  // 95
  currentPageUrl: stringTypeChoices,                                                                                   // 96
  country: stringTypeChoices,                                                                                          // 97
  city: stringTypeChoices,                                                                                             // 98
  numberOfVisits: numberTypeChoices                                                                                    // 99
};                                                                                                                     // 94
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"engage.js":["babel-runtime/helpers/extends","meteor/meteor","faker","meteor/dburles:factory","meteor/aldeed:simple-schema","/imports/api/customers/segments","/imports/api/tags/utils","./constants",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/engage/engage.js                                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = require("babel-runtime/helpers/extends");                                                              //
                                                                                                                       //
var _extends3 = _interopRequireDefault(_extends2);                                                                     //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
module.export({                                                                                                        // 1
  Messages: function () {                                                                                              // 1
    return Messages;                                                                                                   // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var faker = void 0;                                                                                                    // 1
module.importSync("faker", {                                                                                           // 1
  "default": function (v) {                                                                                            // 1
    faker = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var Factory = void 0;                                                                                                  // 1
module.importSync("meteor/dburles:factory", {                                                                          // 1
  Factory: function (v) {                                                                                              // 1
    Factory = v;                                                                                                       // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var SimpleSchema = void 0;                                                                                             // 1
module.importSync("meteor/aldeed:simple-schema", {                                                                     // 1
  SimpleSchema: function (v) {                                                                                         // 1
    SimpleSchema = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var Segments = void 0;                                                                                                 // 1
module.importSync("/imports/api/customers/segments", {                                                                 // 1
  "default": function (v) {                                                                                            // 1
    Segments = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var TagsCollection = void 0,                                                                                           // 1
    tagsHelper = void 0,                                                                                               // 1
    tagSchemaOptions = void 0;                                                                                         // 1
module.importSync("/imports/api/tags/utils", {                                                                         // 1
  TagsCollection: function (v) {                                                                                       // 1
    TagsCollection = v;                                                                                                // 1
  },                                                                                                                   // 1
  tagsHelper: function (v) {                                                                                           // 1
    tagsHelper = v;                                                                                                    // 1
  },                                                                                                                   // 1
  tagSchemaOptions: function (v) {                                                                                     // 1
    tagSchemaOptions = v;                                                                                              // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
var MESSAGE_KINDS = void 0,                                                                                            // 1
    MESSENGER_KINDS = void 0,                                                                                          // 1
    METHODS = void 0,                                                                                                  // 1
    SENT_AS_CHOICES = void 0;                                                                                          // 1
module.importSync("./constants", {                                                                                     // 1
  MESSAGE_KINDS: function (v) {                                                                                        // 1
    MESSAGE_KINDS = v;                                                                                                 // 1
  },                                                                                                                   // 1
  MESSENGER_KINDS: function (v) {                                                                                      // 1
    MESSENGER_KINDS = v;                                                                                               // 1
  },                                                                                                                   // 1
  METHODS: function (v) {                                                                                              // 1
    METHODS = v;                                                                                                       // 1
  },                                                                                                                   // 1
  SENT_AS_CHOICES: function (v) {                                                                                      // 1
    SENT_AS_CHOICES = v;                                                                                               // 1
  }                                                                                                                    // 1
}, 6);                                                                                                                 // 1
var Messages = new TagsCollection('engage_messages');                                                                  // 9
Messages.TAG_TYPE = 'engageMessage';                                                                                   // 11
var EmailSchema = new SimpleSchema({                                                                                   // 13
  templateId: {                                                                                                        // 14
    type: String,                                                                                                      // 15
    optional: true                                                                                                     // 16
  },                                                                                                                   // 14
  subject: {                                                                                                           // 18
    type: String                                                                                                       // 19
  },                                                                                                                   // 18
  content: {                                                                                                           // 21
    type: String                                                                                                       // 22
  }                                                                                                                    // 21
}); // visistor auto message's per rule schema                                                                         // 13
                                                                                                                       //
var RuleSchema = new SimpleSchema({                                                                                    // 27
  _id: {                                                                                                               // 28
    type: String                                                                                                       // 28
  },                                                                                                                   // 28
  // browserLanguage, currentUrl, etc ...                                                                              // 30
  kind: {                                                                                                              // 31
    type: String                                                                                                       // 31
  },                                                                                                                   // 31
  // Browser language, Current url etc ...                                                                             // 33
  text: {                                                                                                              // 34
    type: String                                                                                                       // 34
  },                                                                                                                   // 34
  // is, isNot, startsWith                                                                                             // 36
  condition: {                                                                                                         // 37
    type: String                                                                                                       // 37
  },                                                                                                                   // 37
  value: {                                                                                                             // 39
    type: String,                                                                                                      // 39
    optional: true                                                                                                     // 39
  }                                                                                                                    // 39
});                                                                                                                    // 27
var MessengerSchema = new SimpleSchema({                                                                               // 42
  brandId: {                                                                                                           // 43
    type: String                                                                                                       // 44
  },                                                                                                                   // 43
  kind: {                                                                                                              // 46
    type: String,                                                                                                      // 47
    allowedValues: MESSENGER_KINDS.ALL_LIST,                                                                           // 48
    optional: true                                                                                                     // 49
  },                                                                                                                   // 46
  sentAs: {                                                                                                            // 51
    type: String,                                                                                                      // 52
    allowedValues: SENT_AS_CHOICES.ALL_LIST                                                                            // 53
  },                                                                                                                   // 51
  content: {                                                                                                           // 55
    type: String                                                                                                       // 56
  },                                                                                                                   // 55
  rules: {                                                                                                             // 58
    type: [RuleSchema],                                                                                                // 59
    optional: true                                                                                                     // 60
  }                                                                                                                    // 58
});                                                                                                                    // 42
Messages.schema = new SimpleSchema((0, _extends3.default)({                                                            // 64
  // auto, visitorAuto, manual                                                                                         // 65
  kind: {                                                                                                              // 66
    type: String,                                                                                                      // 67
    allowedValues: MESSAGE_KINDS.ALL_LIST                                                                              // 68
  },                                                                                                                   // 66
  // targets                                                                                                           // 71
  segmentId: {                                                                                                         // 72
    type: String,                                                                                                      // 73
    optional: true                                                                                                     // 74
  },                                                                                                                   // 72
  customerIds: {                                                                                                       // 76
    type: [String],                                                                                                    // 77
    optional: true                                                                                                     // 78
  },                                                                                                                   // 76
  title: {                                                                                                             // 81
    type: String                                                                                                       // 82
  },                                                                                                                   // 81
  fromUserId: {                                                                                                        // 84
    type: String                                                                                                       // 85
  },                                                                                                                   // 84
  // messenger, email etc ...                                                                                          // 88
  method: {                                                                                                            // 89
    type: String,                                                                                                      // 90
    allowedValues: METHODS.ALL_LIST                                                                                    // 91
  },                                                                                                                   // 89
  // email kind fields                                                                                                 // 94
  email: {                                                                                                             // 95
    type: EmailSchema,                                                                                                 // 96
    optional: true                                                                                                     // 97
  },                                                                                                                   // 95
  // messenger kind fields                                                                                             // 100
  messenger: {                                                                                                         // 101
    type: MessengerSchema,                                                                                             // 102
    optional: true                                                                                                     // 103
  },                                                                                                                   // 101
  isDraft: {                                                                                                           // 106
    type: Boolean,                                                                                                     // 107
    optional: true                                                                                                     // 108
  },                                                                                                                   // 106
  isLive: {                                                                                                            // 110
    type: Boolean,                                                                                                     // 111
    optional: true                                                                                                     // 112
  },                                                                                                                   // 110
  stopDate: {                                                                                                          // 114
    type: Date,                                                                                                        // 115
    optional: true                                                                                                     // 116
  }                                                                                                                    // 114
}, tagSchemaOptions()));                                                                                               // 64
Messages.schemaExtra = new SimpleSchema({                                                                              // 121
  createdUserId: {                                                                                                     // 122
    type: String                                                                                                       // 123
  },                                                                                                                   // 122
  createdDate: {                                                                                                       // 126
    type: Date                                                                                                         // 127
  },                                                                                                                   // 126
  // read customer ids                                                                                                 // 130
  messengerReceivedCustomerIds: {                                                                                      // 131
    type: [String],                                                                                                    // 132
    optional: true                                                                                                     // 133
  },                                                                                                                   // 131
  // for example, save each customers's email delivery reports by messageId                                            // 136
  deliveryReports: {                                                                                                   // 137
    type: Object,                                                                                                      // 138
    blackbox: true,                                                                                                    // 139
    optional: true                                                                                                     // 140
  }                                                                                                                    // 137
});                                                                                                                    // 121
Messages.helpers((0, _extends3.default)({                                                                              // 144
  fromUser: function () {                                                                                              // 145
    return Meteor.users.findOne(this.fromUserId) || {};                                                                // 146
  },                                                                                                                   // 147
  segment: function () {                                                                                               // 149
    return Segments.findOne(this.segmentId) || {};                                                                     // 150
  }                                                                                                                    // 151
}, tagsHelper));                                                                                                       // 144
Messages.attachSchema(Messages.schema);                                                                                // 156
Messages.attachSchema(Messages.schemaExtra);                                                                           // 157
Factory.define('engage.messages', Messages, {                                                                          // 159
  title: function () {                                                                                                 // 160
    return faker.random.word();                                                                                        // 160
  }                                                                                                                    // 160
});                                                                                                                    // 159
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"utils.js":["babel-runtime/helpers/extends","meteor/meteor","meteor/random","node4mailer","/imports/api/customers/queryBuilder","/imports/api/customers/segments","/imports/api/emailTemplates/emailTemplates","/imports/api/customers/customers","/imports/api/integrations/integrations","/imports/api/integrations/constants","/imports/api/conversations/utils","./constants","./engage",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/engage/utils.js                                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = require("babel-runtime/helpers/extends");                                                              //
                                                                                                                       //
var _extends3 = _interopRequireDefault(_extends2);                                                                     //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
module.export({                                                                                                        // 1
  replaceKeys: function () {                                                                                           // 1
    return replaceKeys;                                                                                                // 1
  },                                                                                                                   // 1
  send: function () {                                                                                                  // 1
    return send;                                                                                                       // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Random = void 0;                                                                                                   // 1
module.importSync("meteor/random", {                                                                                   // 1
  Random: function (v) {                                                                                               // 1
    Random = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var nodemailer = void 0;                                                                                               // 1
module.importSync("node4mailer", {                                                                                     // 1
  "default": function (v) {                                                                                            // 1
    nodemailer = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var customerQueryBuilder = void 0;                                                                                     // 1
module.importSync("/imports/api/customers/queryBuilder", {                                                             // 1
  "default": function (v) {                                                                                            // 1
    customerQueryBuilder = v;                                                                                          // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var Segments = void 0;                                                                                                 // 1
module.importSync("/imports/api/customers/segments", {                                                                 // 1
  "default": function (v) {                                                                                            // 1
    Segments = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var EmailTemplates = void 0;                                                                                           // 1
module.importSync("/imports/api/emailTemplates/emailTemplates", {                                                      // 1
  EmailTemplates: function (v) {                                                                                       // 1
    EmailTemplates = v;                                                                                                // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
var Customers = void 0;                                                                                                // 1
module.importSync("/imports/api/customers/customers", {                                                                // 1
  Customers: function (v) {                                                                                            // 1
    Customers = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 6);                                                                                                                 // 1
var Integrations = void 0;                                                                                             // 1
module.importSync("/imports/api/integrations/integrations", {                                                          // 1
  Integrations: function (v) {                                                                                         // 1
    Integrations = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 7);                                                                                                                 // 1
var KIND_CHOICES = void 0;                                                                                             // 1
module.importSync("/imports/api/integrations/constants", {                                                             // 1
  KIND_CHOICES: function (v) {                                                                                         // 1
    KIND_CHOICES = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 8);                                                                                                                 // 1
var createConversation = void 0,                                                                                       // 1
    createMessage = void 0;                                                                                            // 1
module.importSync("/imports/api/conversations/utils", {                                                                // 1
  createConversation: function (v) {                                                                                   // 1
    createConversation = v;                                                                                            // 1
  },                                                                                                                   // 1
  createMessage: function (v) {                                                                                        // 1
    createMessage = v;                                                                                                 // 1
  }                                                                                                                    // 1
}, 9);                                                                                                                 // 1
var EMAIL_CONTENT_PLACEHOLDER = void 0,                                                                                // 1
    METHODS = void 0,                                                                                                  // 1
    MESSAGE_KINDS = void 0;                                                                                            // 1
module.importSync("./constants", {                                                                                     // 1
  EMAIL_CONTENT_PLACEHOLDER: function (v) {                                                                            // 1
    EMAIL_CONTENT_PLACEHOLDER = v;                                                                                     // 1
  },                                                                                                                   // 1
  METHODS: function (v) {                                                                                              // 1
    METHODS = v;                                                                                                       // 1
  },                                                                                                                   // 1
  MESSAGE_KINDS: function (v) {                                                                                        // 1
    MESSAGE_KINDS = v;                                                                                                 // 1
  }                                                                                                                    // 1
}, 10);                                                                                                                // 1
var Messages = void 0;                                                                                                 // 1
module.importSync("./engage", {                                                                                        // 1
  Messages: function (v) {                                                                                             // 1
    Messages = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 11);                                                                                                                // 1
                                                                                                                       //
var replaceKeys = function (_ref) {                                                                                    // 20
  var content = _ref.content,                                                                                          // 20
      customer = _ref.customer,                                                                                        // 20
      user = _ref.user;                                                                                                // 20
  var result = content; // replace customer fields                                                                     // 21
                                                                                                                       //
  result = result.replace(/{{\s?customer.name\s?}}/gi, customer.name);                                                 // 24
  result = result.replace(/{{\s?customer.email\s?}}/gi, customer.email); // replace user fields                        // 25
                                                                                                                       //
  result = result.replace(/{{\s?user.fullName\s?}}/gi, user.fullName);                                                 // 28
  result = result.replace(/{{\s?user.position\s?}}/gi, user.position);                                                 // 29
  result = result.replace(/{{\s?user.email\s?}}/gi, user.email);                                                       // 30
  return result;                                                                                                       // 32
};                                                                                                                     // 33
                                                                                                                       //
var findCustomers = function (_ref2) {                                                                                 // 35
  var customerIds = _ref2.customerIds,                                                                                 // 35
      segmentId = _ref2.segmentId;                                                                                     // 35
  // find matched customers                                                                                            // 36
  var customerQuery = {                                                                                                // 37
    _id: {                                                                                                             // 37
      $in: customerIds || []                                                                                           // 37
    }                                                                                                                  // 37
  };                                                                                                                   // 37
                                                                                                                       //
  if (segmentId) {                                                                                                     // 39
    customerQuery = customerQueryBuilder.segments(Segments.findOne(segmentId));                                        // 40
  }                                                                                                                    // 41
                                                                                                                       //
  return Customers.find(customerQuery).fetch();                                                                        // 43
};                                                                                                                     // 44
                                                                                                                       //
var saveMatchedCustomerIds = function (messageId, customers) {                                                         // 46
  return Messages.update({                                                                                             // 46
    _id: messageId                                                                                                     // 48
  }, {                                                                                                                 // 48
    $set: {                                                                                                            // 49
      customerIds: customers.map(function (customer) {                                                                 // 49
        return customer._id;                                                                                           // 49
      })                                                                                                               // 49
    }                                                                                                                  // 49
  });                                                                                                                  // 49
};                                                                                                                     // 46
                                                                                                                       //
var sendViaEmail = function (message) {                                                                                // 52
  var fromUserId = message.fromUserId,                                                                                 // 52
      segmentId = message.segmentId,                                                                                   // 52
      customerIds = message.customerIds;                                                                               // 52
  var _message$email = message.email,                                                                                  // 52
      templateId = _message$email.templateId,                                                                          // 52
      subject = _message$email.subject,                                                                                // 52
      content = _message$email.content;                                                                                // 52
  var user = Meteor.users.findOne(fromUserId);                                                                         // 56
  var userEmail = user.emails.pop();                                                                                   // 57
  var template = EmailTemplates.findOne(templateId); // find matched customers                                         // 58
                                                                                                                       //
  var customers = findCustomers({                                                                                      // 61
    customerIds: customerIds,                                                                                          // 61
    segmentId: segmentId                                                                                               // 61
  }); // save matched customer ids                                                                                     // 61
                                                                                                                       //
  saveMatchedCustomerIds(message._id, customers); // create reusable transporter object using the default SMTP transport
                                                                                                                       //
  var _ref3 = Meteor.settings.mail || {},                                                                              // 52
      host = _ref3.host,                                                                                               // 52
      port = _ref3.port,                                                                                               // 52
      secure = _ref3.secure,                                                                                           // 52
      auth = _ref3.auth;                                                                                               // 52
                                                                                                                       //
  var transporter = nodemailer.createTransport({                                                                       // 69
    host: host,                                                                                                        // 69
    port: port,                                                                                                        // 69
    secure: secure,                                                                                                    // 69
    auth: auth                                                                                                         // 69
  });                                                                                                                  // 69
  customers.forEach(function (customer) {                                                                              // 71
    var _$set;                                                                                                         // 71
                                                                                                                       //
    // replace keys in subject                                                                                         // 72
    var replacedSubject = replaceKeys({                                                                                // 73
      content: subject,                                                                                                // 73
      customer: customer,                                                                                              // 73
      user: user                                                                                                       // 73
    }); // replace keys such as {{ customer.name }} in content                                                         // 73
                                                                                                                       //
    var replacedContent = replaceKeys({                                                                                // 76
      content: content,                                                                                                // 76
      customer: customer,                                                                                              // 76
      user: user                                                                                                       // 76
    }); // if sender choosed some template then use it                                                                 // 76
                                                                                                                       //
    if (template) {                                                                                                    // 79
      replacedContent = template.content.replace(EMAIL_CONTENT_PLACEHOLDER, replacedContent);                          // 80
    }                                                                                                                  // 81
                                                                                                                       //
    var mailMessageId = Random.id(); // add new delivery report                                                        // 83
                                                                                                                       //
    Messages.update({                                                                                                  // 86
      _id: message._id                                                                                                 // 87
    }, {                                                                                                               // 87
      $set: (_$set = {}, _$set["deliveryReports." + mailMessageId] = {                                                 // 89
        customerId: customer._id,                                                                                      // 91
        status: 'pending'                                                                                              // 92
      }, _$set)                                                                                                        // 90
    }); // send email                                                                                                  // 88
                                                                                                                       //
    transporter.sendMail({                                                                                             // 99
      from: userEmail.address,                                                                                         // 101
      to: customer.email,                                                                                              // 102
      subject: replacedSubject,                                                                                        // 103
      html: replacedContent,                                                                                           // 104
      messageId: mailMessageId                                                                                         // 105
    }, Meteor.bindEnvironment(function (error, info) {                                                                 // 100
      var _$set2;                                                                                                      // 107
                                                                                                                       //
      // set new status                                                                                                // 108
      var status = error ? 'failed' : 'sent'; // update status                                                         // 109
                                                                                                                       //
      Messages.update({                                                                                                // 112
        _id: message._id                                                                                               // 113
      }, {                                                                                                             // 113
        $set: (_$set2 = {}, _$set2["deliveryReports." + info.messageId + ".status"] = status, _$set2)                  // 115
      });                                                                                                              // 114
    }));                                                                                                               // 120
  });                                                                                                                  // 122
};                                                                                                                     // 123
                                                                                                                       //
var sendViaMessenger = function (message) {                                                                            // 125
  var fromUserId = message.fromUserId,                                                                                 // 125
      segmentId = message.segmentId,                                                                                   // 125
      customerIds = message.customerIds;                                                                               // 125
  var _message$messenger = message.messenger,                                                                          // 125
      brandId = _message$messenger.brandId,                                                                            // 125
      content = _message$messenger.content;                                                                            // 125
  var user = Meteor.users.findOne(fromUserId); // find integration                                                     // 129
                                                                                                                       //
  var integration = Integrations.findOne({                                                                             // 132
    brandId: brandId,                                                                                                  // 133
    kind: KIND_CHOICES.MESSENGER                                                                                       // 134
  });                                                                                                                  // 132
                                                                                                                       //
  if (!integration) {                                                                                                  // 137
    return 'Integration not found';                                                                                    // 138
  } // find matched customers                                                                                          // 139
                                                                                                                       //
                                                                                                                       //
  var customers = findCustomers({                                                                                      // 142
    customerIds: customerIds,                                                                                          // 142
    segmentId: segmentId                                                                                               // 142
  }); // save matched customer ids                                                                                     // 142
                                                                                                                       //
  saveMatchedCustomerIds(message._id, customers);                                                                      // 145
  customers.forEach(function (customer) {                                                                              // 147
    // replace keys in content                                                                                         // 148
    var replacedContent = replaceKeys({                                                                                // 149
      content: content,                                                                                                // 149
      customer: customer,                                                                                              // 149
      user: user                                                                                                       // 149
    }); // create conversation                                                                                         // 149
                                                                                                                       //
    var conversationId = createConversation({                                                                          // 152
      userId: fromUserId,                                                                                              // 153
      customerId: customer._id,                                                                                        // 154
      integrationId: integration._id,                                                                                  // 155
      content: replacedContent                                                                                         // 156
    }); // create message                                                                                              // 152
                                                                                                                       //
    createMessage({                                                                                                    // 160
      engageData: (0, _extends3.default)({                                                                             // 161
        messageId: message._id,                                                                                        // 162
        fromUserId: fromUserId                                                                                         // 163
      }, message.messenger),                                                                                           // 161
      conversationId: conversationId,                                                                                  // 166
      userId: fromUserId,                                                                                              // 167
      customerId: customer._id,                                                                                        // 168
      content: replacedContent                                                                                         // 169
    });                                                                                                                // 160
  });                                                                                                                  // 171
};                                                                                                                     // 172
                                                                                                                       //
var send = function (message) {                                                                                        // 174
  var method = message.method,                                                                                         // 174
      kind = message.kind;                                                                                             // 174
                                                                                                                       //
  if (method === METHODS.EMAIL) {                                                                                      // 177
    return sendViaEmail(message);                                                                                      // 178
  } // when kind is visitor auto, do not do anything                                                                   // 179
                                                                                                                       //
                                                                                                                       //
  if (method === METHODS.MESSENGER && kind !== MESSAGE_KINDS.VISITOR_AUTO) {                                           // 182
    return sendViaMessenger(message);                                                                                  // 183
  }                                                                                                                    // 184
};                                                                                                                     // 185
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"forms":{"server":{"methods.js":["meteor/meteor","meteor/random","meteor/underscore","meteor/check","meteor/mdg:validated-method","/imports/api/integrations/integrations","/imports/api/utils","../forms",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/forms/server/methods.js                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  add: function () {                                                                                                   // 1
    return add;                                                                                                        // 1
  },                                                                                                                   // 1
  edit: function () {                                                                                                  // 1
    return edit;                                                                                                       // 1
  },                                                                                                                   // 1
  remove: function () {                                                                                                // 1
    return remove;                                                                                                     // 1
  },                                                                                                                   // 1
  addField: function () {                                                                                              // 1
    return addField;                                                                                                   // 1
  },                                                                                                                   // 1
  editField: function () {                                                                                             // 1
    return editField;                                                                                                  // 1
  },                                                                                                                   // 1
  removeField: function () {                                                                                           // 1
    return removeField;                                                                                                // 1
  },                                                                                                                   // 1
  updateFieldsOrder: function () {                                                                                     // 1
    return updateFieldsOrder;                                                                                          // 1
  },                                                                                                                   // 1
  duplicate: function () {                                                                                             // 1
    return duplicate;                                                                                                  // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Random = void 0;                                                                                                   // 1
module.importSync("meteor/random", {                                                                                   // 1
  Random: function (v) {                                                                                               // 1
    Random = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
                                                                                                                       //
var _ = void 0;                                                                                                        // 1
                                                                                                                       //
module.importSync("meteor/underscore", {                                                                               // 1
  _: function (v) {                                                                                                    // 1
    _ = v;                                                                                                             // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var check = void 0;                                                                                                    // 1
module.importSync("meteor/check", {                                                                                    // 1
  check: function (v) {                                                                                                // 1
    check = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var ValidatedMethod = void 0;                                                                                          // 1
module.importSync("meteor/mdg:validated-method", {                                                                     // 1
  ValidatedMethod: function (v) {                                                                                      // 1
    ValidatedMethod = v;                                                                                               // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var Integrations = void 0;                                                                                             // 1
module.importSync("/imports/api/integrations/integrations", {                                                          // 1
  Integrations: function (v) {                                                                                         // 1
    Integrations = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
var ErxesMixin = void 0;                                                                                               // 1
module.importSync("/imports/api/utils", {                                                                              // 1
  ErxesMixin: function (v) {                                                                                           // 1
    ErxesMixin = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 6);                                                                                                                 // 1
var Forms = void 0,                                                                                                    // 1
    Fields = void 0;                                                                                                   // 1
module.importSync("../forms", {                                                                                        // 1
  Forms: function (v) {                                                                                                // 1
    Forms = v;                                                                                                         // 1
  },                                                                                                                   // 1
  Fields: function (v) {                                                                                               // 1
    Fields = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 7);                                                                                                                 // 1
                                                                                                                       //
var generateCode = function () {                                                                                       // 10
  // generate code automatically                                                                                       // 11
  var code = Random.id().substr(0, 6);                                                                                 // 12
                                                                                                                       //
  while (Forms.findOne({                                                                                               // 14
    code: code                                                                                                         // 14
  })) {                                                                                                                // 14
    code = Random.id().substr(0, 6);                                                                                   // 15
  }                                                                                                                    // 16
                                                                                                                       //
  return code;                                                                                                         // 18
};                                                                                                                     // 19
                                                                                                                       //
var add = new ValidatedMethod({                                                                                        // 21
  name: 'forms.add',                                                                                                   // 22
  mixins: [ErxesMixin],                                                                                                // 23
  validate: function (_ref) {                                                                                          // 25
    var doc = _ref.doc;                                                                                                // 25
    check(doc, Forms.schema);                                                                                          // 26
  },                                                                                                                   // 27
  run: function (_ref2) {                                                                                              // 29
    var doc = _ref2.doc;                                                                                               // 29
    doc.code = generateCode();                                                                                         // 30
    doc.createdUserId = this.userId;                                                                                   // 31
    doc.createdDate = new Date(); // create                                                                            // 32
                                                                                                                       //
    return Forms.insert(doc);                                                                                          // 35
  }                                                                                                                    // 36
});                                                                                                                    // 21
var edit = new ValidatedMethod({                                                                                       // 40
  name: 'forms.edit',                                                                                                  // 41
  mixins: [ErxesMixin],                                                                                                // 42
  validate: function (_ref3) {                                                                                         // 44
    var id = _ref3.id,                                                                                                 // 44
        doc = _ref3.doc;                                                                                               // 44
    check(id, String);                                                                                                 // 45
    check(doc, Forms.schema);                                                                                          // 46
  },                                                                                                                   // 47
  run: function (_ref4) {                                                                                              // 49
    var id = _ref4.id,                                                                                                 // 49
        doc = _ref4.doc;                                                                                               // 49
    return Forms.update(id, {                                                                                          // 50
      $set: doc                                                                                                        // 50
    });                                                                                                                // 50
  }                                                                                                                    // 51
});                                                                                                                    // 40
var remove = new ValidatedMethod({                                                                                     // 55
  name: 'forms.remove',                                                                                                // 56
  mixins: [ErxesMixin],                                                                                                // 57
  validate: function (id) {                                                                                            // 59
    check(id, String);                                                                                                 // 60
  },                                                                                                                   // 61
  run: function (id) {                                                                                                 // 63
    // check whether has any field                                                                                     // 64
    if (Fields.find({                                                                                                  // 65
      formId: id                                                                                                       // 65
    }).count() > 0) {                                                                                                  // 65
      throw new Meteor.Error('forms.cannotDelete.hasFields', 'You cannot delete this form. This form has some fields.');
    } // check whether used in integration                                                                             // 70
                                                                                                                       //
                                                                                                                       //
    if (Integrations.find({                                                                                            // 73
      formId: id                                                                                                       // 73
    }).count() > 0) {                                                                                                  // 73
      throw new Meteor.Error('forms.cannotDelete.usedInIntegration', 'You cannot delete this form. This form used in integration.');
    }                                                                                                                  // 78
                                                                                                                       //
    return Forms.remove(id);                                                                                           // 80
  }                                                                                                                    // 81
});                                                                                                                    // 55
var addField = new ValidatedMethod({                                                                                   // 87
  name: 'forms.addField',                                                                                              // 88
  mixins: [ErxesMixin],                                                                                                // 89
  validate: function (_ref5) {                                                                                         // 91
    var formId = _ref5.formId,                                                                                         // 91
        doc = _ref5.doc;                                                                                               // 91
    check(formId, String);                                                                                             // 92
    check(doc, Fields.schema);                                                                                         // 93
  },                                                                                                                   // 94
  run: function (_ref6) {                                                                                              // 96
    var formId = _ref6.formId,                                                                                         // 96
        doc = _ref6.doc;                                                                                               // 96
    // set form id                                                                                                     // 97
    doc.formId = formId; // find last field by order                                                                   // 98
                                                                                                                       //
    var lastField = Fields.findOne({}, {                                                                               // 101
      fields: {                                                                                                        // 101
        order: 1                                                                                                       // 101
      },                                                                                                               // 101
      sort: {                                                                                                          // 101
        order: -1                                                                                                      // 101
      }                                                                                                                // 101
    }); // if there is no field then start with 0                                                                      // 101
                                                                                                                       //
    var order = 0;                                                                                                     // 104
                                                                                                                       //
    if (lastField) {                                                                                                   // 106
      order = lastField.order + 1;                                                                                     // 107
    }                                                                                                                  // 108
                                                                                                                       //
    doc.order = order; // insert field                                                                                 // 110
                                                                                                                       //
    return Fields.insert(doc);                                                                                         // 113
  }                                                                                                                    // 114
});                                                                                                                    // 87
var editField = new ValidatedMethod({                                                                                  // 118
  name: 'forms.editField',                                                                                             // 119
  mixins: [ErxesMixin],                                                                                                // 120
  validate: function (_ref7) {                                                                                         // 122
    var _id = _ref7._id,                                                                                               // 122
        doc = _ref7.doc;                                                                                               // 122
    check(_id, String);                                                                                                // 123
    check(doc, Fields.schema);                                                                                         // 124
  },                                                                                                                   // 125
  run: function (_ref8) {                                                                                              // 127
    var _id = _ref8._id,                                                                                               // 127
        doc = _ref8.doc;                                                                                               // 127
    // update field                                                                                                    // 128
    return Fields.update({                                                                                             // 129
      _id: _id                                                                                                         // 129
    }, {                                                                                                               // 129
      $set: doc                                                                                                        // 129
    });                                                                                                                // 129
  }                                                                                                                    // 130
});                                                                                                                    // 118
var removeField = new ValidatedMethod({                                                                                // 134
  name: 'forms.removeField',                                                                                           // 135
  mixins: [ErxesMixin],                                                                                                // 136
  validate: function (_ref9) {                                                                                         // 138
    var _id = _ref9._id;                                                                                               // 138
    check(_id, String);                                                                                                // 139
  },                                                                                                                   // 140
  run: function (_ref10) {                                                                                             // 142
    var _id = _ref10._id;                                                                                              // 142
    Fields.remove(_id);                                                                                                // 143
  }                                                                                                                    // 144
});                                                                                                                    // 134
var updateFieldsOrder = new ValidatedMethod({                                                                          // 148
  name: 'forms.updateFieldsOrder',                                                                                     // 149
  mixins: [ErxesMixin],                                                                                                // 150
  validate: function (_ref11) {                                                                                        // 152
    var orderDics = _ref11.orderDics;                                                                                  // 152
    check(orderDics, Array);                                                                                           // 153
  },                                                                                                                   // 154
  run: function (_ref12) {                                                                                             // 156
    var orderDics = _ref12.orderDics;                                                                                  // 156
    // update each field's order                                                                                       // 157
    orderDics.forEach(function (_ref13) {                                                                              // 158
      var _id = _ref13._id,                                                                                            // 158
          order = _ref13.order;                                                                                        // 158
      Fields.update({                                                                                                  // 159
        _id: _id                                                                                                       // 159
      }, {                                                                                                             // 159
        $set: {                                                                                                        // 159
          order: order                                                                                                 // 159
        }                                                                                                              // 159
      });                                                                                                              // 159
    });                                                                                                                // 160
  }                                                                                                                    // 161
});                                                                                                                    // 148
var duplicate = new ValidatedMethod({                                                                                  // 165
  name: 'forms.duplicate',                                                                                             // 166
  mixins: [ErxesMixin],                                                                                                // 167
  validate: function (_ref14) {                                                                                        // 169
    var id = _ref14.id;                                                                                                // 169
    check(id, String);                                                                                                 // 170
  },                                                                                                                   // 171
  run: function (_ref15) {                                                                                             // 173
    var id = _ref15.id;                                                                                                // 173
    var form = Forms.findOne(id);                                                                                      // 174
    form.title = form.title + " duplicated";                                                                           // 176
    form.code = generateCode();                                                                                        // 177
    delete form._id; // duplicate form                                                                                 // 179
                                                                                                                       //
    var newFormId = Forms.insert(form); // duplicate fields                                                            // 182
                                                                                                                       //
    Fields.find({                                                                                                      // 185
      formId: id                                                                                                       // 185
    }).forEach(function (field) {                                                                                      // 185
      var fieldParams = _.omit(field, '_id');                                                                          // 186
                                                                                                                       //
      fieldParams.formId = newFormId;                                                                                  // 187
      Fields.insert(fieldParams);                                                                                      // 189
    });                                                                                                                // 190
  }                                                                                                                    // 191
});                                                                                                                    // 165
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"forms.js":["faker","meteor/random","meteor/dburles:factory","meteor/mongo","meteor/aldeed:simple-schema",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/forms/forms.js                                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  Forms: function () {                                                                                                 // 1
    return Forms;                                                                                                      // 1
  },                                                                                                                   // 1
  Fields: function () {                                                                                                // 1
    return Fields;                                                                                                     // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var faker = void 0;                                                                                                    // 1
module.importSync("faker", {                                                                                           // 1
  "default": function (v) {                                                                                            // 1
    faker = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Random = void 0;                                                                                                   // 1
module.importSync("meteor/random", {                                                                                   // 1
  Random: function (v) {                                                                                               // 1
    Random = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var Factory = void 0;                                                                                                  // 1
module.importSync("meteor/dburles:factory", {                                                                          // 1
  Factory: function (v) {                                                                                              // 1
    Factory = v;                                                                                                       // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var Mongo = void 0;                                                                                                    // 1
module.importSync("meteor/mongo", {                                                                                    // 1
  Mongo: function (v) {                                                                                                // 1
    Mongo = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var SimpleSchema = void 0;                                                                                             // 1
module.importSync("meteor/aldeed:simple-schema", {                                                                     // 1
  SimpleSchema: function (v) {                                                                                         // 1
    SimpleSchema = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var Forms = new Mongo.Collection('forms');                                                                             // 7
var Fields = new Mongo.Collection('form_fields');                                                                      // 8
/* ----------------------- Schemas ----------------------- */ // forms                                                 // 10
Forms.schema = new SimpleSchema({                                                                                      // 13
  title: {                                                                                                             // 14
    type: String                                                                                                       // 15
  },                                                                                                                   // 14
  description: {                                                                                                       // 17
    type: String,                                                                                                      // 18
    optional: true                                                                                                     // 19
  }                                                                                                                    // 17
});                                                                                                                    // 13
var FormSchemaExtra = new SimpleSchema({                                                                               // 23
  code: {                                                                                                              // 24
    type: String                                                                                                       // 25
  },                                                                                                                   // 24
  createdUserId: {                                                                                                     // 27
    type: String                                                                                                       // 28
  },                                                                                                                   // 27
  createdDate: {                                                                                                       // 30
    type: Date                                                                                                         // 31
  }                                                                                                                    // 30
}); // fields                                                                                                          // 23
                                                                                                                       //
Fields.schema = new SimpleSchema({                                                                                     // 36
  type: {                                                                                                              // 37
    type: String,                                                                                                      // 38
    allowedValues: ['input', 'textarea', 'radio', 'check', 'select', 'divider', 'email', 'firstName', 'lastName']      // 39
  },                                                                                                                   // 37
  validation: {                                                                                                        // 51
    type: String,                                                                                                      // 52
    optional: true,                                                                                                    // 53
    allowedValues: ['', 'number', 'date', 'email']                                                                     // 54
  },                                                                                                                   // 51
  text: {                                                                                                              // 56
    type: String,                                                                                                      // 57
    optional: true                                                                                                     // 58
  },                                                                                                                   // 56
  description: {                                                                                                       // 60
    type: String,                                                                                                      // 61
    optional: true                                                                                                     // 62
  },                                                                                                                   // 60
  // for radio, check, select, choices                                                                                 // 65
  options: {                                                                                                           // 66
    type: [String],                                                                                                    // 67
    optional: true                                                                                                     // 68
  },                                                                                                                   // 66
  isRequired: {                                                                                                        // 71
    type: Boolean                                                                                                      // 72
  }                                                                                                                    // 71
});                                                                                                                    // 36
var FieldSchemaExtra = new SimpleSchema({                                                                              // 76
  formId: {                                                                                                            // 77
    type: String                                                                                                       // 78
  },                                                                                                                   // 77
  order: {                                                                                                             // 80
    type: Number,                                                                                                      // 81
    optional: true                                                                                                     // 82
  }                                                                                                                    // 80
}); /* ----------------------- Collections ----------------------- */                                                  // 76
Forms.attachSchema(Forms.schema);                                                                                      // 88
Forms.attachSchema(FormSchemaExtra);                                                                                   // 89
Fields.attachSchema(Fields.schema);                                                                                    // 91
Fields.attachSchema(FieldSchemaExtra);                                                                                 // 92
Factory.define('form', Forms, {                                                                                        // 94
  title: function () {                                                                                                 // 95
    return faker.random.word();                                                                                        // 95
  },                                                                                                                   // 95
  code: function () {                                                                                                  // 96
    return Random.id();                                                                                                // 96
  },                                                                                                                   // 96
  description: function () {                                                                                           // 97
    return faker.random.word();                                                                                        // 97
  },                                                                                                                   // 97
  createdUserId: function () {                                                                                         // 98
    return Random.id();                                                                                                // 98
  },                                                                                                                   // 98
  createdDate: function () {                                                                                           // 99
    return faker.date.recent();                                                                                        // 99
  }                                                                                                                    // 99
});                                                                                                                    // 94
Factory.define('formField', Fields, {                                                                                  // 102
  formId: function () {                                                                                                // 103
    return Random.id();                                                                                                // 103
  },                                                                                                                   // 103
  type: 'input',                                                                                                       // 104
  isRequired: false,                                                                                                   // 105
  order: function () {                                                                                                 // 106
    return faker.random.number();                                                                                      // 106
  }                                                                                                                    // 106
});                                                                                                                    // 102
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"responseTemplates":{"server":{"methods.js":["meteor/check","meteor/mdg:validated-method","/imports/api/utils","../responseTemplates",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/responseTemplates/server/methods.js                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  add: function () {                                                                                                   // 1
    return add;                                                                                                        // 1
  },                                                                                                                   // 1
  edit: function () {                                                                                                  // 1
    return edit;                                                                                                       // 1
  },                                                                                                                   // 1
  remove: function () {                                                                                                // 1
    return remove;                                                                                                     // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var check = void 0;                                                                                                    // 1
module.importSync("meteor/check", {                                                                                    // 1
  check: function (v) {                                                                                                // 1
    check = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var ValidatedMethod = void 0;                                                                                          // 1
module.importSync("meteor/mdg:validated-method", {                                                                     // 1
  ValidatedMethod: function (v) {                                                                                      // 1
    ValidatedMethod = v;                                                                                               // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var ErxesMixin = void 0;                                                                                               // 1
module.importSync("/imports/api/utils", {                                                                              // 1
  ErxesMixin: function (v) {                                                                                           // 1
    ErxesMixin = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var ResponseTemplates = void 0;                                                                                        // 1
module.importSync("../responseTemplates", {                                                                            // 1
  ResponseTemplates: function (v) {                                                                                    // 1
    ResponseTemplates = v;                                                                                             // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var add = new ValidatedMethod({                                                                                        // 7
  name: 'responseTemplates.add',                                                                                       // 8
  mixins: [ErxesMixin],                                                                                                // 9
  validate: function (_ref) {                                                                                          // 11
    var doc = _ref.doc;                                                                                                // 11
    check(doc, ResponseTemplates.schema);                                                                              // 12
  },                                                                                                                   // 13
  run: function (_ref2) {                                                                                              // 15
    var doc = _ref2.doc;                                                                                               // 15
    return ResponseTemplates.insert(doc);                                                                              // 16
  }                                                                                                                    // 17
});                                                                                                                    // 7
var edit = new ValidatedMethod({                                                                                       // 21
  name: 'responseTemplates.edit',                                                                                      // 22
  mixins: [ErxesMixin],                                                                                                // 23
  validate: function (_ref3) {                                                                                         // 25
    var id = _ref3.id,                                                                                                 // 25
        doc = _ref3.doc;                                                                                               // 25
    check(id, String);                                                                                                 // 26
    check(doc, ResponseTemplates.schema);                                                                              // 27
  },                                                                                                                   // 28
  run: function (_ref4) {                                                                                              // 30
    var id = _ref4.id,                                                                                                 // 30
        doc = _ref4.doc;                                                                                               // 30
    return ResponseTemplates.update(id, {                                                                              // 31
      $set: doc                                                                                                        // 31
    });                                                                                                                // 31
  }                                                                                                                    // 32
});                                                                                                                    // 21
var remove = new ValidatedMethod({                                                                                     // 36
  name: 'responseTemplates.remove',                                                                                    // 37
  mixins: [ErxesMixin],                                                                                                // 38
  validate: function (id) {                                                                                            // 40
    check(id, String);                                                                                                 // 41
  },                                                                                                                   // 42
  run: function (id) {                                                                                                 // 44
    return ResponseTemplates.remove({                                                                                  // 45
      _id: id                                                                                                          // 45
    });                                                                                                                // 45
  }                                                                                                                    // 46
});                                                                                                                    // 36
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"responseTemplates.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","meteor/mongo","meteor/aldeed:simple-schema","/imports/api/brands/brands",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/responseTemplates/responseTemplates.js                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");                                                //
                                                                                                                       //
var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                                       //
                                                                                                                       //
var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");                          //
                                                                                                                       //
var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                                 //
                                                                                                                       //
var _inherits2 = require("babel-runtime/helpers/inherits");                                                            //
                                                                                                                       //
var _inherits3 = _interopRequireDefault(_inherits2);                                                                   //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
module.export({                                                                                                        // 1
  ResponseTemplates: function () {                                                                                     // 1
    return ResponseTemplates;                                                                                          // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Mongo = void 0;                                                                                                    // 1
module.importSync("meteor/mongo", {                                                                                    // 1
  Mongo: function (v) {                                                                                                // 1
    Mongo = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var SimpleSchema = void 0;                                                                                             // 1
module.importSync("meteor/aldeed:simple-schema", {                                                                     // 1
  SimpleSchema: function (v) {                                                                                         // 1
    SimpleSchema = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var Brands = void 0;                                                                                                   // 1
module.importSync("/imports/api/brands/brands", {                                                                      // 1
  Brands: function (v) {                                                                                               // 1
    Brands = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
                                                                                                                       //
// Response template collection                                                                                        // 5
var Collection = function (_Mongo$Collection) {                                                                        //
  (0, _inherits3.default)(Collection, _Mongo$Collection);                                                              //
                                                                                                                       //
  function Collection() {                                                                                              //
    (0, _classCallCheck3.default)(this, Collection);                                                                   //
    return (0, _possibleConstructorReturn3.default)(this, _Mongo$Collection.apply(this, arguments));                   //
  }                                                                                                                    //
                                                                                                                       //
  return Collection;                                                                                                   //
}(Mongo.Collection);                                                                                                   //
                                                                                                                       //
var ResponseTemplates = new Collection('response_templates');                                                          // 8
// collection helpers                                                                                                  // 10
ResponseTemplates.helpers({                                                                                            // 11
  brand: function () {                                                                                                 // 12
    return Brands.findOne(this.brandId);                                                                               // 13
  }                                                                                                                    // 14
});                                                                                                                    // 11
ResponseTemplates.schema = new SimpleSchema({                                                                          // 17
  brandId: {                                                                                                           // 18
    type: String                                                                                                       // 19
  },                                                                                                                   // 18
  name: {                                                                                                              // 21
    type: String                                                                                                       // 22
  },                                                                                                                   // 21
  content: {                                                                                                           // 24
    type: String                                                                                                       // 25
  },                                                                                                                   // 24
  files: {                                                                                                             // 27
    type: [new SimpleSchema({                                                                                          // 28
      url: {                                                                                                           // 30
        type: String                                                                                                   // 30
      },                                                                                                               // 30
      type: {                                                                                                          // 31
        type: String,                                                                                                  // 31
        optional: true                                                                                                 // 31
      },                                                                                                               // 31
      name: {                                                                                                          // 32
        type: String,                                                                                                  // 32
        optional: true                                                                                                 // 32
      },                                                                                                               // 32
      size: {                                                                                                          // 33
        type: Number,                                                                                                  // 33
        optional: true                                                                                                 // 33
      }                                                                                                                // 33
    })],                                                                                                               // 29
    optional: true                                                                                                     // 36
  }                                                                                                                    // 27
});                                                                                                                    // 17
ResponseTemplates.attachSchema(ResponseTemplates.schema);                                                              // 40
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"tags":{"server":{"api.js":["meteor/check","meteor/meteor","meteor/mongo","meteor/underscore","../constants","../tags",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/tags/server/api.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  tagObject: function () {                                                                                             // 1
    return tagObject;                                                                                                  // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var check = void 0,                                                                                                    // 1
    Match = void 0;                                                                                                    // 1
module.importSync("meteor/check", {                                                                                    // 1
  check: function (v) {                                                                                                // 1
    check = v;                                                                                                         // 1
  },                                                                                                                   // 1
  Match: function (v) {                                                                                                // 1
    Match = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var Mongo = void 0;                                                                                                    // 1
module.importSync("meteor/mongo", {                                                                                    // 1
  Mongo: function (v) {                                                                                                // 1
    Mongo = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
                                                                                                                       //
var _ = void 0;                                                                                                        // 1
                                                                                                                       //
module.importSync("meteor/underscore", {                                                                               // 1
  _: function (v) {                                                                                                    // 1
    _ = v;                                                                                                             // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var TAG_TYPES = void 0;                                                                                                // 1
module.importSync("../constants", {                                                                                    // 1
  TAG_TYPES: function (v) {                                                                                            // 1
    TAG_TYPES = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var Tags = void 0;                                                                                                     // 1
module.importSync("../tags", {                                                                                         // 1
  Tags: function (v) {                                                                                                 // 1
    Tags = v;                                                                                                          // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
                                                                                                                       //
function tagObject(_ref) {                                                                                             // 8
  var tagIds = _ref.tagIds,                                                                                            // 8
      objectIds = _ref.objectIds,                                                                                      // 8
      collection = _ref.collection;                                                                                    // 8
  check(collection, Mongo.Collection);                                                                                 // 9
  check(collection.TAG_TYPE, Match.Where(function (t) {                                                                // 10
    check(t, String);                                                                                                  // 13
    return TAG_TYPES.ALL_LIST.indexOf(t) > -1;                                                                         // 14
  }));                                                                                                                 // 15
  check(tagIds, [String]);                                                                                             // 18
  check(objectIds, [String]);                                                                                          // 19
  var type = collection.TAG_TYPE;                                                                                      // 21
                                                                                                                       //
  if (Tags.find({                                                                                                      // 23
    _id: {                                                                                                             // 23
      $in: tagIds                                                                                                      // 23
    },                                                                                                                 // 23
    type: type                                                                                                         // 23
  }).count() !== tagIds.length) {                                                                                      // 23
    throw new Meteor.Error('tags.tagObject.notFound', 'Tag not found.');                                               // 24
  }                                                                                                                    // 25
                                                                                                                       //
  var objects = collection.find({                                                                                      // 27
    _id: {                                                                                                             // 27
      $in: objectIds                                                                                                   // 27
    }                                                                                                                  // 27
  }, {                                                                                                                 // 27
    fields: {                                                                                                          // 27
      tagIds: 1                                                                                                        // 27
    }                                                                                                                  // 27
  });                                                                                                                  // 27
  var removeIds = [];                                                                                                  // 29
  objects.forEach(function (obj) {                                                                                     // 31
    removeIds.push(obj.tagIds || []);                                                                                  // 32
  });                                                                                                                  // 33
  removeIds = _.uniq(_.flatten(removeIds));                                                                            // 35
  Tags.update({                                                                                                        // 37
    _id: {                                                                                                             // 37
      $in: removeIds                                                                                                   // 37
    }                                                                                                                  // 37
  }, {                                                                                                                 // 37
    $inc: {                                                                                                            // 37
      objectCount: -1                                                                                                  // 37
    }                                                                                                                  // 37
  }, {                                                                                                                 // 37
    multi: true                                                                                                        // 37
  });                                                                                                                  // 37
  collection.update({                                                                                                  // 39
    _id: {                                                                                                             // 39
      $in: objectIds                                                                                                   // 39
    }                                                                                                                  // 39
  }, {                                                                                                                 // 39
    $set: {                                                                                                            // 39
      tagIds: tagIds                                                                                                   // 39
    }                                                                                                                  // 39
  }, {                                                                                                                 // 39
    multi: true                                                                                                        // 39
  });                                                                                                                  // 39
  Tags.update({                                                                                                        // 41
    _id: {                                                                                                             // 41
      $in: tagIds                                                                                                      // 41
    }                                                                                                                  // 41
  }, {                                                                                                                 // 41
    $inc: {                                                                                                            // 41
      objectCount: 1                                                                                                   // 41
    }                                                                                                                  // 41
  }, {                                                                                                                 // 41
    multi: true                                                                                                        // 41
  });                                                                                                                  // 41
}                                                                                                                      // 42
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"methods.js":["meteor/meteor","meteor/check","meteor/mdg:validated-method","/imports/api/customers/customers","/imports/api/conversations/conversations","/imports/api/engage/engage","/imports/api/utils","../tags","../constants","./api",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/tags/server/methods.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  add: function () {                                                                                                   // 1
    return add;                                                                                                        // 1
  },                                                                                                                   // 1
  edit: function () {                                                                                                  // 1
    return edit;                                                                                                       // 1
  },                                                                                                                   // 1
  remove: function () {                                                                                                // 1
    return remove;                                                                                                     // 1
  },                                                                                                                   // 1
  tag: function () {                                                                                                   // 1
    return tag;                                                                                                        // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var check = void 0;                                                                                                    // 1
module.importSync("meteor/check", {                                                                                    // 1
  check: function (v) {                                                                                                // 1
    check = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var ValidatedMethod = void 0;                                                                                          // 1
module.importSync("meteor/mdg:validated-method", {                                                                     // 1
  ValidatedMethod: function (v) {                                                                                      // 1
    ValidatedMethod = v;                                                                                               // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var Customers = void 0;                                                                                                // 1
module.importSync("/imports/api/customers/customers", {                                                                // 1
  Customers: function (v) {                                                                                            // 1
    Customers = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var Conversations = void 0;                                                                                            // 1
module.importSync("/imports/api/conversations/conversations", {                                                        // 1
  Conversations: function (v) {                                                                                        // 1
    Conversations = v;                                                                                                 // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var Messages = void 0;                                                                                                 // 1
module.importSync("/imports/api/engage/engage", {                                                                      // 1
  Messages: function (v) {                                                                                             // 1
    Messages = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
var ErxesMixin = void 0;                                                                                               // 1
module.importSync("/imports/api/utils", {                                                                              // 1
  ErxesMixin: function (v) {                                                                                           // 1
    ErxesMixin = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 6);                                                                                                                 // 1
var Tags = void 0,                                                                                                     // 1
    FormSchema = void 0,                                                                                               // 1
    TagItemSchema = void 0;                                                                                            // 1
module.importSync("../tags", {                                                                                         // 1
  Tags: function (v) {                                                                                                 // 1
    Tags = v;                                                                                                          // 1
  },                                                                                                                   // 1
  FormSchema: function (v) {                                                                                           // 1
    FormSchema = v;                                                                                                    // 1
  },                                                                                                                   // 1
  TagItemSchema: function (v) {                                                                                        // 1
    TagItemSchema = v;                                                                                                 // 1
  }                                                                                                                    // 1
}, 7);                                                                                                                 // 1
var TAG_TYPES = void 0;                                                                                                // 1
module.importSync("../constants", {                                                                                    // 1
  TAG_TYPES: function (v) {                                                                                            // 1
    TAG_TYPES = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 8);                                                                                                                 // 1
var tagObject = void 0;                                                                                                // 1
module.importSync("./api", {                                                                                           // 1
  tagObject: function (v) {                                                                                            // 1
    tagObject = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 9);                                                                                                                 // 1
var add = new ValidatedMethod({                                                                                        // 12
  name: 'tags.add',                                                                                                    // 13
  validate: FormSchema.validator(),                                                                                    // 14
  mixins: [ErxesMixin],                                                                                                // 15
  run: function (doc) {                                                                                                // 17
    return Tags.insert(doc);                                                                                           // 18
  }                                                                                                                    // 19
});                                                                                                                    // 12
var edit = new ValidatedMethod({                                                                                       // 22
  name: 'tags.edit',                                                                                                   // 23
  mixins: [ErxesMixin],                                                                                                // 24
  validate: function (_ref) {                                                                                          // 26
    var id = _ref.id,                                                                                                  // 26
        doc = _ref.doc;                                                                                                // 26
    check(id, String);                                                                                                 // 27
    check(doc, FormSchema);                                                                                            // 28
  },                                                                                                                   // 29
  run: function (_ref2) {                                                                                              // 31
    var id = _ref2.id,                                                                                                 // 31
        doc = _ref2.doc;                                                                                               // 31
                                                                                                                       //
    if (!Tags.findOne(id)) {                                                                                           // 32
      throw new Meteor.Error('tags.edit.notFound', 'Tag not found');                                                   // 33
    }                                                                                                                  // 34
                                                                                                                       //
    return Tags.update(id, {                                                                                           // 36
      $set: doc                                                                                                        // 36
    });                                                                                                                // 36
  }                                                                                                                    // 37
});                                                                                                                    // 22
var remove = new ValidatedMethod({                                                                                     // 40
  name: 'tags.remove',                                                                                                 // 41
  mixins: [ErxesMixin],                                                                                                // 42
  validate: function (ids) {                                                                                           // 44
    check(ids, [String]);                                                                                              // 45
  },                                                                                                                   // 46
  run: function (ids) {                                                                                                // 48
    var tagCount = Tags.find({                                                                                         // 49
      _id: {                                                                                                           // 49
        $in: ids                                                                                                       // 49
      }                                                                                                                // 49
    }).count();                                                                                                        // 49
                                                                                                                       //
    if (tagCount !== ids.length) {                                                                                     // 51
      throw new Meteor.Error('tags.remove.notFound', 'Tag not found');                                                 // 52
    }                                                                                                                  // 53
                                                                                                                       //
    var count = 0;                                                                                                     // 55
    count += Customers.find({                                                                                          // 57
      tagIds: {                                                                                                        // 57
        $in: ids                                                                                                       // 57
      }                                                                                                                // 57
    }).count();                                                                                                        // 57
    count += Conversations.find({                                                                                      // 58
      tagIds: {                                                                                                        // 58
        $in: ids                                                                                                       // 58
      }                                                                                                                // 58
    }).count();                                                                                                        // 58
    count += Messages.find({                                                                                           // 59
      tagIds: {                                                                                                        // 59
        $in: ids                                                                                                       // 59
      }                                                                                                                // 59
    }).count(); // can't remove a tag with tagged objects                                                              // 59
                                                                                                                       //
    if (count > 0) {                                                                                                   // 62
      throw new Meteor.Error('tags.remove.restricted', "Can't remove a tag with tagged object(s)");                    // 63
    }                                                                                                                  // 64
                                                                                                                       //
    return Tags.remove({                                                                                               // 66
      _id: {                                                                                                           // 66
        $in: ids                                                                                                       // 66
      }                                                                                                                // 66
    });                                                                                                                // 66
  }                                                                                                                    // 67
});                                                                                                                    // 40
var tag = new ValidatedMethod({                                                                                        // 71
  name: 'tags.tag',                                                                                                    // 72
  mixins: [ErxesMixin],                                                                                                // 73
  validate: TagItemSchema.validator(),                                                                                 // 74
  run: function (_ref3) {                                                                                              // 76
    var type = _ref3.type,                                                                                             // 76
        targetIds = _ref3.targetIds,                                                                                   // 76
        tagIds = _ref3.tagIds;                                                                                         // 76
    var collection = Conversations;                                                                                    // 77
                                                                                                                       //
    if (type === TAG_TYPES.CUSTOMER) {                                                                                 // 79
      collection = Customers;                                                                                          // 80
    }                                                                                                                  // 81
                                                                                                                       //
    if (type === TAG_TYPES.ENGAGE_MESSAGE) {                                                                           // 83
      collection = Messages;                                                                                           // 84
    }                                                                                                                  // 85
                                                                                                                       //
    tagObject({                                                                                                        // 87
      tagIds: tagIds,                                                                                                  // 88
      objectIds: targetIds,                                                                                            // 89
      collection: collection                                                                                           // 90
    });                                                                                                                // 87
  }                                                                                                                    // 92
});                                                                                                                    // 71
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"constants.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/tags/constants.js                                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  TAG_TYPES: function () {                                                                                             // 1
    return TAG_TYPES;                                                                                                  // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var TAG_TYPES = {                                                                                                      // 1
  CONVERSATION: 'conversation',                                                                                        // 2
  CUSTOMER: 'customer',                                                                                                // 3
  ENGAGE_MESSAGE: 'engageMessage',                                                                                     // 4
  ALL_LIST: ['conversation', 'customer', 'engageMessage']                                                              // 5
};                                                                                                                     // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tags.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","meteor/mongo","meteor/meteor","meteor/random","meteor/dburles:factory","meteor/aldeed:simple-schema","./constants",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/tags/tags.js                                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");                                                //
                                                                                                                       //
var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                                       //
                                                                                                                       //
var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");                          //
                                                                                                                       //
var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                                 //
                                                                                                                       //
var _inherits2 = require("babel-runtime/helpers/inherits");                                                            //
                                                                                                                       //
var _inherits3 = _interopRequireDefault(_inherits2);                                                                   //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
module.export({                                                                                                        // 1
  Tags: function () {                                                                                                  // 1
    return Tags;                                                                                                       // 1
  },                                                                                                                   // 1
  FormSchema: function () {                                                                                            // 1
    return FormSchema;                                                                                                 // 1
  },                                                                                                                   // 1
  TagItemSchema: function () {                                                                                         // 1
    return TagItemSchema;                                                                                              // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Mongo = void 0;                                                                                                    // 1
module.importSync("meteor/mongo", {                                                                                    // 1
  Mongo: function (v) {                                                                                                // 1
    Mongo = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var Random = void 0;                                                                                                   // 1
module.importSync("meteor/random", {                                                                                   // 1
  Random: function (v) {                                                                                               // 1
    Random = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var Factory = void 0;                                                                                                  // 1
module.importSync("meteor/dburles:factory", {                                                                          // 1
  Factory: function (v) {                                                                                              // 1
    Factory = v;                                                                                                       // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var SimpleSchema = void 0;                                                                                             // 1
module.importSync("meteor/aldeed:simple-schema", {                                                                     // 1
  SimpleSchema: function (v) {                                                                                         // 1
    SimpleSchema = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var TAG_TYPES = void 0;                                                                                                // 1
module.importSync("./constants", {                                                                                     // 1
  TAG_TYPES: function (v) {                                                                                            // 1
    TAG_TYPES = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
                                                                                                                       //
var TagsCollection = function (_Mongo$Collection) {                                                                    //
  (0, _inherits3.default)(TagsCollection, _Mongo$Collection);                                                          //
                                                                                                                       //
  function TagsCollection() {                                                                                          //
    (0, _classCallCheck3.default)(this, TagsCollection);                                                               //
    return (0, _possibleConstructorReturn3.default)(this, _Mongo$Collection.apply(this, arguments));                   //
  }                                                                                                                    //
                                                                                                                       //
  TagsCollection.prototype.insert = function () {                                                                      //
    function insert(doc, callback) {                                                                                   //
      // extend doc with auto values                                                                                   // 10
      var tag = Object.assign({                                                                                        // 11
        createdAt: new Date(),                                                                                         // 13
        objectCount: 0                                                                                                 // 14
      }, doc);                                                                                                         // 12
                                                                                                                       //
      if (!this.validateUniqueness(null, tag)) {                                                                       // 19
        throw new Meteor.Error('tags.insert.restricted', 'Tag duplicated');                                            // 20
      }                                                                                                                // 21
                                                                                                                       //
      return _Mongo$Collection.prototype.insert.call(this, tag, callback);                                             // 23
    }                                                                                                                  // 24
                                                                                                                       //
    return insert;                                                                                                     //
  }();                                                                                                                 //
                                                                                                                       //
  TagsCollection.prototype.update = function () {                                                                      //
    function update(selector, modifier) {                                                                              //
      var set = modifier.$set || {};                                                                                   // 27
                                                                                                                       //
      if (!this.validateUniqueness(selector, set)) {                                                                   // 29
        throw new Meteor.Error('tags.update.restricted', 'Tag duplicated');                                            // 30
      }                                                                                                                // 31
                                                                                                                       //
      return _Mongo$Collection.prototype.update.call(this, selector, modifier);                                        // 33
    }                                                                                                                  // 34
                                                                                                                       //
    return update;                                                                                                     //
  }();                                                                                                                 //
                                                                                                                       //
  TagsCollection.prototype.validateUniqueness = function () {                                                          //
    function validateUniqueness(selector, data) {                                                                      //
      var name = data.name,                                                                                            // 36
          type = data.type;                                                                                            // 36
      var filter = {                                                                                                   // 38
        name: name,                                                                                                    // 38
        type: type                                                                                                     // 38
      };                                                                                                               // 38
                                                                                                                       //
      if (!name || !type) {                                                                                            // 40
        return true;                                                                                                   // 41
      } // can't update name & type same time more than one tags.                                                      // 42
                                                                                                                       //
                                                                                                                       //
      if (selector && this.find(selector).count() > 1) {                                                               // 45
        return false;                                                                                                  // 46
      }                                                                                                                // 47
                                                                                                                       //
      var obj = selector && this.findOne(selector);                                                                    // 49
                                                                                                                       //
      if (obj) {                                                                                                       // 50
        filter._id = {                                                                                                 // 51
          $ne: obj._id                                                                                                 // 51
        };                                                                                                             // 51
      }                                                                                                                // 52
                                                                                                                       //
      if (this.findOne(filter)) {                                                                                      // 54
        return false;                                                                                                  // 55
      }                                                                                                                // 56
                                                                                                                       //
      return true;                                                                                                     // 58
    }                                                                                                                  // 59
                                                                                                                       //
    return validateUniqueness;                                                                                         //
  }();                                                                                                                 //
                                                                                                                       //
  return TagsCollection;                                                                                               //
}(Mongo.Collection);                                                                                                   //
                                                                                                                       //
var Tags = new TagsCollection('tags');                                                                                 // 62
Tags.deny({                                                                                                            // 64
  insert: function () {                                                                                                // 65
    return true;                                                                                                       // 66
  },                                                                                                                   // 67
  update: function () {                                                                                                // 68
    return true;                                                                                                       // 69
  },                                                                                                                   // 70
  remove: function () {                                                                                                // 71
    return true;                                                                                                       // 72
  }                                                                                                                    // 73
});                                                                                                                    // 64
var FormSchema = new SimpleSchema({                                                                                    // 76
  name: {                                                                                                              // 77
    type: String                                                                                                       // 78
  },                                                                                                                   // 77
  type: {                                                                                                              // 80
    type: String,                                                                                                      // 81
    allowedValues: TAG_TYPES.ALL_LIST                                                                                  // 82
  },                                                                                                                   // 80
  colorCode: {                                                                                                         // 84
    type: String                                                                                                       // 85
  }                                                                                                                    // 84
});                                                                                                                    // 76
Tags.schema = new SimpleSchema([FormSchema, {                                                                          // 89
  createdAt: {                                                                                                         // 92
    type: Date                                                                                                         // 93
  },                                                                                                                   // 92
  objectCount: {                                                                                                       // 95
    type: Number                                                                                                       // 96
  }                                                                                                                    // 95
}]);                                                                                                                   // 91
Tags.attachSchema(Tags.schema); // helper for conversation, customer, engage message etc ...                           // 101
                                                                                                                       //
var TagItemSchema = new SimpleSchema({                                                                                 // 104
  type: {                                                                                                              // 105
    type: String                                                                                                       // 106
  },                                                                                                                   // 105
  targetIds: {                                                                                                         // 108
    type: [String],                                                                                                    // 109
    regEx: SimpleSchema.RegEx.Id                                                                                       // 110
  },                                                                                                                   // 108
  tagIds: {                                                                                                            // 112
    type: [String],                                                                                                    // 113
    regEx: SimpleSchema.RegEx.Id                                                                                       // 114
  }                                                                                                                    // 112
});                                                                                                                    // 104
Tags.publicFields = {                                                                                                  // 118
  name: 1,                                                                                                             // 119
  type: 1,                                                                                                             // 120
  createdAt: 1,                                                                                                        // 121
  colorCode: 1                                                                                                         // 122
};                                                                                                                     // 118
Factory.define('tag', Tags, {                                                                                          // 125
  name: function () {                                                                                                  // 126
    return Random.id();                                                                                                // 126
  },                                                                                                                   // 126
  type: function () {                                                                                                  // 127
    return TAG_TYPES.CONVERSATION;                                                                                     // 127
  },                                                                                                                   // 127
  colorCode: function () {                                                                                             // 128
    return '#000';                                                                                                     // 128
  }                                                                                                                    // 128
});                                                                                                                    // 125
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"utils.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","meteor/mongo","meteor/underscore","meteor/aldeed:simple-schema","./tags",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/tags/utils.js                                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");                                                //
                                                                                                                       //
var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                                       //
                                                                                                                       //
var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");                          //
                                                                                                                       //
var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                                 //
                                                                                                                       //
var _inherits2 = require("babel-runtime/helpers/inherits");                                                            //
                                                                                                                       //
var _inherits3 = _interopRequireDefault(_inherits2);                                                                   //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
module.export({                                                                                                        // 1
  TagsCollection: function () {                                                                                        // 1
    return TagsCollection;                                                                                             // 1
  },                                                                                                                   // 1
  tagsHelper: function () {                                                                                            // 1
    return tagsHelper;                                                                                                 // 1
  },                                                                                                                   // 1
  tagSchemaOptions: function () {                                                                                      // 1
    return tagSchemaOptions;                                                                                           // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Mongo = void 0;                                                                                                    // 1
module.importSync("meteor/mongo", {                                                                                    // 1
  Mongo: function (v) {                                                                                                // 1
    Mongo = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
                                                                                                                       //
var _ = void 0;                                                                                                        // 1
                                                                                                                       //
module.importSync("meteor/underscore", {                                                                               // 1
  _: function (v) {                                                                                                    // 1
    _ = v;                                                                                                             // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var SimpleSchema = void 0;                                                                                             // 1
module.importSync("meteor/aldeed:simple-schema", {                                                                     // 1
  SimpleSchema: function (v) {                                                                                         // 1
    SimpleSchema = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var Tags = void 0;                                                                                                     // 1
module.importSync("./tags", {                                                                                          // 1
  Tags: function (v) {                                                                                                 // 1
    Tags = v;                                                                                                          // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
                                                                                                                       //
var TagsCollection = function (_Mongo$Collection) {                                                                    //
  (0, _inherits3.default)(TagsCollection, _Mongo$Collection);                                                          //
                                                                                                                       //
  function TagsCollection() {                                                                                          //
    (0, _classCallCheck3.default)(this, TagsCollection);                                                               //
    return (0, _possibleConstructorReturn3.default)(this, _Mongo$Collection.apply(this, arguments));                   //
  }                                                                                                                    //
                                                                                                                       //
  TagsCollection.prototype.remove = function () {                                                                      //
    function remove(selector, callback) {                                                                              //
      var objects = this.find(selector).fetch();                                                                       // 8
                                                                                                                       //
      var result = _Mongo$Collection.prototype.remove.call(this, selector, callback); // remove tag items that using removing objects
                                                                                                                       //
                                                                                                                       //
      var removeIds = [];                                                                                              // 12
      objects.forEach(function (obj) {                                                                                 // 14
        removeIds.push(obj.tagIds || []);                                                                              // 15
      });                                                                                                              // 16
      removeIds = _.uniq(_.flatten(removeIds));                                                                        // 18
      Tags.update({                                                                                                    // 19
        _id: {                                                                                                         // 19
          $in: removeIds                                                                                               // 19
        }                                                                                                              // 19
      }, {                                                                                                             // 19
        $inc: {                                                                                                        // 19
          objectCount: -1                                                                                              // 19
        }                                                                                                              // 19
      });                                                                                                              // 19
      return result;                                                                                                   // 21
    }                                                                                                                  // 22
                                                                                                                       //
    return remove;                                                                                                     //
  }();                                                                                                                 //
                                                                                                                       //
  return TagsCollection;                                                                                               //
}(Mongo.Collection);                                                                                                   //
                                                                                                                       //
var tagsHelper = {                                                                                                     // 25
  tags: function () {                                                                                                  // 26
    return Tags.find({                                                                                                 // 27
      _id: {                                                                                                           // 27
        $in: this.tagIds || []                                                                                         // 27
      }                                                                                                                // 27
    }).fetch();                                                                                                        // 27
  }                                                                                                                    // 28
};                                                                                                                     // 25
                                                                                                                       //
var tagSchemaOptions = function () {                                                                                   // 31
  return {                                                                                                             // 31
    tagIds: {                                                                                                          // 32
      type: [String],                                                                                                  // 33
      regEx: SimpleSchema.RegEx.Id,                                                                                    // 34
      optional: true                                                                                                   // 35
    }                                                                                                                  // 32
  };                                                                                                                   // 31
};                                                                                                                     // 31
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"users":{"server":{"config.js":["meteor/meteor","meteor/accounts-base",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/users/server/config.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Accounts = void 0;                                                                                                 // 1
module.importSync("meteor/accounts-base", {                                                                            // 1
  Accounts: function (v) {                                                                                             // 1
    Accounts = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
Accounts.emailTemplates.siteName = Meteor.settings.company.name;                                                       // 4
Accounts.emailTemplates.from = Meteor.settings.company.noReplyEmail;                                                   // 5
                                                                                                                       //
Accounts.urls.resetPassword = function (token) {                                                                       // 7
  return Meteor.absoluteUrl("reset-password/" + token);                                                                // 7
};                                                                                                                     // 7
                                                                                                                       //
Meteor.startup(function () {                                                                                           // 9
  if (Meteor.users.find().count() > 0) {                                                                               // 10
    Accounts.config({                                                                                                  // 11
      forbidClientAccountCreation: true                                                                                // 12
    });                                                                                                                // 11
  }                                                                                                                    // 14
});                                                                                                                    // 15
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"hooks.js":["meteor/meteor","meteor/accounts-base","/imports/api/customers/customers",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/users/server/hooks.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Accounts = void 0;                                                                                                 // 1
module.importSync("meteor/accounts-base", {                                                                            // 1
  Accounts: function (v) {                                                                                             // 1
    Accounts = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var Customers = void 0;                                                                                                // 1
module.importSync("/imports/api/customers/customers", {                                                                // 1
  Customers: function (v) {                                                                                            // 1
    Customers = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
Accounts.onCreateUser(function (options, doc) {                                                                        // 5
  if (Meteor.users.find().count() > 0 && !options.invite) {                                                            // 6
    throw new Meteor.Error(403, 'Can not register');                                                                   // 7
  }                                                                                                                    // 8
                                                                                                                       //
  var user = Object.assign({                                                                                           // 10
    details: options.details || {}                                                                                     // 10
  }, doc);                                                                                                             // 10
                                                                                                                       //
  if (Meteor.users.find().count() === 0) {                                                                             // 12
    user.isOwner = true;                                                                                               // 13
  } // For various user specific configurations                                                                        // 14
                                                                                                                       //
                                                                                                                       //
  user.configs = {}; // Save customer fields selection config                                                          // 17
                                                                                                                       //
  user.configs.customerFields = Customers.getPublicFields();                                                           // 20
  return user;                                                                                                         // 22
}); /**                                                                                                                // 23
     * Validate email address                                                                                          //
     */                                                                                                                //
Accounts.validateNewUser(function (user) {                                                                             // 28
  var email = user.emails[0].address;                                                                                  // 29
                                                                                                                       //
  if (/^[A-Z0-9'.1234z_%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(email)) {                                                 // 31
    return true;                                                                                                       // 32
  }                                                                                                                    // 33
                                                                                                                       //
  throw new Meteor.Error('invalid-email', 'Please enter valid email');                                                 // 35
});                                                                                                                    // 36
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"methods.js":["meteor/meteor","meteor/mdg:validated-method","meteor/check","meteor/accounts-base","/imports/api/server/utils","/imports/api/utils","/imports/api/channels/channels","/imports/api/customers/customers","../schemas",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/users/server/methods.js                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  invite: function () {                                                                                                // 1
    return invite;                                                                                                     // 1
  },                                                                                                                   // 1
  edit: function () {                                                                                                  // 1
    return edit;                                                                                                       // 1
  },                                                                                                                   // 1
  editProfile: function () {                                                                                           // 1
    return editProfile;                                                                                                // 1
  },                                                                                                                   // 1
  remove: function () {                                                                                                // 1
    return remove;                                                                                                     // 1
  },                                                                                                                   // 1
  configEmailSignature: function () {                                                                                  // 1
    return configEmailSignature;                                                                                       // 1
  },                                                                                                                   // 1
  configGetNotificationByEmail: function () {                                                                          // 1
    return configGetNotificationByEmail;                                                                               // 1
  },                                                                                                                   // 1
  configCustomerFields: function () {                                                                                  // 1
    return configCustomerFields;                                                                                       // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var ValidatedMethod = void 0;                                                                                          // 1
module.importSync("meteor/mdg:validated-method", {                                                                     // 1
  ValidatedMethod: function (v) {                                                                                      // 1
    ValidatedMethod = v;                                                                                               // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var check = void 0;                                                                                                    // 1
module.importSync("meteor/check", {                                                                                    // 1
  check: function (v) {                                                                                                // 1
    check = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var Accounts = void 0;                                                                                                 // 1
module.importSync("meteor/accounts-base", {                                                                            // 1
  Accounts: function (v) {                                                                                             // 1
    Accounts = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var sendEmail = void 0;                                                                                                // 1
module.importSync("/imports/api/server/utils", {                                                                       // 1
  sendEmail: function (v) {                                                                                            // 1
    sendEmail = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var ErxesMixin = void 0;                                                                                               // 1
module.importSync("/imports/api/utils", {                                                                              // 1
  ErxesMixin: function (v) {                                                                                           // 1
    ErxesMixin = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
var Channels = void 0;                                                                                                 // 1
module.importSync("/imports/api/channels/channels", {                                                                  // 1
  Channels: function (v) {                                                                                             // 1
    Channels = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 6);                                                                                                                 // 1
var Customers = void 0;                                                                                                // 1
module.importSync("/imports/api/customers/customers", {                                                                // 1
  Customers: function (v) {                                                                                            // 1
    Customers = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 7);                                                                                                                 // 1
var CreateInvitationSchema = void 0,                                                                                   // 1
    UpdateInvitationSchema = void 0,                                                                                   // 1
    ProfileSchema = void 0,                                                                                            // 1
    EmailSignaturesSchema = void 0;                                                                                    // 1
module.importSync("../schemas", {                                                                                      // 1
  CreateInvitationSchema: function (v) {                                                                               // 1
    CreateInvitationSchema = v;                                                                                        // 1
  },                                                                                                                   // 1
  UpdateInvitationSchema: function (v) {                                                                               // 1
    UpdateInvitationSchema = v;                                                                                        // 1
  },                                                                                                                   // 1
  ProfileSchema: function (v) {                                                                                        // 1
    ProfileSchema = v;                                                                                                 // 1
  },                                                                                                                   // 1
  EmailSignaturesSchema: function (v) {                                                                                // 1
    EmailSignaturesSchema = v;                                                                                         // 1
  }                                                                                                                    // 1
}, 8);                                                                                                                 // 1
                                                                                                                       //
// ***************** helpers ******************* //                                                                    // 16
// update user's channels                                                                                              // 18
var updateUserChannels = function (channelIds, userId) {                                                               // 19
  // remove from previous channels                                                                                     // 20
  Channels.update({                                                                                                    // 21
    memberIds: {                                                                                                       // 22
      $in: [userId]                                                                                                    // 22
    }                                                                                                                  // 22
  }, {                                                                                                                 // 22
    $pull: {                                                                                                           // 23
      memberIds: userId                                                                                                // 23
    }                                                                                                                  // 23
  }, {                                                                                                                 // 23
    multi: true                                                                                                        // 24
  }); // add to given channels                                                                                         // 24
                                                                                                                       //
  Channels.update({                                                                                                    // 28
    _id: {                                                                                                             // 28
      $in: channelIds                                                                                                  // 28
    }                                                                                                                  // 28
  }, {                                                                                                                 // 28
    $push: {                                                                                                           // 28
      memberIds: userId                                                                                                // 28
    }                                                                                                                  // 28
  }, {                                                                                                                 // 28
    multi: true                                                                                                        // 28
  });                                                                                                                  // 28
}; // update user's common infos                                                                                       // 29
                                                                                                                       //
                                                                                                                       //
var updateUserCommonInfos = function (userId, doc) {                                                                   // 32
  var user = Meteor.users.findOne({                                                                                    // 33
    _id: {                                                                                                             // 34
      $ne: userId                                                                                                      // 34
    },                                                                                                                 // 34
    'details.twitterUsername': doc.twitterUsername                                                                     // 35
  }); // check twitterUsername duplication                                                                             // 33
                                                                                                                       //
  if (doc.twitterUsername && user) {                                                                                   // 39
    throw new Meteor.Error('users.updateInfo.wrongTwitterUsername', 'Duplicated twitter username');                    // 40
  }                                                                                                                    // 41
                                                                                                                       //
  Meteor.users.update(userId, {                                                                                        // 43
    $set: {                                                                                                            // 44
      username: doc.username,                                                                                          // 45
      'details.twitterUsername': doc.twitterUsername,                                                                  // 46
      'details.avatar': doc.avatar,                                                                                    // 47
      'details.fullName': doc.fullName,                                                                                // 48
      'details.position': doc.position,                                                                                // 49
      'emails.0.address': doc.email                                                                                    // 50
    }                                                                                                                  // 44
  });                                                                                                                  // 43
};                                                                                                                     // 53
                                                                                                                       //
var checkPasswordConfirmation = function (password, passwordConfirmation) {                                            // 55
  if (password !== passwordConfirmation) {                                                                             // 56
    throw new Meteor.Error('users.updateInfo.WrongPasswordConfirmation', 'Wrong password confirmation');               // 57
  }                                                                                                                    // 61
}; // ***************** methods ******************* //                                                                 // 62
// create user and invite to given channels                                                                            // 66
                                                                                                                       //
                                                                                                                       //
var invite = new ValidatedMethod({                                                                                     // 67
  name: 'users.add',                                                                                                   // 68
  mixins: [ErxesMixin],                                                                                                // 70
  validate: function (_ref) {                                                                                          // 72
    var doc = _ref.doc;                                                                                                // 72
    check(doc, CreateInvitationSchema);                                                                                // 73
  },                                                                                                                   // 74
  run: function (_ref2) {                                                                                              // 76
    var doc = _ref2.doc;                                                                                               // 76
    var username = doc.username,                                                                                       // 76
        twitterUsername = doc.twitterUsername,                                                                         // 76
        avatar = doc.avatar,                                                                                           // 76
        position = doc.position,                                                                                       // 76
        fullName = doc.fullName,                                                                                       // 76
        email = doc.email,                                                                                             // 76
        role = doc.role,                                                                                               // 76
        channelIds = doc.channelIds,                                                                                   // 76
        password = doc.password,                                                                                       // 76
        passwordConfirmation = doc.passwordConfirmation;                                                               // 76
    checkPasswordConfirmation(password, passwordConfirmation); // create user with given email and role                // 90
                                                                                                                       //
    var userId = Accounts.createUser({                                                                                 // 93
      email: email,                                                                                                    // 94
      invite: true,                                                                                                    // 95
      details: {                                                                                                       // 96
        role: role                                                                                                     // 96
      }                                                                                                                // 96
    }); // set new password                                                                                            // 93
                                                                                                                       //
    Accounts.setPassword(userId, password); // set profile infos                                                       // 100
                                                                                                                       //
    updateUserCommonInfos(userId, {                                                                                    // 103
      twitterUsername: twitterUsername,                                                                                // 104
      username: username,                                                                                              // 105
      avatar: avatar,                                                                                                  // 106
      fullName: fullName,                                                                                              // 107
      position: position,                                                                                              // 108
      email: email                                                                                                     // 109
    }); // add new user to channels                                                                                    // 103
                                                                                                                       //
    updateUserChannels(channelIds, userId); // send email                                                              // 113
                                                                                                                       //
    sendEmail({                                                                                                        // 116
      to: email,                                                                                                       // 117
      subject: 'Invitation info',                                                                                      // 118
      template: {                                                                                                      // 119
        name: 'invitation',                                                                                            // 120
        data: {                                                                                                        // 121
          username: username,                                                                                          // 122
          password: password                                                                                           // 123
        }                                                                                                              // 121
      }                                                                                                                // 119
    });                                                                                                                // 116
  }                                                                                                                    // 127
});                                                                                                                    // 67
var edit = new ValidatedMethod({                                                                                       // 131
  name: 'users.edit',                                                                                                  // 132
  mixins: [ErxesMixin],                                                                                                // 134
  validate: function (_ref3) {                                                                                         // 136
    var id = _ref3.id,                                                                                                 // 136
        doc = _ref3.doc;                                                                                               // 136
    check(id, String); // check doc                                                                                    // 137
                                                                                                                       //
    check(doc, UpdateInvitationSchema);                                                                                // 140
  },                                                                                                                   // 141
  run: function (_ref4) {                                                                                              // 143
    var id = _ref4.id,                                                                                                 // 143
        doc = _ref4.doc;                                                                                               // 143
    var twitterUsername = doc.twitterUsername,                                                                         // 143
        position = doc.position,                                                                                       // 143
        username = doc.username,                                                                                       // 143
        avatar = doc.avatar,                                                                                           // 143
        fullName = doc.fullName,                                                                                       // 143
        email = doc.email,                                                                                             // 143
        role = doc.role,                                                                                               // 143
        channelIds = doc.channelIds,                                                                                   // 143
        password = doc.password,                                                                                       // 143
        passwordConfirmation = doc.passwordConfirmation; // update user channels channels                              // 143
                                                                                                                       //
    updateUserChannels(channelIds, id);                                                                                // 158
    var user = Meteor.users.findOne(id); // change password                                                            // 160
                                                                                                                       //
    if (doc.password) {                                                                                                // 163
      checkPasswordConfirmation(password, passwordConfirmation); // set new password                                   // 164
                                                                                                                       //
      Accounts.setPassword(id, password);                                                                              // 167
    } // if user is not owner then update profile infos                                                                // 168
                                                                                                                       //
                                                                                                                       //
    if (!user.isOwner) {                                                                                               // 171
      updateUserCommonInfos(id, {                                                                                      // 172
        username: username,                                                                                            // 173
        twitterUsername: twitterUsername,                                                                              // 174
        avatar: avatar,                                                                                                // 175
        position: position,                                                                                            // 176
        fullName: fullName,                                                                                            // 177
        email: email                                                                                                   // 178
      }); // update role                                                                                               // 172
                                                                                                                       //
      Meteor.users.update(id, {                                                                                        // 182
        $set: {                                                                                                        // 182
          'details.role': role                                                                                         // 182
        }                                                                                                              // 182
      });                                                                                                              // 182
    }                                                                                                                  // 183
  }                                                                                                                    // 184
});                                                                                                                    // 131
var editProfile = new ValidatedMethod({                                                                                // 188
  name: 'users.editProfile',                                                                                           // 189
  mixins: [ErxesMixin],                                                                                                // 190
  validate: ProfileSchema.validator(),                                                                                 // 191
  run: function (doc) {                                                                                                // 193
    // check password                                                                                                  // 194
    var result = Accounts._checkPassword(Meteor.user(), doc.currentPassword);                                          // 195
                                                                                                                       //
    if (result.error) {                                                                                                // 197
      throw new Meteor.Error('users.editProfile.invalidPassword', result.error.reason);                                // 198
    }                                                                                                                  // 199
                                                                                                                       //
    return updateUserCommonInfos(this.userId, doc);                                                                    // 201
  }                                                                                                                    // 202
});                                                                                                                    // 188
var remove = new ValidatedMethod({                                                                                     // 206
  name: 'users.remove',                                                                                                // 207
  mixins: [ErxesMixin],                                                                                                // 208
  validate: function (userId) {                                                                                        // 210
    check(userId, String);                                                                                             // 211
  },                                                                                                                   // 212
  run: function (userId) {                                                                                             // 214
    var user = Meteor.users.findOne(userId); // can not delete owner                                                   // 215
                                                                                                                       //
    if (user.isOwner) {                                                                                                // 218
      throw new Meteor.Error('users.remove.canNotDeleteOwner', 'You cannot delete the owner.');                        // 219
    } // if the user involved in any channel then can not delete this user                                             // 220
                                                                                                                       //
                                                                                                                       //
    if (Channels.find({                                                                                                // 223
      userId: userId                                                                                                   // 223
    }).count() > 0) {                                                                                                  // 223
      throw new Meteor.Error('users.remove.involvedInChannel', 'You cannot delete this user. This user belongs other channel.');
    }                                                                                                                  // 228
                                                                                                                       //
    if (Channels.find({                                                                                                // 230
      memberIds: {                                                                                                     // 230
        $in: [userId]                                                                                                  // 230
      }                                                                                                                // 230
    }).count() > 0) {                                                                                                  // 230
      throw new Meteor.Error('users.remove.involvedInChannel', 'You cannot delete this user. This user belongs other channel.');
    } // if there is no problem then delete it                                                                         // 235
                                                                                                                       //
                                                                                                                       //
    Meteor.users.remove({                                                                                              // 238
      _id: userId                                                                                                      // 238
    });                                                                                                                // 238
  }                                                                                                                    // 239
});                                                                                                                    // 206
var configEmailSignature = new ValidatedMethod({                                                                       // 242
  name: 'users.configEmailSignature',                                                                                  // 243
  mixins: [ErxesMixin],                                                                                                // 244
  validate: EmailSignaturesSchema.validator(),                                                                         // 245
  run: function (_ref5) {                                                                                              // 247
    var signatures = _ref5.signatures;                                                                                 // 247
    Meteor.users.update(this.userId, {                                                                                 // 248
      $set: {                                                                                                          // 248
        emailSignatures: signatures                                                                                    // 248
      }                                                                                                                // 248
    });                                                                                                                // 248
  }                                                                                                                    // 249
});                                                                                                                    // 242
var configGetNotificationByEmail = new ValidatedMethod({                                                               // 253
  name: 'users.configGetNotificationByEmail',                                                                          // 254
  mixins: [ErxesMixin],                                                                                                // 255
  validate: function (_ref6) {                                                                                         // 257
    var isAllowed = _ref6.isAllowed;                                                                                   // 257
    check(isAllowed, Boolean);                                                                                         // 258
  },                                                                                                                   // 259
  run: function (_ref7) {                                                                                              // 261
    var isAllowed = _ref7.isAllowed;                                                                                   // 261
    Meteor.users.update(this.userId, {                                                                                 // 262
      $set: {                                                                                                          // 263
        'details.getNotificationByEmail': isAllowed                                                                    // 263
      }                                                                                                                // 263
    });                                                                                                                // 262
  }                                                                                                                    // 265
});                                                                                                                    // 253
var configCustomerFields = new ValidatedMethod({                                                                       // 272
  name: 'users.configCustomerFields',                                                                                  // 273
  mixins: [ErxesMixin],                                                                                                // 274
  validate: function (_ref8) {                                                                                         // 276
    var fields = _ref8.fields;                                                                                         // 276
    check(fields, Array); // Check if the fields are correctly named                                                   // 277
                                                                                                                       //
    var schemaFields = Customers.getPublicFields();                                                                    // 280
    fields.forEach(function (_ref9) {                                                                                  // 281
      var key = _ref9.key;                                                                                             // 281
      var isCorrectField = schemaFields.find(function (f) {                                                            // 282
        return f.key === key;                                                                                          // 282
      });                                                                                                              // 282
                                                                                                                       //
      if (!isCorrectField) {                                                                                           // 283
        throw new Meteor.Error('users.configs.wrongCsutomerField', 'Wrong customer field declaration.');               // 284
      }                                                                                                                // 288
    });                                                                                                                // 289
  },                                                                                                                   // 290
  run: function (_ref10) {                                                                                             // 292
    var fields = _ref10.fields;                                                                                        // 292
    Meteor.users.update(this.userId, {                                                                                 // 293
      $set: {                                                                                                          // 294
        'configs.customerFields': fields                                                                               // 294
      }                                                                                                                // 294
    });                                                                                                                // 293
  }                                                                                                                    // 296
});                                                                                                                    // 272
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"publications.js":["meteor/meteor","meteor/check","meteor/tmeasday:publish-counts",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/users/server/publications.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Match = void 0,                                                                                                    // 1
    check = void 0;                                                                                                    // 1
module.importSync("meteor/check", {                                                                                    // 1
  Match: function (v) {                                                                                                // 1
    Match = v;                                                                                                         // 1
  },                                                                                                                   // 1
  check: function (v) {                                                                                                // 1
    check = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var Counts = void 0;                                                                                                   // 1
module.importSync("meteor/tmeasday:publish-counts", {                                                                  // 1
  Counts: function (v) {                                                                                               // 1
    Counts = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var publicFields = {                                                                                                   // 5
  isOwner: 1,                                                                                                          // 6
  username: 1,                                                                                                         // 7
  details: 1,                                                                                                          // 8
  emailSignatures: 1,                                                                                                  // 9
  emails: 1,                                                                                                           // 10
  configs: 1                                                                                                           // 11
};                                                                                                                     // 5
Meteor.publish(null, function () {                                                                                     // 14
  function loggedInUserFields() {                                                                                      // 14
    if (!this.userId) {                                                                                                // 15
      return this.ready();                                                                                             // 16
    }                                                                                                                  // 17
                                                                                                                       //
    return Meteor.users.find(this.userId, {                                                                            // 19
      fields: publicFields                                                                                             // 19
    });                                                                                                                // 19
  }                                                                                                                    // 20
                                                                                                                       //
  return loggedInUserFields;                                                                                           // 14
}());                                                                                                                  // 14
Meteor.publish('users.list', function () {                                                                             // 22
  function usersList(params) {                                                                                         // 22
    check(params, {                                                                                                    // 23
      ids: Match.Optional([String]),                                                                                   // 24
      limit: Match.Optional(Number)                                                                                    // 25
    });                                                                                                                // 23
                                                                                                                       //
    if (!this.userId) {                                                                                                // 28
      return this.ready();                                                                                             // 29
    }                                                                                                                  // 30
                                                                                                                       //
    Counts.publish(this, 'users.list.count', Meteor.users.find(), {                                                    // 32
      noReady: true                                                                                                    // 33
    });                                                                                                                // 32
    return Meteor.users.find({}, {                                                                                     // 36
      fields: publicFields,                                                                                            // 36
      limit: params.limit                                                                                              // 36
    });                                                                                                                // 36
  }                                                                                                                    // 37
                                                                                                                       //
  return usersList;                                                                                                    // 22
}());                                                                                                                  // 22
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"constants.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/users/constants.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  ROLES: function () {                                                                                                 // 1
    return ROLES;                                                                                                      // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var ROLES = {                                                                                                          // 1
  ADMIN: 'admin',                                                                                                      // 2
  CONTRIBUTOR: 'contributor'                                                                                           // 3
};                                                                                                                     // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"schemas.js":["meteor/aldeed:simple-schema","./constants",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/users/schemas.js                                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  CreateInvitationSchema: function () {                                                                                // 1
    return CreateInvitationSchema;                                                                                     // 1
  },                                                                                                                   // 1
  UpdateInvitationSchema: function () {                                                                                // 1
    return UpdateInvitationSchema;                                                                                     // 1
  },                                                                                                                   // 1
  ProfileSchema: function () {                                                                                         // 1
    return ProfileSchema;                                                                                              // 1
  },                                                                                                                   // 1
  EmailSignaturesSchema: function () {                                                                                 // 1
    return EmailSignaturesSchema;                                                                                      // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var SimpleSchema = void 0;                                                                                             // 1
module.importSync("meteor/aldeed:simple-schema", {                                                                     // 1
  SimpleSchema: function (v) {                                                                                         // 1
    SimpleSchema = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var ROLES = void 0;                                                                                                    // 1
module.importSync("./constants", {                                                                                     // 1
  ROLES: function (v) {                                                                                                // 1
    ROLES = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
// user common infos schema                                                                                            // 4
var CommonInfo = {                                                                                                     // 5
  avatar: {                                                                                                            // 6
    type: String,                                                                                                      // 7
    optional: true                                                                                                     // 8
  },                                                                                                                   // 6
  fullName: {                                                                                                          // 10
    type: String                                                                                                       // 11
  },                                                                                                                   // 10
  position: {                                                                                                          // 13
    type: String,                                                                                                      // 14
    optional: true                                                                                                     // 15
  },                                                                                                                   // 13
  username: {                                                                                                          // 17
    type: String                                                                                                       // 18
  },                                                                                                                   // 17
  twitterUsername: {                                                                                                   // 20
    type: String                                                                                                       // 21
  },                                                                                                                   // 20
  email: {                                                                                                             // 23
    type: String,                                                                                                      // 24
    regEx: SimpleSchema.RegEx.Email                                                                                    // 25
  }                                                                                                                    // 23
}; // ************* invitation  ***************** //                                                                   // 5
                                                                                                                       //
var InvitationCommon = Object.assign({}, CommonInfo, {                                                                 // 30
  // owner, admin, contributor                                                                                         // 31
  role: {                                                                                                              // 32
    type: String,                                                                                                      // 33
    allowedValues: [ROLES.ADMIN, ROLES.CONTRIBUTOR]                                                                    // 34
  },                                                                                                                   // 32
  // channels to invite                                                                                                // 37
  channelIds: {                                                                                                        // 38
    type: [String],                                                                                                    // 39
    optional: true                                                                                                     // 40
  }                                                                                                                    // 38
});                                                                                                                    // 30
var CreateInvitationSchema = new SimpleSchema([InvitationCommon, {                                                     // 44
  password: {                                                                                                          // 47
    type: String                                                                                                       // 48
  },                                                                                                                   // 47
  passwordConfirmation: {                                                                                              // 50
    type: String                                                                                                       // 51
  }                                                                                                                    // 50
}]);                                                                                                                   // 46
var UpdateInvitationSchema = new SimpleSchema([InvitationCommon, {                                                     // 56
  password: {                                                                                                          // 59
    type: String,                                                                                                      // 60
    optional: true                                                                                                     // 61
  },                                                                                                                   // 59
  passwordConfirmation: {                                                                                              // 63
    type: String,                                                                                                      // 64
    optional: true                                                                                                     // 65
  }                                                                                                                    // 63
}]);                                                                                                                   // 58
var ProfileSchema = new SimpleSchema([CommonInfo, {                                                                    // 71
  currentPassword: {                                                                                                   // 74
    type: String,                                                                                                      // 75
    optional: true                                                                                                     // 76
  }                                                                                                                    // 74
}]);                                                                                                                   // 73
var EmailSignaturesSchema = new SimpleSchema({                                                                         // 82
  signatures: {                                                                                                        // 83
    type: [new SimpleSchema({                                                                                          // 84
      brandId: {                                                                                                       // 86
        type: String,                                                                                                  // 87
        regEx: SimpleSchema.RegEx.Id                                                                                   // 88
      },                                                                                                               // 86
      signature: {                                                                                                     // 90
        type: String                                                                                                   // 91
      }                                                                                                                // 90
    })]                                                                                                                // 85
  }                                                                                                                    // 83
});                                                                                                                    // 82
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"emailTemplates":{"emailTemplates.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","meteor/mongo","meteor/aldeed:simple-schema",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/emailTemplates/emailTemplates.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");                                                //
                                                                                                                       //
var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                                       //
                                                                                                                       //
var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");                          //
                                                                                                                       //
var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                                 //
                                                                                                                       //
var _inherits2 = require("babel-runtime/helpers/inherits");                                                            //
                                                                                                                       //
var _inherits3 = _interopRequireDefault(_inherits2);                                                                   //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
module.export({                                                                                                        // 1
  EmailTemplates: function () {                                                                                        // 1
    return EmailTemplates;                                                                                             // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Mongo = void 0;                                                                                                    // 1
module.importSync("meteor/mongo", {                                                                                    // 1
  Mongo: function (v) {                                                                                                // 1
    Mongo = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var SimpleSchema = void 0;                                                                                             // 1
module.importSync("meteor/aldeed:simple-schema", {                                                                     // 1
  SimpleSchema: function (v) {                                                                                         // 1
    SimpleSchema = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
                                                                                                                       //
// Email template collection                                                                                           // 4
var Collection = function (_Mongo$Collection) {                                                                        //
  (0, _inherits3.default)(Collection, _Mongo$Collection);                                                              //
                                                                                                                       //
  function Collection() {                                                                                              //
    (0, _classCallCheck3.default)(this, Collection);                                                                   //
    return (0, _possibleConstructorReturn3.default)(this, _Mongo$Collection.apply(this, arguments));                   //
  }                                                                                                                    //
                                                                                                                       //
  return Collection;                                                                                                   //
}(Mongo.Collection);                                                                                                   //
                                                                                                                       //
var EmailTemplates = new Collection('email_templates');                                                                // 7
EmailTemplates.schema = new SimpleSchema({                                                                             // 9
  name: {                                                                                                              // 10
    type: String                                                                                                       // 11
  },                                                                                                                   // 10
  content: {                                                                                                           // 13
    type: String                                                                                                       // 14
  }                                                                                                                    // 13
});                                                                                                                    // 9
EmailTemplates.attachSchema(EmailTemplates.schema);                                                                    // 18
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"methods.js":["meteor/check","meteor/mdg:validated-method","/imports/api/utils","./emailTemplates",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/emailTemplates/methods.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  add: function () {                                                                                                   // 1
    return add;                                                                                                        // 1
  },                                                                                                                   // 1
  edit: function () {                                                                                                  // 1
    return edit;                                                                                                       // 1
  },                                                                                                                   // 1
  remove: function () {                                                                                                // 1
    return remove;                                                                                                     // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var check = void 0;                                                                                                    // 1
module.importSync("meteor/check", {                                                                                    // 1
  check: function (v) {                                                                                                // 1
    check = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var ValidatedMethod = void 0;                                                                                          // 1
module.importSync("meteor/mdg:validated-method", {                                                                     // 1
  ValidatedMethod: function (v) {                                                                                      // 1
    ValidatedMethod = v;                                                                                               // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var ErxesMixin = void 0;                                                                                               // 1
module.importSync("/imports/api/utils", {                                                                              // 1
  ErxesMixin: function (v) {                                                                                           // 1
    ErxesMixin = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var EmailTemplates = void 0;                                                                                           // 1
module.importSync("./emailTemplates", {                                                                                // 1
  EmailTemplates: function (v) {                                                                                       // 1
    EmailTemplates = v;                                                                                                // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var add = new ValidatedMethod({                                                                                        // 7
  name: 'emailTemplates.add',                                                                                          // 8
  mixins: [ErxesMixin],                                                                                                // 9
  validate: function (_ref) {                                                                                          // 11
    var doc = _ref.doc;                                                                                                // 11
    check(doc, EmailTemplates.schema);                                                                                 // 12
  },                                                                                                                   // 13
  run: function (_ref2) {                                                                                              // 15
    var doc = _ref2.doc;                                                                                               // 15
    return EmailTemplates.insert(doc);                                                                                 // 16
  }                                                                                                                    // 17
});                                                                                                                    // 7
var edit = new ValidatedMethod({                                                                                       // 21
  name: 'emailTemplates.edit',                                                                                         // 22
  mixins: [ErxesMixin],                                                                                                // 23
  validate: function (_ref3) {                                                                                         // 25
    var id = _ref3.id,                                                                                                 // 25
        doc = _ref3.doc;                                                                                               // 25
    check(id, String);                                                                                                 // 26
    check(doc, EmailTemplates.schema);                                                                                 // 27
  },                                                                                                                   // 28
  run: function (_ref4) {                                                                                              // 30
    var id = _ref4.id,                                                                                                 // 30
        doc = _ref4.doc;                                                                                               // 30
    return EmailTemplates.update(id, {                                                                                 // 31
      $set: doc                                                                                                        // 31
    });                                                                                                                // 31
  }                                                                                                                    // 32
});                                                                                                                    // 21
var remove = new ValidatedMethod({                                                                                     // 36
  name: 'emailTemplates.remove',                                                                                       // 37
  mixins: [ErxesMixin],                                                                                                // 38
  validate: function (id) {                                                                                            // 40
    check(id, String);                                                                                                 // 41
  },                                                                                                                   // 42
  run: function (id) {                                                                                                 // 44
    return EmailTemplates.remove({                                                                                     // 45
      _id: id                                                                                                          // 45
    });                                                                                                                // 45
  }                                                                                                                    // 46
});                                                                                                                    // 36
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"server":{"methods.js":["meteor/check","meteor/mdg:validated-method","./utils",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/server/methods.js                                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  uploadFileMethod: function () {                                                                                      // 1
    return uploadFileMethod;                                                                                           // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Match = void 0,                                                                                                    // 1
    check = void 0;                                                                                                    // 1
module.importSync("meteor/check", {                                                                                    // 1
  Match: function (v) {                                                                                                // 1
    Match = v;                                                                                                         // 1
  },                                                                                                                   // 1
  check: function (v) {                                                                                                // 1
    check = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var ValidatedMethod = void 0;                                                                                          // 1
module.importSync("meteor/mdg:validated-method", {                                                                     // 1
  ValidatedMethod: function (v) {                                                                                      // 1
    ValidatedMethod = v;                                                                                               // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var uploadFile = void 0;                                                                                               // 1
module.importSync("./utils", {                                                                                         // 1
  uploadFile: function (v) {                                                                                           // 1
    uploadFile = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var uploadFileMethod = new ValidatedMethod({                                                                           // 7
  name: 'uploadFile',                                                                                                  // 8
  validate: function (_ref) {                                                                                          // 10
    var name = _ref.name,                                                                                              // 10
        data = _ref.data;                                                                                              // 10
    check(name, String);                                                                                               // 11
    check(data, Match.Any);                                                                                            // 12
  },                                                                                                                   // 13
  run: function (doc) {                                                                                                // 15
    return uploadFile(doc);                                                                                            // 16
  }                                                                                                                    // 17
});                                                                                                                    // 7
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"utils.js":["aws-sdk","handlebars","meteor/meteor","meteor/email","meteor/http","meteor/erxes-notifications",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/server/utils.js                                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  uploadFile: function () {                                                                                            // 1
    return uploadFile;                                                                                                 // 1
  },                                                                                                                   // 1
  sendEmail: function () {                                                                                             // 1
    return sendEmail;                                                                                                  // 1
  },                                                                                                                   // 1
  sendNotification: function () {                                                                                      // 1
    return sendNotification;                                                                                           // 1
  },                                                                                                                   // 1
  mutate: function () {                                                                                                // 1
    return mutate;                                                                                                     // 1
  },                                                                                                                   // 1
  apolloNotifyNewMessage: function () {                                                                                // 1
    return apolloNotifyNewMessage;                                                                                     // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var AWS = void 0;                                                                                                      // 1
module.importSync("aws-sdk", {                                                                                         // 1
  "default": function (v) {                                                                                            // 1
    AWS = v;                                                                                                           // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Handlebars = void 0;                                                                                               // 1
module.importSync("handlebars", {                                                                                      // 1
  "default": function (v) {                                                                                            // 1
    Handlebars = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var Email = void 0;                                                                                                    // 1
module.importSync("meteor/email", {                                                                                    // 1
  Email: function (v) {                                                                                                // 1
    Email = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var HTTP = void 0;                                                                                                     // 1
module.importSync("meteor/http", {                                                                                     // 1
  HTTP: function (v) {                                                                                                 // 1
    HTTP = v;                                                                                                          // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var Notifications = void 0;                                                                                            // 1
module.importSync("meteor/erxes-notifications", {                                                                      // 1
  Notifications: function (v) {                                                                                        // 1
    Notifications = v;                                                                                                 // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
                                                                                                                       //
var uploadFile = function (_ref) {                                                                                     // 9
  var name = _ref.name,                                                                                                // 9
      data = _ref.data;                                                                                                // 9
  var _Meteor$settings$serv = Meteor.settings.services.aws,                                                            // 9
      accessKeyId = _Meteor$settings$serv.accessKeyId,                                                                 // 9
      secretAccessKey = _Meteor$settings$serv.secretAccessKey,                                                         // 9
      bucket = _Meteor$settings$serv.bucket,                                                                           // 9
      _Meteor$settings$serv2 = _Meteor$settings$serv.prefix,                                                           // 9
      prefix = _Meteor$settings$serv2 === undefined ? '' : _Meteor$settings$serv2; // check credentials                // 9
                                                                                                                       //
  if (!(accessKeyId || secretAccessKey || bucket)) {                                                                   // 13
    return {                                                                                                           // 14
      status: 'error',                                                                                                 // 15
      data: 'Security credentials are not configured'                                                                  // 16
    };                                                                                                                 // 14
  } // initialize s3                                                                                                   // 18
                                                                                                                       //
                                                                                                                       //
  var s3 = new AWS.S3({                                                                                                // 21
    accessKeyId: accessKeyId,                                                                                          // 21
    secretAccessKey: secretAccessKey                                                                                   // 21
  }); // wait for putObject response                                                                                   // 21
                                                                                                                       //
  var syncPutObject = Meteor.wrapAsync(s3.putObject, s3); // generate unique name                                      // 24
                                                                                                                       //
  var fileName = "" + prefix + Math.random() + name; // create buffer from file data                                   // 27
                                                                                                                       //
  var buffer = new Buffer(data); // call putObject                                                                     // 30
                                                                                                                       //
  var response = syncPutObject({                                                                                       // 33
    Bucket: bucket,                                                                                                    // 34
    Key: fileName,                                                                                                     // 35
    Body: buffer,                                                                                                      // 36
    ACL: 'public-read'                                                                                                 // 37
  });                                                                                                                  // 33
  response.url = "https://s3.amazonaws.com/" + bucket + "/" + fileName;                                                // 40
  return response;                                                                                                     // 42
};                                                                                                                     // 43
                                                                                                                       //
// send email helpers ====================                                                                             // 45
function applyTemplate(data, templateName) {                                                                           // 46
  var template = Assets.getText("emailTemplates/" + templateName + ".html");                                           // 47
  template = Handlebars.compile(template);                                                                             // 49
  return template(data);                                                                                               // 51
}                                                                                                                      // 52
                                                                                                                       //
var sendEmail = function (_ref2) {                                                                                     // 54
  var to = _ref2.to,                                                                                                   // 54
      subject = _ref2.subject,                                                                                         // 54
      template = _ref2.template;                                                                                       // 54
  var isCustom = template.isCustom,                                                                                    // 54
      data = template.data,                                                                                            // 54
      name = template.name; // generate email content by given template                                                // 54
                                                                                                                       //
  var content = applyTemplate(data, name);                                                                             // 58
  var html = ''; // for example brand related emails can be totally different                                          // 60
                                                                                                                       //
  if (isCustom) {                                                                                                      // 63
    html = content; // invitation, notification emails can be same                                                     // 64
  } else {                                                                                                             // 67
    html = applyTemplate({                                                                                             // 68
      content: content                                                                                                 // 68
    }, 'base');                                                                                                        // 68
  } // do not send email in test mode                                                                                  // 69
                                                                                                                       //
                                                                                                                       //
  if (Meteor.isTest) {                                                                                                 // 72
    return;                                                                                                            // 73
  }                                                                                                                    // 74
                                                                                                                       //
  Email.send({                                                                                                         // 76
    from: Meteor.settings.company.noReplyEmail,                                                                        // 77
    to: to,                                                                                                            // 78
    subject: subject,                                                                                                  // 79
    html: html                                                                                                         // 80
  });                                                                                                                  // 76
};                                                                                                                     // 82
                                                                                                                       //
var sendNotification = function (_doc) {                                                                               // 85
  var doc = _doc; // Splitting receivers                                                                               // 86
                                                                                                                       //
  var receivers = doc.receivers;                                                                                       // 89
  delete doc.receivers; // Inserting entry to every receiver                                                           // 90
                                                                                                                       //
  receivers.forEach(function (receiverId) {                                                                            // 93
    doc.receiver = receiverId; // create notification                                                                  // 94
                                                                                                                       //
    var response = Notifications.create(Object.assign({}, doc)); // if receiver did not disable to get this notification
                                                                                                                       //
    if (response === 'ok') {                                                                                           // 100
      var receiver = Meteor.users.findOne({                                                                            // 101
        _id: receiverId                                                                                                // 101
      });                                                                                                              // 101
      var details = receiver.details; // if receiver did not disable email notification then send email                // 102
                                                                                                                       //
      if (!(details && details.getNotificationByEmail === false)) {                                                    // 105
        sendEmail({                                                                                                    // 106
          to: receiver.emails[0].address,                                                                              // 107
          subject: 'Notification',                                                                                     // 108
          template: {                                                                                                  // 109
            name: 'notification',                                                                                      // 110
            data: {                                                                                                    // 111
              notification: doc                                                                                        // 112
            }                                                                                                          // 111
          }                                                                                                            // 109
        });                                                                                                            // 106
      }                                                                                                                // 116
    }                                                                                                                  // 117
  });                                                                                                                  // 118
};                                                                                                                     // 119
                                                                                                                       //
var mutate = function (query) {                                                                                        // 122
  return HTTP.call('POST', Meteor.settings.public.APOLLO_CLIENT_URL, {                                                 // 122
    headers: {                                                                                                         // 124
      'Content-Type': 'application/json'                                                                               // 124
    },                                                                                                                 // 124
    data: {                                                                                                            // 125
      query: query                                                                                                     // 125
    }                                                                                                                  // 125
  });                                                                                                                  // 123
};                                                                                                                     // 122
                                                                                                                       //
var apolloNotifyNewMessage = function (messageId) {                                                                    // 129
  // Don't do anyting in test mode                                                                                     // 130
  if (Meteor.isTest) {                                                                                                 // 131
    return;                                                                                                            // 132
  }                                                                                                                    // 133
                                                                                                                       //
  mutate("\n    mutation {\n      conversationMessageInserted(_id: \"" + messageId + "\")\n    }\n  ");                // 135
};                                                                                                                     // 142
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"utils.js":["meteor/meteor","/imports/api/users/constants",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/utils.js                                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  ErxesMixin: function () {                                                                                            // 1
    return ErxesMixin;                                                                                                 // 1
  },                                                                                                                   // 1
  wait: function () {                                                                                                  // 1
    return wait;                                                                                                       // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var ROLES = void 0;                                                                                                    // 1
module.importSync("/imports/api/users/constants", {                                                                    // 1
  ROLES: function (v) {                                                                                                // 1
    ROLES = v;                                                                                                         // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var RESTRICTED_METHODS = ['users.invite', 'users.updateAccessInfo', 'users.remove', 'brands.add', 'brands.edit', 'brands.remove', 'brands.configEmail', 'channels.add', 'channels.edit', 'channels.remove', 'forms.add', 'forms.edit', 'forms.remove', 'integrations.add', 'integrations.edit', 'integrations.remove', 'integrations.addMessenger', 'integrations.addTwitter', 'integrations.addFacebook']; // all validated methods mixin
// check login, permissions etc ..                                                                                     // 27
                                                                                                                       //
function ErxesMixin(_options) {                                                                                        // 28
  var options = _options; // save real run                                                                             // 29
                                                                                                                       //
  var runFunc = _options.run; // override run                                                                          // 32
                                                                                                                       //
  options.run = function () {                                                                                          // 35
    function run() {                                                                                                   // 35
      // check login required                                                                                          // 36
      if (!this.userId) {                                                                                              // 37
        throw new Meteor.Error('loginRequired', 'Login required.');                                                    // 38
      }                                                                                                                // 39
                                                                                                                       //
      if (Meteor.isServer) {                                                                                           // 41
        var user = Meteor.users.findOne(this.userId); // check contributor permissions                                 // 42
                                                                                                                       //
        if (user.details && user.details.role === ROLES.CONTRIBUTOR && RESTRICTED_METHODS.includes(_options.name)) {   // 45
          throw new Meteor.Error('permissionDenied', 'Permission denied.');                                            // 50
        }                                                                                                              // 51
      }                                                                                                                // 52
                                                                                                                       //
      for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {                         // 35
        params[_key] = arguments[_key];                                                                                // 35
      }                                                                                                                // 35
                                                                                                                       //
      return runFunc.call.apply(runFunc, [this].concat(params));                                                       // 54
    }                                                                                                                  // 55
                                                                                                                       //
    return run;                                                                                                        // 35
  }();                                                                                                                 // 35
                                                                                                                       //
  return options;                                                                                                      // 57
}                                                                                                                      // 58
                                                                                                                       //
var wait = function (ms) {                                                                                             // 60
  var start = new Date().getTime();                                                                                    // 61
  var end = start;                                                                                                     // 62
                                                                                                                       //
  while (end < start + ms) {                                                                                           // 64
    end = new Date().getTime();                                                                                        // 65
  }                                                                                                                    // 66
};                                                                                                                     // 67
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"startup":{"server":{"fixtures.js":["meteor/meteor","meteor/accounts-base","/imports/api/brands/brands","/imports/api/channels/channels","/imports/api/integrations/integrations",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/startup/server/fixtures.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Accounts = void 0;                                                                                                 // 1
module.importSync("meteor/accounts-base", {                                                                            // 1
  Accounts: function (v) {                                                                                             // 1
    Accounts = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var Brands = void 0;                                                                                                   // 1
module.importSync("/imports/api/brands/brands", {                                                                      // 1
  Brands: function (v) {                                                                                               // 1
    Brands = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var Channels = void 0;                                                                                                 // 1
module.importSync("/imports/api/channels/channels", {                                                                  // 1
  Channels: function (v) {                                                                                             // 1
    Channels = v;                                                                                                      // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var Integrations = void 0;                                                                                             // 1
module.importSync("/imports/api/integrations/integrations", {                                                          // 1
  Integrations: function (v) {                                                                                         // 1
    Integrations = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
// if the database is empty on server start, create some sample data.                                                  // 8
Meteor.startup(function () {                                                                                           // 9
  if (Meteor.users.find().count() !== 0) {                                                                             // 10
    return;                                                                                                            // 11
  }                                                                                                                    // 12
                                                                                                                       //
  var _Meteor$settings$init = Meteor.settings.initialData,                                                             // 9
      user = _Meteor$settings$init.user,                                                                               // 9
      brand = _Meteor$settings$init.brand,                                                                             // 9
      integration = _Meteor$settings$init.integration,                                                                 // 9
      channel = _Meteor$settings$init.channel;                                                                         // 9
  var userId = Accounts.createUser(user);                                                                              // 16
  var brandId = Brands.insert(Object.assign({                                                                          // 17
    userId: userId                                                                                                     // 17
  }, brand));                                                                                                          // 17
  var integrationId = Integrations.insert(Object.assign({                                                              // 18
    brandId: brandId                                                                                                   // 18
  }, integration));                                                                                                    // 18
  Channels.insert(Object.assign({                                                                                      // 19
    userId: userId,                                                                                                    // 22
    memberIds: [userId],                                                                                               // 23
    integrationIds: [integrationId]                                                                                    // 24
  }, channel));                                                                                                        // 21
});                                                                                                                    // 29
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"index.js":["meteor/percolate:synced-cron","./security.js","./register-api.js","./fixtures.js","./notifications.js",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/startup/server/index.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var SyncedCron = void 0;                                                                                               // 1
module.importSync("meteor/percolate:synced-cron", {                                                                    // 1
  SyncedCron: function (v) {                                                                                           // 1
    SyncedCron = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
module.importSync("./security.js");                                                                                    // 1
module.importSync("./register-api.js");                                                                                // 1
module.importSync("./fixtures.js");                                                                                    // 1
module.importSync("./notifications.js");                                                                               // 1
SyncedCron.start();                                                                                                    // 15
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"notifications.js":["meteor/erxes-notifications",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/startup/server/notifications.js                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Notifications = void 0;                                                                                            // 1
module.importSync("meteor/erxes-notifications", {                                                                      // 1
  Notifications: function (v) {                                                                                        // 1
    Notifications = v;                                                                                                 // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Conversations = {                                                                                                  // 3
  name: 'conversations',                                                                                               // 4
  description: 'Conversations',                                                                                        // 5
  types: [{                                                                                                            // 6
    name: 'conversationStateChange',                                                                                   // 8
    text: 'State change'                                                                                               // 9
  }, {                                                                                                                 // 7
    name: 'conversationAssigneeChange',                                                                                // 12
    text: 'Assignee change'                                                                                            // 13
  }, {                                                                                                                 // 11
    name: 'conversationAddMessage',                                                                                    // 16
    text: 'Add message'                                                                                                // 17
  }]                                                                                                                   // 15
};                                                                                                                     // 3
var Channels = {                                                                                                       // 22
  name: 'channels',                                                                                                    // 23
  description: 'Channels',                                                                                             // 24
  types: [{                                                                                                            // 25
    name: 'channelMembersChange',                                                                                      // 27
    text: 'Members change'                                                                                             // 28
  }]                                                                                                                   // 26
};                                                                                                                     // 22
Notifications.registerModule(Conversations);                                                                           // 33
Notifications.registerModule(Channels);                                                                                // 34
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"register-api.js":["/imports/api/users/schemas","/imports/api/users/server/publications","/imports/api/users/server/config","/imports/api/users/server/hooks","/imports/api/users/server/methods","/imports/api/server/methods","/imports/api/brands/server/methods","/imports/api/customers/server/methods","/imports/api/channels/server/methods","/imports/api/integrations/server/methods","/imports/api/integrations/social/server","/imports/api/conversations/server/methods","/imports/api/conversations/server/cronJobs","/imports/api/tags/server/methods","/imports/api/forms/server/methods","/imports/api/responseTemplates/server/methods","/imports/api/emailTemplates/methods","/imports/api/engage/server/methods","/imports/api/engage/server/cronJobs",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/startup/server/register-api.js                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.importSync("/imports/api/users/schemas");                                                                       // 1
module.importSync("/imports/api/users/server/publications");                                                           // 1
module.importSync("/imports/api/users/server/config");                                                                 // 1
module.importSync("/imports/api/users/server/hooks");                                                                  // 1
module.importSync("/imports/api/users/server/methods");                                                                // 1
module.importSync("/imports/api/server/methods");                                                                      // 1
module.importSync("/imports/api/brands/server/methods");                                                               // 1
module.importSync("/imports/api/customers/server/methods");                                                            // 1
module.importSync("/imports/api/channels/server/methods");                                                             // 1
module.importSync("/imports/api/integrations/server/methods");                                                         // 1
module.importSync("/imports/api/integrations/social/server");                                                          // 1
module.importSync("/imports/api/conversations/server/methods");                                                        // 1
module.importSync("/imports/api/conversations/server/cronJobs");                                                       // 1
module.importSync("/imports/api/tags/server/methods");                                                                 // 1
module.importSync("/imports/api/forms/server/methods");                                                                // 1
module.importSync("/imports/api/responseTemplates/server/methods");                                                    // 1
module.importSync("/imports/api/emailTemplates/methods");                                                              // 1
module.importSync("/imports/api/engage/server/methods");                                                               // 1
module.importSync("/imports/api/engage/server/cronJobs");                                                              // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"security.js":["meteor/meteor","meteor/ddp-rate-limiter","meteor/underscore",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/startup/server/security.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor = void 0;                                                                                                   // 1
module.importSync("meteor/meteor", {                                                                                   // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var DDPRateLimiter = void 0;                                                                                           // 1
module.importSync("meteor/ddp-rate-limiter", {                                                                         // 1
  DDPRateLimiter: function (v) {                                                                                       // 1
    DDPRateLimiter = v;                                                                                                // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
                                                                                                                       //
var _ = void 0;                                                                                                        // 1
                                                                                                                       //
module.importSync("meteor/underscore", {                                                                               // 1
  _: function (v) {                                                                                                    // 1
    _ = v;                                                                                                             // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
// Don't let people write arbitrary data to their 'profile' field from the client                                      // 5
Meteor.users.deny({                                                                                                    // 6
  update: function () {                                                                                                // 7
    return true;                                                                                                       // 8
  }                                                                                                                    // 9
}); // Get a list of all accounts methods by running `Meteor.server.method_handlers` in meteor shell                   // 6
                                                                                                                       //
var AUTH_METHODS = ['login', 'logout', 'logoutOtherClients', 'getNewToken', 'removeOtherTokens', 'configureLoginService', 'changePassword', 'forgotPassword', 'resetPassword', 'verifyEmail', 'createUser', 'ATRemoveService', 'ATCreateUserServer', 'ATResendVerificationEmail'];
                                                                                                                       //
if (Meteor.isServer) {                                                                                                 // 30
  // Only allow 2 login attempts per connection per 5 seconds                                                          // 31
  DDPRateLimiter.addRule({                                                                                             // 32
    name: function (name) {                                                                                            // 34
      return _.contains(AUTH_METHODS, name);                                                                           // 35
    },                                                                                                                 // 36
    // Rate limit per connection ID                                                                                    // 38
    connectionId: function () {                                                                                        // 39
      return true;                                                                                                     // 40
    }                                                                                                                  // 41
  }, 2, 5000);                                                                                                         // 33
}                                                                                                                      // 46
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]}}},"server":{"main.js":["/imports/startup/server",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/main.js                                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.importSync("/imports/startup/server");                                                                          // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]}},{"extensions":[".js",".json"]});
require("./server/main.js");
//# sourceMappingURL=app.js.map
