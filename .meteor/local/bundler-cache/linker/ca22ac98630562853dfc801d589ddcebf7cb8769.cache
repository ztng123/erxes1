[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Collection2 = Package['aldeed:collection2-core'].Collection2;\nvar _ = Package.underscore._;\nvar LocalCollection = Package.minimongo.LocalCollection;\nvar Minimongo = Package.minimongo.Minimongo;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar SimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nvar MongoObject = Package['aldeed:simple-schema'].MongoObject;\nvar Mongo = Package.mongo.Mongo;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                     //\n// packages/aldeed_schema-deny/lib/deny.js                                             //\n//                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////\n                                                                                       //\n// Extend the schema options allowed by SimpleSchema                                   // 1\nSimpleSchema.extendOptions({                                                           // 2\n  denyInsert: Match.Optional(Boolean),                                                 // 3\n  denyUpdate: Match.Optional(Boolean),                                                 // 4\n});                                                                                    // 5\n                                                                                       // 6\n// Define validation error messages                                                    // 7\nif (!SimpleSchema.version || SimpleSchema.version < 2) {                               // 8\n  SimpleSchema.messages({                                                              // 9\n    insertNotAllowed: '[label] cannot be set during an insert',                        // 10\n    updateNotAllowed: '[label] cannot be set during an update'                         // 11\n  });                                                                                  // 12\n}                                                                                      // 13\n                                                                                       // 14\nCollection2.on('schema.attached', function (collection, ss) {                          // 15\n  if (ss.version >= 2) {                                                               // 16\n    ss.messageBox.messages({                                                           // 17\n      insertNotAllowed: '{{label}} cannot be set during an insert',                    // 18\n      updateNotAllowed: '{{label}} cannot be set during an update'                     // 19\n    });                                                                                // 20\n  }                                                                                    // 21\n                                                                                       // 22\n  ss.addValidator(function() {                                                         // 23\n    if (!this.isSet) return;                                                           // 24\n                                                                                       // 25\n    var def = this.definition;                                                         // 26\n                                                                                       // 27\n    if (def.denyInsert && this.isInsert) return 'insertNotAllowed';                    // 28\n    if (def.denyUpdate && (this.isUpdate || this.isUpsert)) return 'updateNotAllowed';\n  });                                                                                  // 30\n});                                                                                    // 31\n                                                                                       // 32\n/////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['aldeed:schema-deny'] = {};\n\n})();\n","servePath":"/packages/aldeed_schema-deny.js"}]