[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar Counts = Package['tmeasday:publish-counts'].Counts;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Buffer = Package.modules.Buffer;\nvar process = Package.modules.process;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Collection2 = Package['aldeed:collection2-core'].Collection2;\nvar SimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nvar MongoObject = Package['aldeed:simple-schema'].MongoObject;\nvar Mongo = Package.mongo.Mongo;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"erxes-notifications\":{\"client\":{\"main.js\":[\"../notifications\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/erxes-notifications/client/main.js                       //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.export({                                                      // 1\n  Notifications: function () {                                       // 1\n    return Notifications;                                            // 1\n  },                                                                 // 1\n  Configs: function () {                                             // 1\n    return Configs;                                                  // 1\n  }                                                                  // 1\n});                                                                  // 1\nvar Notifications = void 0,                                          // 1\n    Configs = void 0;                                                // 1\nmodule.importSync(\"../notifications\", {                              // 1\n  Notifications: function (v) {                                      // 1\n    Notifications = v;                                               // 1\n  },                                                                 // 1\n  Configs: function (v) {                                            // 1\n    Configs = v;                                                     // 1\n  }                                                                  // 1\n}, 0);                                                               // 1\n///////////////////////////////////////////////////////////////////////\n\n}]},\"notifications.js\":[\"meteor/mongo\",\"meteor/aldeed:simple-schema\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/erxes-notifications/notifications.js                     //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.export({                                                      // 1\n  Notifications: function () {                                       // 1\n    return Notifications;                                            // 1\n  },                                                                 // 1\n  Configs: function () {                                             // 1\n    return Configs;                                                  // 1\n  }                                                                  // 1\n});                                                                  // 1\nvar Mongo = void 0;                                                  // 1\nmodule.importSync(\"meteor/mongo\", {                                  // 1\n  Mongo: function (v) {                                              // 1\n    Mongo = v;                                                       // 1\n  }                                                                  // 1\n}, 0);                                                               // 1\nvar SimpleSchema = void 0;                                           // 1\nmodule.importSync(\"meteor/aldeed:simple-schema\", {                   // 1\n  SimpleSchema: function (v) {                                       // 1\n    SimpleSchema = v;                                                // 1\n  }                                                                  // 1\n}, 1);                                                               // 1\nvar Notifications = new Mongo.Collection('notifications');           // 6\nvar Configs = new Mongo.Collection('notifications_configs');         // 7\n// schemas                                                           // 9\nNotifications.Schema = new SimpleSchema({                            // 10\n  notifType: {                                                       // 11\n    type: String,                                                    // 12\n    optional: true                                                   // 13\n  },                                                                 // 11\n  title: {                                                           // 16\n    type: String                                                     // 17\n  },                                                                 // 16\n  link: {                                                            // 20\n    type: String,                                                    // 21\n    optional: true                                                   // 22\n  },                                                                 // 20\n  content: {                                                         // 25\n    type: String                                                     // 26\n  },                                                                 // 25\n  createdUser: {                                                     // 29\n    type: String,                                                    // 30\n    optional: true                                                   // 31\n  },                                                                 // 29\n  receiver: {                                                        // 34\n    type: String                                                     // 35\n  }                                                                  // 34\n});                                                                  // 10\nvar BaseExtra = new SimpleSchema({                                   // 40\n  date: {                                                            // 41\n    type: 'date'                                                     // 42\n  },                                                                 // 41\n  isRead: {                                                          // 45\n    type: Boolean                                                    // 46\n  }                                                                  // 45\n});                                                                  // 40\nConfigs.Schema = new SimpleSchema({                                  // 51\n  // to whom this config is related                                  // 52\n  user: {                                                            // 53\n    type: String                                                     // 54\n  },                                                                 // 53\n  // which module's type it is. For example: indocuments             // 57\n  notifType: {                                                       // 58\n    type: String                                                     // 59\n  },                                                                 // 58\n  isAllowed: {                                                       // 62\n    type: Boolean                                                    // 63\n  }                                                                  // 62\n}); // attach schemas                                                // 51\n                                                                     //\nNotifications.attachSchema(Notifications.Schema);                    // 69\nNotifications.attachSchema(BaseExtra);                               // 70\nConfigs.attachSchema(Configs.Schema);                                // 71\n///////////////////////////////////////////////////////////////////////\n\n}]}}}},{\"extensions\":[\".js\",\".json\"]});\nvar exports = require(\"./node_modules/meteor/erxes-notifications/client/main.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['erxes-notifications'] = exports;\n\n})();\n","servePath":"/packages/erxes-notifications.js","sourceMap":{"version":3,"sources":["/packages/erxes-notifications/client/main.js","/packages/erxes-notifications/notifications.js"],"names":["module","export","Notifications","Configs","importSync","v","Mongo","SimpleSchema","Collection","Schema","notifType","type","String","optional","title","link","content","createdUser","receiver","BaseExtra","date","isRead","Boolean","user","isAllowed","attachSchema"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,iBAAc;AAAA,WAAIA,aAAJ;AAAA,GAAf;AAAiCC,WAAQ;AAAA,WAAIA,OAAJ;AAAA;AAAzC,CAAd;AAAqE,IAAID,sBAAJ;AAAA,IAAkBC,gBAAlB;AAA0BH,OAAOI,UAAP,CAAkB,kBAAlB,EAAqC;AAACF,iBAAc,UAASG,CAAT,EAAW;AAACH,oBAAcG,CAAd;AAAgB,GAA3C;AAA4CF,WAAQ,UAASE,CAAT,EAAW;AAACF,cAAQE,CAAR;AAAU;AAA1E,CAArC,EAAiH,CAAjH,qE;;;;;;;;;;;ACA/FL,OAAOC,MAAP,CAAc;AAACC,iBAAc;AAAA,WAAIA,aAAJ;AAAA,GAAf;AAAiCC,WAAQ;AAAA,WAAIA,OAAJ;AAAA;AAAzC,CAAd;AAAqE,IAAIG,cAAJ;AAAUN,OAAOI,UAAP,CAAkB,cAAlB,EAAiC;AAACE,SAAM,UAASD,CAAT,EAAW;AAACC,YAAMD,CAAN;AAAQ;AAA3B,CAAjC,EAA8D,CAA9D;AAAiE,IAAIE,qBAAJ;AAAiBP,OAAOI,UAAP,CAAkB,6BAAlB,EAAgD;AAACG,gBAAa,UAASF,CAAT,EAAW;AAACE,mBAAaF,CAAb;AAAe;AAAzC,CAAhD,EAA2F,CAA3F;AAK1J,IAAMH,gBAAgB,IAAII,MAAME,UAAV,CAAqB,eAArB,CAAtB;AACA,IAAML,UAAU,IAAIG,MAAME,UAAV,CAAqB,uBAArB,CAAhB;AAEP;AACAN,cAAcO,MAAd,GAAuB,IAAIF,YAAJ,CAAiB;AACtCG,aAAW;AACTC,UAAMC,MADG;AAETC,cAAU;AAFD,GAD2B;AAMtCC,SAAO;AACLH,UAAMC;AADD,GAN+B;AAUtCG,QAAM;AACJJ,UAAMC,MADF;AAEJC,cAAU;AAFN,GAVgC;AAetCG,WAAS;AACPL,UAAMC;AADC,GAf6B;AAmBtCK,eAAa;AACXN,UAAMC,MADK;AAEXC,cAAU;AAFC,GAnByB;AAwBtCK,YAAU;AACRP,UAAMC;AADE;AAxB4B,CAAjB,CAAvB;AA8BA,IAAMO,YAAY,IAAIZ,YAAJ,CAAiB;AACjCa,QAAM;AACJT,UAAM;AADF,GAD2B;AAKjCU,UAAQ;AACNV,UAAMW;AADA;AALyB,CAAjB,CAAlB;AAWAnB,QAAQM,MAAR,GAAiB,IAAIF,YAAJ,CAAiB;AAChC;AACAgB,QAAM;AACJZ,UAAMC;AADF,GAF0B;AAMhC;AACAF,aAAW;AACTC,UAAMC;AADG,GAPqB;AAWhCY,aAAW;AACTb,UAAMW;AADG;AAXqB,CAAjB,CAAjB,C,CAiBA;;AACApB,cAAcuB,YAAd,CAA2BvB,cAAcO,MAAzC;AACAP,cAAcuB,YAAd,CAA2BN,SAA3B;AACAhB,QAAQsB,YAAR,CAAqBtB,QAAQM,MAA7B,uC","file":"/packages/erxes-notifications.js","sourcesContent":["import { Notifications, Configs } from '../notifications';\n\nexport {\n  Notifications,\n  Configs,\n};\n","import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n// collections\nexport const Notifications = new Mongo.Collection('notifications');\nexport const Configs = new Mongo.Collection('notifications_configs');\n\n// schemas\nNotifications.Schema = new SimpleSchema({\n  notifType: {\n    type: String,\n    optional: true,\n  },\n\n  title: {\n    type: String,\n  },\n\n  link: {\n    type: String,\n    optional: true,\n  },\n\n  content: {\n    type: String,\n  },\n\n  createdUser: {\n    type: String,\n    optional: true,\n  },\n\n  receiver: {\n    type: String,\n  },\n});\n\n\nconst BaseExtra = new SimpleSchema({\n  date: {\n    type: 'date',\n  },\n\n  isRead: {\n    type: Boolean,\n  },\n});\n\n\nConfigs.Schema = new SimpleSchema({\n  // to whom this config is related\n  user: {\n    type: String,\n  },\n\n  // which module's type it is. For example: indocuments\n  notifType: {\n    type: String,\n  },\n\n  isAllowed: {\n    type: Boolean,\n  },\n});\n\n\n// attach schemas\nNotifications.attachSchema(Notifications.Schema);\nNotifications.attachSchema(BaseExtra);\nConfigs.attachSchema(Configs.Schema);\n"]}}]