{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"react-bootstrap","imported":["FormGroup","ControlLabel","FormControl"],"specifiers":[{"kind":"named","imported":"FormGroup","local":"FormGroup"},{"kind":"named","imported":"ControlLabel","local":"ControlLabel"},{"kind":"named","imported":"FormControl","local":"FormControl"}]},{"source":"react-select-plus","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Select"}]},{"source":"/imports/react-ui/auth/components","imported":["UserCommonInfos"],"specifiers":[{"kind":"named","imported":"UserCommonInfos","local":"UserCommonInfos"}]},{"source":"../../common/components","imported":["Form"],"specifiers":[{"kind":"named","imported":"Form","local":"CommonForm"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/settings/team/components/UserForm.js","filenameRelative":"/imports/react-ui/settings/team/components/UserForm.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/settings/team/components/UserForm.js.map","sourceFileName":"/imports/react-ui/settings/team/components/UserForm.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"UserForm"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar FormGroup = void 0,\n    ControlLabel = void 0,\n    FormControl = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  FormGroup: function (v) {\n    FormGroup = v;\n  },\n  ControlLabel: function (v) {\n    ControlLabel = v;\n  },\n  FormControl: function (v) {\n    FormControl = v;\n  }\n}, 1);\nvar Select = void 0;\nmodule.importSync(\"react-select-plus\", {\n  \"default\": function (v) {\n    Select = v;\n  }\n}, 2);\nvar UserCommonInfos = void 0;\nmodule.importSync(\"/imports/react-ui/auth/components\", {\n  UserCommonInfos: function (v) {\n    UserCommonInfos = v;\n  }\n}, 3);\nvar CommonForm = void 0;\nmodule.importSync(\"../../common/components\", {\n  Form: function (v) {\n    CommonForm = v;\n  }\n}, 4);\n\nvar UserForm = function (_CommonForm) {\n  (0, _inherits3.default)(UserForm, _CommonForm);\n\n  function UserForm(props, context) {\n    (0, _classCallCheck3.default)(this, UserForm);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _CommonForm.call(this, props, context));\n\n    _this.generateChannelsParams = _this.generateChannelsParams.bind(_this);\n    _this.collectValues = _this.collectValues.bind(_this);\n    _this.state = {\n      selectedChannels: _this.generateChannelsParams(props.selectedChannels)\n    };\n    return _this;\n  }\n\n  UserForm.prototype.generateChannelsParams = function () {\n    function generateChannelsParams(channels) {\n      return channels.map(function (channel) {\n        return {\n          value: channel._id,\n          label: channel.name\n        };\n      });\n    }\n\n    return generateChannelsParams;\n  }();\n\n  UserForm.prototype.collectValues = function () {\n    function collectValues(items) {\n      return items.map(function (item) {\n        return item.value;\n      });\n    }\n\n    return collectValues;\n  }();\n\n  UserForm.prototype.renderChannels = function () {\n    function renderChannels() {\n      var self = this;\n      var channels = this.props.channels;\n      return React.createElement(\n        FormGroup,\n        null,\n        React.createElement(\n          ControlLabel,\n          null,\n          \"Choose the channels\"\n        ),\n        React.createElement(\"br\", null),\n        React.createElement(Select, {\n          placeholder: \"Choose channels\",\n          value: self.state.selectedChannels,\n          options: self.generateChannelsParams(channels),\n          onChange: function (items) {\n            self.setState({\n              selectedChannels: items\n            });\n          },\n          multi: true\n        })\n      );\n    }\n\n    return renderChannels;\n  }();\n\n  UserForm.prototype.generateDoc = function () {\n    function generateDoc() {\n      return {\n        doc: {\n          avatar: document.getElementById('avatar').value,\n          position: document.getElementById('position').value,\n          fullName: document.getElementById('fullName').value,\n          username: document.getElementById('username').value,\n          twitterUsername: document.getElementById('twitterUsername').value,\n          email: document.getElementById('email').value,\n          password: document.getElementById('password').value,\n          passwordConfirmation: document.getElementById('password-confirmation').value,\n          role: document.getElementById('role').value,\n          channelIds: this.collectValues(this.state.selectedChannels)\n        }\n      };\n    }\n\n    return generateDoc;\n  }();\n\n  UserForm.prototype.renderContent = function () {\n    function renderContent(object) {\n      var user = object._id ? object : {\n        details: {},\n        emails: [{}]\n      };\n      return React.createElement(\n        \"div\",\n        null,\n        React.createElement(UserCommonInfos, {\n          user: user\n        }),\n        React.createElement(\n          FormGroup,\n          null,\n          React.createElement(\n            ControlLabel,\n            null,\n            \"Password\"\n          ),\n          React.createElement(FormControl, {\n            id: \"password\",\n            type: \"password\"\n          })\n        ),\n        React.createElement(\n          FormGroup,\n          null,\n          React.createElement(\n            ControlLabel,\n            null,\n            \"Password confirmation\"\n          ),\n          React.createElement(FormControl, {\n            id: \"password-confirmation\",\n            type: \"password\"\n          })\n        ),\n        React.createElement(\n          FormGroup,\n          {\n            controlId: \"role\"\n          },\n          React.createElement(\n            ControlLabel,\n            null,\n            \"Role\"\n          ),\n          React.createElement(\n            FormControl,\n            {\n              componentClass: \"select\",\n              defaultValue: user.details.role\n            },\n            React.createElement(\n              \"option\",\n              {\n                value: \"admin\"\n              },\n              \"Admin\"\n            ),\n            React.createElement(\n              \"option\",\n              {\n                value: \"contributor\"\n              },\n              \"Contributor\"\n            )\n          )\n        ),\n        this.renderChannels()\n      );\n    }\n\n    return renderContent;\n  }();\n\n  return UserForm;\n}(CommonForm);\n\nmodule.export(\"default\", exports.default = UserForm);","map":{"version":3,"sources":["/imports/react-ui/settings/team/components/UserForm.js"],"names":["React","module","importSync","v","FormGroup","ControlLabel","FormControl","Select","UserCommonInfos","CommonForm","Form","UserForm","props","context","generateChannelsParams","bind","collectValues","state","selectedChannels","channels","map","value","channel","_id","label","name","items","item","renderChannels","self","setState","generateDoc","doc","avatar","document","getElementById","position","fullName","username","twitterUsername","email","password","passwordConfirmation","role","channelIds","renderContent","object","user","details","emails","export","exports","default"],"mappings":"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","file":"/imports/react-ui/settings/team/components/UserForm.js.map","sourcesContent":["import React from 'react';\nimport { FormGroup, ControlLabel, FormControl } from 'react-bootstrap';\nimport Select from 'react-select-plus';\nimport { UserCommonInfos } from '/imports/react-ui/auth/components';\nimport { Form as CommonForm } from '../../common/components';\n\nclass UserForm extends CommonForm {\n  constructor(props, context) {\n    super(props, context);\n\n    this.generateChannelsParams = this.generateChannelsParams.bind(this);\n    this.collectValues = this.collectValues.bind(this);\n\n    this.state = {\n      selectedChannels: this.generateChannelsParams(props.selectedChannels),\n    };\n  }\n\n  generateChannelsParams(channels) {\n    return channels.map(channel => ({\n      value: channel._id,\n      label: channel.name,\n    }));\n  }\n\n  collectValues(items) {\n    return items.map(item => item.value);\n  }\n\n  renderChannels() {\n    const self = this;\n    const { channels } = this.props;\n\n    return (\n      <FormGroup>\n        <ControlLabel>Choose the channels</ControlLabel><br />\n\n        <Select\n          placeholder=\"Choose channels\"\n          value={self.state.selectedChannels}\n          options={self.generateChannelsParams(channels)}\n          onChange={items => {\n            self.setState({ selectedChannels: items });\n          }}\n          multi\n        />\n\n      </FormGroup>\n    );\n  }\n\n  generateDoc() {\n    return {\n      doc: {\n        avatar: document.getElementById('avatar').value,\n        position: document.getElementById('position').value,\n        fullName: document.getElementById('fullName').value,\n        username: document.getElementById('username').value,\n        twitterUsername: document.getElementById('twitterUsername').value,\n        email: document.getElementById('email').value,\n        password: document.getElementById('password').value,\n        passwordConfirmation: document.getElementById('password-confirmation').value,\n        role: document.getElementById('role').value,\n        channelIds: this.collectValues(this.state.selectedChannels),\n      },\n    };\n  }\n\n  renderContent(object) {\n    const user = object._id ? object : { details: {}, emails: [{}] };\n\n    return (\n      <div>\n        <UserCommonInfos user={user} />\n\n        <FormGroup>\n          <ControlLabel>Password</ControlLabel>\n          <FormControl id=\"password\" type=\"password\" />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Password confirmation</ControlLabel>\n          <FormControl id=\"password-confirmation\" type=\"password\" />\n        </FormGroup>\n\n        <FormGroup controlId=\"role\">\n          <ControlLabel>Role</ControlLabel>\n\n          <FormControl componentClass=\"select\" defaultValue={user.details.role}>\n            <option value=\"admin\">Admin</option>\n            <option value=\"contributor\">Contributor</option>\n          </FormControl>\n        </FormGroup>\n\n        {this.renderChannels()}\n      </div>\n    );\n  }\n}\n\nexport default UserForm;\n"]},"hash":"ccf2ed33176ff1ee3c43dec72e3291c0a2ca12d7"}
