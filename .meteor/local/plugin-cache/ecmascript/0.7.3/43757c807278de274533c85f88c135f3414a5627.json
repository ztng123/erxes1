{"metadata":{"usedHelpers":["extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"react-apollo","imported":["compose","gql","graphql"],"specifiers":[{"kind":"named","imported":"compose","local":"compose"},{"kind":"named","imported":"gql","local":"gql"},{"kind":"named","imported":"graphql","local":"graphql"}]},{"source":"../components","imported":["AssignBox"],"specifiers":[{"kind":"named","imported":"AssignBox","local":"AssignBox"}]},{"source":"../graphql","imported":["queries"],"specifiers":[{"kind":"named","imported":"queries","local":"queries"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/inbox/containers/AssignBox.js","filenameRelative":"/imports/react-ui/inbox/containers/AssignBox.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/inbox/containers/AssignBox.js.map","sourceFileName":"/imports/react-ui/inbox/containers/AssignBox.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"AssignBox"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar compose = void 0,\n    gql = void 0,\n    graphql = void 0;\nmodule.importSync(\"react-apollo\", {\n  compose: function (v) {\n    compose = v;\n  },\n  gql: function (v) {\n    gql = v;\n  },\n  graphql: function (v) {\n    graphql = v;\n  }\n}, 1);\nvar AssignBox = void 0;\nmodule.importSync(\"../components\", {\n  AssignBox: function (v) {\n    AssignBox = v;\n  }\n}, 2);\nvar queries = void 0;\nmodule.importSync(\"../graphql\", {\n  queries: function (v) {\n    queries = v;\n  }\n}, 3);\n\nvar AssignBoxContainer = function (props) {\n  var usersQuery = props.usersQuery,\n      conversationsQuery = props.conversationsQuery;\n\n  if (usersQuery.loading || conversationsQuery.loading) {\n    return null;\n  }\n\n  var assign = function (_ref, callback) {\n    var targetIds = _ref.targetIds,\n        assignedUserId = _ref.assignedUserId;\n    var params = {\n      conversationIds: targetIds,\n      assignedUserId: assignedUserId\n    };\n    Meteor.call('conversations.assign', params, callback);\n  };\n\n  var clear = function (conversationIds, callback) {\n    Meteor.call('conversations.unassign', {\n      conversationIds: conversationIds\n    }, callback);\n  };\n\n  var updatedProps = (0, _extends3.default)({}, props, {\n    targets: conversationsQuery.conversations,\n    assignees: usersQuery.users,\n    assign: assign,\n    clear: clear\n  });\n  return React.createElement(AssignBox, updatedProps);\n};\n\nAssignBoxContainer.propTypes = {\n  targets: PropTypes.array,\n  usersQuery: PropTypes.object,\n  conversationsQuery: PropTypes.object\n};\nmodule.export(\"default\", exports.default = compose(graphql(gql(queries.userList), {\n  name: 'usersQuery'\n}), graphql(gql(queries.conversationList), {\n  name: 'conversationsQuery',\n  options: function (_ref2) {\n    var targets = _ref2.targets;\n    return {\n      variables: {\n        params: {\n          ids: targets\n        }\n      }\n    };\n  }\n}))(AssignBoxContainer));","map":{"version":3,"sources":["/imports/react-ui/inbox/containers/AssignBox.js"],"names":["React","PropTypes","module","importSync","v","compose","gql","graphql","AssignBox","queries","AssignBoxContainer","usersQuery","props","conversationsQuery","loading","assign","callback","targetIds","assignedUserId","params","conversationIds","Meteor","call","clear","updatedProps","targets","conversations","assignees","users","propTypes","array","object","export","exports","default","userList","name","conversationList","options","variables","ids"],"mappings":";;;;;;AAAA,IAAIA,cAAJ;AAAA,IAAUC,kBAAV;AAAoBC,OAAOC,UAAP,CAAkB,OAAlB,EAA0B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACJ,YAAMI,CAAN;AAAQ,GAA7B;AAA8BH,aAAU,UAASG,CAAT,EAAW;AAACH,gBAAUG,CAAV;AAAY;AAAhE,CAA1B,EAA4F,CAA5F;AAA+F,IAAIC,gBAAJ;AAAA,IAAYC,YAAZ;AAAA,IAAgBC,gBAAhB;AAAwBL,OAAOC,UAAP,CAAkB,cAAlB,EAAiC;AAACE,WAAQ,UAASD,CAAT,EAAW;AAACC,cAAQD,CAAR;AAAU,GAA/B;AAAgCE,OAAI,UAASF,CAAT,EAAW;AAACE,UAAIF,CAAJ;AAAM,GAAtD;AAAuDG,WAAQ,UAASH,CAAT,EAAW;AAACG,cAAQH,CAAR;AAAU;AAArF,CAAjC,EAAwH,CAAxH;AAA2H,IAAII,kBAAJ;AAAcN,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACK,aAAU,UAASJ,CAAT,EAAW;AAACI,gBAAUJ,CAAV;AAAY;AAAnC,CAAlC,EAAuE,CAAvE;AAA0E,IAAIK,gBAAJ;AAAYP,OAAOC,UAAP,CAAkB,YAAlB,EAA+B;AAACM,WAAQ,UAASL,CAAT,EAAW;AAACK,cAAQL,CAAR;AAAU;AAA/B,CAA/B,EAAgE,CAAhE;;AAK1W,IAAMM,qBAAqB,iBAAS;AAAA,MAC1BC,UAD0B,GACSC,KADT,CAC1BD,UAD0B;AAAA,MACdE,kBADc,GACSD,KADT,CACdC,kBADc;;AAGlC,MAAIF,WAAWG,OAAX,IAAsBD,mBAAmBC,OAA7C,EAAsD;AACpD,WAAO,IAAP;AACD;;AAED,MAAMC,SAAS,gBAAgCC,QAAhC,EAA6C;AAAA,QAA1CC,SAA0C,QAA1CA,SAA0C;AAAA,QAA/BC,cAA+B,QAA/BA,cAA+B;AAC1D,QAAMC,SAAS;AAAEC,uBAAiBH,SAAnB;AAA8BC;AAA9B,KAAf;AAEAG,WAAOC,IAAP,CAAY,sBAAZ,EAAoCH,MAApC,EAA4CH,QAA5C;AACD,GAJD;;AAMA,MAAMO,QAAQ,UAACH,eAAD,EAAkBJ,QAAlB,EAA+B;AAC3CK,WAAOC,IAAP,CAAY,wBAAZ,EAAsC;AAAEF;AAAF,KAAtC,EAA2DJ,QAA3D;AACD,GAFD;;AAIA,MAAMQ,0CACDZ,KADC;AAEJa,aAASZ,mBAAmBa,aAFxB;AAGJC,eAAWhB,WAAWiB,KAHlB;AAIJb,kBAJI;AAKJQ;AALI,IAAN;AAQA,SAAO,oBAAC,SAAD,EAAeC,YAAf,CAAP;AACD,CA1BD;;AA4BAd,mBAAmBmB,SAAnB,GAA+B;AAC7BJ,WAASxB,UAAU6B,KADU;AAE7BnB,cAAYV,UAAU8B,MAFO;AAG7BlB,sBAAoBZ,UAAU8B;AAHD,CAA/B;AAjCA7B,OAAO8B,MAAP,CAAc,SAAd,EAAwBC,QAAQC,OAAR,GAuCT7B,QACbE,QAAQD,IAAIG,QAAQ0B,QAAZ,CAAR,EAA+B;AAAEC,QAAM;AAAR,CAA/B,CADa,EAEb7B,QAAQD,IAAIG,QAAQ4B,gBAAZ,CAAR,EAAuC;AACrCD,QAAM,oBAD+B;AAErCE,WAAS;AAAA,QAAGb,OAAH,SAAGA,OAAH;AAAA,WAAkB;AACzBc,iBAAW;AACTpB,gBAAQ;AACNqB,eAAKf;AADC;AADC;AADc,KAAlB;AAAA;AAF4B,CAAvC,CAFa,EAYbf,kBAZa,CAvCf","file":"/imports/react-ui/inbox/containers/AssignBox.js.map","sourcesContent":["import React, { PropTypes } from 'react';\nimport { compose, gql, graphql } from 'react-apollo';\nimport { AssignBox } from '../components';\nimport { queries } from '../graphql';\n\nconst AssignBoxContainer = props => {\n  const { usersQuery, conversationsQuery } = props;\n\n  if (usersQuery.loading || conversationsQuery.loading) {\n    return null;\n  }\n\n  const assign = ({ targetIds, assignedUserId }, callback) => {\n    const params = { conversationIds: targetIds, assignedUserId };\n\n    Meteor.call('conversations.assign', params, callback);\n  };\n\n  const clear = (conversationIds, callback) => {\n    Meteor.call('conversations.unassign', { conversationIds }, callback);\n  };\n\n  const updatedProps = {\n    ...props,\n    targets: conversationsQuery.conversations,\n    assignees: usersQuery.users,\n    assign,\n    clear,\n  };\n\n  return <AssignBox {...updatedProps} />;\n};\n\nAssignBoxContainer.propTypes = {\n  targets: PropTypes.array,\n  usersQuery: PropTypes.object,\n  conversationsQuery: PropTypes.object,\n};\n\nexport default compose(\n  graphql(gql(queries.userList), { name: 'usersQuery' }),\n  graphql(gql(queries.conversationList), {\n    name: 'conversationsQuery',\n    options: ({ targets }) => ({\n      variables: {\n        params: {\n          ids: targets,\n        },\n      },\n    }),\n  }),\n)(AssignBoxContainer);\n"]},"hash":"43757c807278de274533c85f88c135f3414a5627"}
