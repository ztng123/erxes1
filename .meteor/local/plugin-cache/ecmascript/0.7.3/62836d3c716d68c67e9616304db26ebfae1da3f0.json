{"metadata":{"usedHelpers":["extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/kadira:flow-router","imported":["FlowRouter"],"specifiers":[{"kind":"named","imported":"FlowRouter","local":"FlowRouter"}]},{"source":"meteor/erxes-notifier","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Alert"}]}],"exports":{"exported":["saveCallback"],"specifiers":[{"kind":"local","local":"saveCallback","exported":"saveCallback"}]}}},"options":{"filename":"/imports/react-ui/settings/integrations/containers/utils.js","filenameRelative":"/imports/react-ui/settings/integrations/containers/utils.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/settings/integrations/containers/utils.js.map","sourceFileName":"/imports/react-ui/settings/integrations/containers/utils.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"utils"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  saveCallback: function () {\n    return saveCallback;\n  }\n});\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar FlowRouter = void 0;\nmodule.importSync(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 1);\nvar Alert = void 0;\nmodule.importSync(\"meteor/erxes-notifier\", {\n  \"default\": function (v) {\n    Alert = v;\n  }\n}, 2);\n\nvar saveCallback = function (paramsDic, addMethodName, editMethodName, integration, refetch) {\n  var methodName = \"integrations.\" + addMethodName;\n  var params = (0, _extends3.default)({}, paramsDic);\n\n  if (integration && integration._id) {\n    methodName = \"integrations.\" + editMethodName;\n    params = (0, _extends3.default)({\n      _id: integration._id\n    }, paramsDic);\n  }\n\n  Meteor.call(methodName, params, function (error) {\n    if (error) {\n      return Alert.error(error.reason);\n    }\n\n    if (refetch) {\n      refetch();\n    }\n\n    Alert.success('Congrats');\n    return FlowRouter.go('/settings/integrations/list', {}, FlowRouter.current().queryParams);\n  });\n};","map":{"version":3,"sources":["/imports/react-ui/settings/integrations/containers/utils.js"],"names":["module","export","saveCallback","Meteor","importSync","v","FlowRouter","Alert","paramsDic","addMethodName","editMethodName","integration","refetch","methodName","params","_id","call","error","reason","success","go","current","queryParams"],"mappings":";;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,gBAAa;AAAA,WAAIA,YAAJ;AAAA;AAAd,CAAd;AAA+C,IAAIC,eAAJ;AAAWH,OAAOI,UAAP,CAAkB,eAAlB,EAAkC;AAACD,UAAO,UAASE,CAAT,EAAW;AAACF,aAAOE,CAAP;AAAS;AAA7B,CAAlC,EAAiE,CAAjE;AAAoE,IAAIC,mBAAJ;AAAeN,OAAOI,UAAP,CAAkB,2BAAlB,EAA8C;AAACE,cAAW,UAASD,CAAT,EAAW;AAACC,iBAAWD,CAAX;AAAa;AAArC,CAA9C,EAAqF,CAArF;AAAwF,IAAIE,cAAJ;AAAUP,OAAOI,UAAP,CAAkB,uBAAlB,EAA0C;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACE,YAAMF,CAAN;AAAQ;AAA7B,CAA1C,EAAyE,CAAzE;;AAIxO,IAAMH,eAAe,UAACM,SAAD,EAAYC,aAAZ,EAA2BC,cAA3B,EAA2CC,WAA3C,EAAwDC,OAAxD,EAAoE;AAC9F,MAAIC,+BAA6BJ,aAAjC;AACA,MAAIK,oCAAcN,SAAd,CAAJ;;AAEA,MAAIG,eAAeA,YAAYI,GAA/B,EAAoC;AAClCF,mCAA6BH,cAA7B;AACAI;AAAWC,WAAKJ,YAAYI;AAA5B,OAAoCP,SAApC;AACD;;AAEDL,SAAOa,IAAP,CAAYH,UAAZ,EAAwBC,MAAxB,EAAgC,iBAAS;AACvC,QAAIG,KAAJ,EAAW;AACT,aAAOV,MAAMU,KAAN,CAAYA,MAAMC,MAAlB,CAAP;AACD;;AAED,QAAIN,OAAJ,EAAa;AACXA;AACD;;AAEDL,UAAMY,OAAN,CAAc,UAAd;AAEA,WAAOb,WAAWc,EAAX,CAAc,6BAAd,EAA6C,EAA7C,EAAiDd,WAAWe,OAAX,GAAqBC,WAAtE,CAAP;AACD,GAZD;AAaD,CAtBM","file":"/imports/react-ui/settings/integrations/containers/utils.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport Alert from 'meteor/erxes-notifier';\n\nexport const saveCallback = (paramsDic, addMethodName, editMethodName, integration, refetch) => {\n  let methodName = `integrations.${addMethodName}`;\n  let params = { ...paramsDic };\n\n  if (integration && integration._id) {\n    methodName = `integrations.${editMethodName}`;\n    params = { _id: integration._id, ...paramsDic };\n  }\n\n  Meteor.call(methodName, params, error => {\n    if (error) {\n      return Alert.error(error.reason);\n    }\n\n    if (refetch) {\n      refetch();\n    }\n\n    Alert.success('Congrats');\n\n    return FlowRouter.go('/settings/integrations/list', {}, FlowRouter.current().queryParams);\n  });\n};\n"]},"hash":"62836d3c716d68c67e9616304db26ebfae1da3f0"}
