{"metadata":{"usedHelpers":["toConsumableArray","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-bootstrap","imported":["Dropdown","MenuItem"],"specifiers":[{"kind":"named","imported":"Dropdown","local":"Dropdown"},{"kind":"named","imported":"MenuItem","local":"MenuItem"}]},{"source":"meteor/kadira:flow-router","imported":["FlowRouter"],"specifiers":[{"kind":"named","imported":"FlowRouter","local":"FlowRouter"}]},{"source":"/imports/react-ui/layout/components","imported":["Wrapper"],"specifiers":[{"kind":"named","imported":"Wrapper","local":"Wrapper"}]},{"source":"/imports/react-ui/common","imported":["DropdownToggle","EmptyState"],"specifiers":[{"kind":"named","imported":"DropdownToggle","local":"DropdownToggle"},{"kind":"named","imported":"EmptyState","local":"EmptyState"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/customers/components/list/sidebar/Segments.js","filenameRelative":"/imports/react-ui/customers/components/list/sidebar/Segments.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/customers/components/list/sidebar/Segments.js.map","sourceFileName":"/imports/react-ui/customers/components/list/sidebar/Segments.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Segments"},"ignored":false,"code":"var _toConsumableArray2 = require(\"babel-runtime/helpers/toConsumableArray\");\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar Dropdown = void 0,\n    MenuItem = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  Dropdown: function (v) {\n    Dropdown = v;\n  },\n  MenuItem: function (v) {\n    MenuItem = v;\n  }\n}, 2);\nvar FlowRouter = void 0;\nmodule.importSync(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 3);\nvar Wrapper = void 0;\nmodule.importSync(\"/imports/react-ui/layout/components\", {\n  Wrapper: function (v) {\n    Wrapper = v;\n  }\n}, 4);\nvar DropdownToggle = void 0,\n    EmptyState = void 0;\nmodule.importSync(\"/imports/react-ui/common\", {\n  DropdownToggle: function (v) {\n    DropdownToggle = v;\n  },\n  EmptyState: function (v) {\n    EmptyState = v;\n  }\n}, 5);\nvar propTypes = {\n  counts: PropTypes.object.isRequired,\n  segments: PropTypes.array.isRequired\n};\n\nfunction Segments(_ref) {\n  var counts = _ref.counts,\n      segments = _ref.segments;\n  var _Wrapper$Sidebar = Wrapper.Sidebar,\n      Section = _Wrapper$Sidebar.Section,\n      filter = _Wrapper$Sidebar.filter,\n      getActiveClass = _Wrapper$Sidebar.getActiveClass;\n  var orderedSegments = [];\n  segments.filter(function (segment) {\n    return !segment.subOf;\n  }).map(function (segment) {\n    orderedSegments.push.apply(orderedSegments, [segment].concat((0, _toConsumableArray3.default)(segment.getSubSegments)));\n  });\n  return React.createElement(\n    Section,\n    {\n      collapsible: segments.length > 5\n    },\n    React.createElement(\n      Section.Title,\n      null,\n      \"Filter by segments\"\n    ),\n    React.createElement(\n      Section.QuickButtons,\n      null,\n      React.createElement(\n        Dropdown,\n        {\n          id: \"dropdown-user\",\n          className: \"quick-button\",\n          pullRight: true\n        },\n        React.createElement(\n          DropdownToggle,\n          {\n            bsRole: \"toggle\"\n          },\n          React.createElement(\"i\", {\n            className: \"ion-more\"\n          })\n        ),\n        React.createElement(\n          Dropdown.Menu,\n          null,\n          React.createElement(\n            MenuItem,\n            {\n              href: FlowRouter.path('segments/new')\n            },\n            \"New segment\"\n          ),\n          React.createElement(\n            MenuItem,\n            {\n              href: FlowRouter.path('segments/list')\n            },\n            \"Manage segments\"\n          )\n        )\n      ),\n      FlowRouter.getQueryParam('segment') ? React.createElement(\n        \"a\",\n        {\n          tabIndex: 0,\n          className: \"quick-button\",\n          onClick: function () {\n            filter('segment', null);\n          }\n        },\n        React.createElement(\"i\", {\n          className: \"ion-close-circled\"\n        })\n      ) : null\n    ),\n    React.createElement(\n      \"ul\",\n      {\n        className: \"sidebar-list\"\n      },\n      orderedSegments.length ? orderedSegments.map(function (segment) {\n        return React.createElement(\n          \"li\",\n          {\n            key: segment._id\n          },\n          React.createElement(\n            \"a\",\n            {\n              tabIndex: 0,\n              className: getActiveClass('segment', segment._id),\n              onClick: function () {\n                filter('segment', segment._id);\n              }\n            },\n            segment.subOf ? \"\\xA0\\xA0\\xA0\\xA0\\xA0\" : null,\n            React.createElement(\"i\", {\n              className: \"ion-pie-graph icon\",\n              style: {\n                color: segment.color\n              }\n            }),\n            segment.name,\n            React.createElement(\n              \"span\",\n              {\n                className: \"counter\"\n              },\n              counts[segment._id]\n            )\n          )\n        );\n      }) : React.createElement(EmptyState, {\n        icon: React.createElement(\"i\", {\n          className: \"ion-pie-graph\"\n        }),\n        text: \"No segments\",\n        size: \"small\"\n      })\n    )\n  );\n}\n\nSegments.propTypes = propTypes;\nmodule.export(\"default\", exports.default = Segments);","map":{"version":3,"sources":["/imports/react-ui/customers/components/list/sidebar/Segments.js"],"names":["React","module","importSync","v","PropTypes","Dropdown","MenuItem","FlowRouter","Wrapper","DropdownToggle","EmptyState","propTypes","counts","object","isRequired","segments","array","Segments","Sidebar","Section","filter","getActiveClass","orderedSegments","segment","subOf","map","push","getSubSegments","length","path","getQueryParam","_id","color","name","export","exports","default"],"mappings":"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","file":"/imports/react-ui/customers/components/list/sidebar/Segments.js.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, MenuItem } from 'react-bootstrap';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Wrapper } from '/imports/react-ui/layout/components';\nimport { DropdownToggle, EmptyState } from '/imports/react-ui/common';\n\nconst propTypes = {\n  counts: PropTypes.object.isRequired,\n  segments: PropTypes.array.isRequired,\n};\n\nfunction Segments({ counts, segments }) {\n  const { Section, filter, getActiveClass } = Wrapper.Sidebar;\n\n  const orderedSegments = [];\n  segments.filter(segment => !segment.subOf).map(segment => {\n    orderedSegments.push(segment, ...segment.getSubSegments);\n  });\n\n  return (\n    <Section collapsible={segments.length > 5}>\n      <Section.Title>Filter by segments</Section.Title>\n\n      <Section.QuickButtons>\n        <Dropdown id=\"dropdown-user\" className=\"quick-button\" pullRight>\n          <DropdownToggle bsRole=\"toggle\">\n            <i className=\"ion-more\" />\n          </DropdownToggle>\n          <Dropdown.Menu>\n            <MenuItem href={FlowRouter.path('segments/new')}>New segment</MenuItem>\n            <MenuItem href={FlowRouter.path('segments/list')}>Manage segments</MenuItem>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        {FlowRouter.getQueryParam('segment')\n          ? <a\n              tabIndex={0}\n              className=\"quick-button\"\n              onClick={() => {\n                filter('segment', null);\n              }}\n            >\n              <i className=\"ion-close-circled\" />\n            </a>\n          : null}\n      </Section.QuickButtons>\n\n      <ul className=\"sidebar-list\">\n        {orderedSegments.length\n          ? orderedSegments.map(segment => (\n              <li key={segment._id}>\n                <a\n                  tabIndex={0}\n                  className={getActiveClass('segment', segment._id)}\n                  onClick={() => {\n                    filter('segment', segment._id);\n                  }}\n                >\n                  {segment.subOf ? '\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0' : null}\n                  <i className=\"ion-pie-graph icon\" style={{ color: segment.color }} />\n                  {segment.name}\n                  <span className=\"counter\">\n                    {counts[segment._id]}\n                  </span>\n                </a>\n              </li>\n            ))\n          : <EmptyState icon={<i className=\"ion-pie-graph\" />} text=\"No segments\" size=\"small\" />}\n      </ul>\n    </Section>\n  );\n}\n\nSegments.propTypes = propTypes;\n\nexport default Segments;\n"]},"hash":"9be6b239e39b9684c012d736f01dd81bcb131676"}
