{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","extends","taggedTemplateLiteralLoose","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"react-apollo","imported":["compose","gql","graphql"],"specifiers":[{"kind":"named","imported":"compose","local":"compose"},{"kind":"named","imported":"gql","local":"gql"},{"kind":"named","imported":"graphql","local":"graphql"}]},{"source":"meteor/kadira:flow-router","imported":["FlowRouter"],"specifiers":[{"kind":"named","imported":"FlowRouter","local":"FlowRouter"}]},{"source":"/imports/api/customers/customers","imported":["Customers"],"specifiers":[{"kind":"named","imported":"Customers","local":"Customers"}]},{"source":"../components","imported":["Preview"],"specifiers":[{"kind":"named","imported":"Preview","local":"Preview"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/segments/containers/Preview.js","filenameRelative":"/imports/react-ui/segments/containers/Preview.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/segments/containers/Preview.js.map","sourceFileName":"/imports/react-ui/segments/containers/Preview.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Preview"},"ignored":false,"code":"var _taggedTemplateLiteralLoose2 = require(\"babel-runtime/helpers/taggedTemplateLiteralLoose\");\n\nvar _taggedTemplateLiteralLoose3 = _interopRequireDefault(_taggedTemplateLiteralLoose2);\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _templateObject = (0, _taggedTemplateLiteralLoose3.default)([\"\\n      query customerListForSegmentPreview($segment: JSON, $limit: Int) {\\n        customerListForSegmentPreview(segment: $segment, limit: $limit) {\\n          _id\\n          name\\n          email\\n          phone\\n          isUser\\n          integrationId\\n          createdAt\\n          messengerData\\n          twitterData\\n          facebookData\\n          tagIds\\n          getTags {\\n            _id\\n            name\\n          }\\n        }\\n      }\\n    \"], [\"\\n      query customerListForSegmentPreview($segment: JSON, $limit: Int) {\\n        customerListForSegmentPreview(segment: $segment, limit: $limit) {\\n          _id\\n          name\\n          email\\n          phone\\n          isUser\\n          integrationId\\n          createdAt\\n          messengerData\\n          twitterData\\n          facebookData\\n          tagIds\\n          getTags {\\n            _id\\n            name\\n          }\\n        }\\n      }\\n    \"]);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar compose = void 0,\n    gql = void 0,\n    graphql = void 0;\nmodule.importSync(\"react-apollo\", {\n  compose: function (v) {\n    compose = v;\n  },\n  gql: function (v) {\n    gql = v;\n  },\n  graphql: function (v) {\n    graphql = v;\n  }\n}, 1);\nvar FlowRouter = void 0;\nmodule.importSync(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 2);\nvar Customers = void 0;\nmodule.importSync(\"/imports/api/customers/customers\", {\n  Customers: function (v) {\n    Customers = v;\n  }\n}, 3);\nvar Preview = void 0;\nmodule.importSync(\"../components\", {\n  Preview: function (v) {\n    Preview = v;\n  }\n}, 4);\n\nvar PreviewContainer = function (_React$Component) {\n  (0, _inherits3.default)(PreviewContainer, _React$Component);\n\n  function PreviewContainer() {\n    (0, _classCallCheck3.default)(this, PreviewContainer);\n    return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));\n  }\n\n  PreviewContainer.prototype.render = function () {\n    function render() {\n      var customersQuery = this.props.customersQuery;\n\n      if (customersQuery.loading) {\n        return null;\n      }\n\n      var updatedProps = (0, _extends3.default)({}, this.props, {\n        customers: customersQuery.customerListForSegmentPreview,\n        customerFields: Customers.getPublicFields()\n      });\n      return React.createElement(Preview, updatedProps);\n    }\n\n    return render;\n  }();\n\n  return PreviewContainer;\n}(React.Component);\n\nPreviewContainer.propTypes = {\n  segment: PropTypes.object,\n  customersQuery: PropTypes.object\n};\nmodule.export(\"default\", exports.default = compose(graphql(gql(_templateObject), {\n  name: 'customersQuery',\n  options: function (_ref) {\n    var segment = _ref.segment;\n    return {\n      variables: {\n        segment: segment,\n        limit: parseInt(FlowRouter.getQueryParam('limit'), 10) || 20\n      }\n    };\n  }\n}))(PreviewContainer));","map":{"version":3,"sources":["/imports/react-ui/segments/containers/Preview.js"],"names":["React","PropTypes","module","importSync","v","compose","gql","graphql","FlowRouter","Customers","Preview","PreviewContainer","render","customersQuery","props","loading","updatedProps","customers","customerListForSegmentPreview","customerFields","getPublicFields","Component","propTypes","segment","object","export","exports","default","name","options","variables","limit","parseInt","getQueryParam"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,cAAJ;AAAA,IAAUC,kBAAV;AAAoBC,OAAOC,UAAP,CAAkB,OAAlB,EAA0B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACJ,YAAMI,CAAN;AAAQ,GAA7B;AAA8BH,aAAU,UAASG,CAAT,EAAW;AAACH,gBAAUG,CAAV;AAAY;AAAhE,CAA1B,EAA4F,CAA5F;AAA+F,IAAIC,gBAAJ;AAAA,IAAYC,YAAZ;AAAA,IAAgBC,gBAAhB;AAAwBL,OAAOC,UAAP,CAAkB,cAAlB,EAAiC;AAACE,WAAQ,UAASD,CAAT,EAAW;AAACC,cAAQD,CAAR;AAAU,GAA/B;AAAgCE,OAAI,UAASF,CAAT,EAAW;AAACE,UAAIF,CAAJ;AAAM,GAAtD;AAAuDG,WAAQ,UAASH,CAAT,EAAW;AAACG,cAAQH,CAAR;AAAU;AAArF,CAAjC,EAAwH,CAAxH;AAA2H,IAAII,mBAAJ;AAAeN,OAAOC,UAAP,CAAkB,2BAAlB,EAA8C;AAACK,cAAW,UAASJ,CAAT,EAAW;AAACI,iBAAWJ,CAAX;AAAa;AAArC,CAA9C,EAAqF,CAArF;AAAwF,IAAIK,kBAAJ;AAAcP,OAAOC,UAAP,CAAkB,kCAAlB,EAAqD;AAACM,aAAU,UAASL,CAAT,EAAW;AAACK,gBAAUL,CAAV;AAAY;AAAnC,CAArD,EAA0F,CAA1F;AAA6F,IAAIM,gBAAJ;AAAYR,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACO,WAAQ,UAASN,CAAT,EAAW;AAACM,cAAQN,CAAR;AAAU;AAA/B,CAAlC,EAAmE,CAAnE;;IAM9dO,gB;;;;;;;;6BACJC,M;sBAAS;AAAA,UACCC,cADD,GACoB,KAAKC,KADzB,CACCD,cADD;;AAGP,UAAIA,eAAeE,OAAnB,EAA4B;AAC1B,eAAO,IAAP;AACD;;AAED,UAAMC,0CACD,KAAKF,KADJ;AAEJG,mBAAWJ,eAAeK,6BAFtB;AAGJC,wBAAgBV,UAAUW,eAAV;AAHZ,QAAN;AAMA,aAAO,oBAAC,OAAD,EAAaJ,YAAb,CAAP;AACD;;;;;;EAf4BhB,MAAMqB,S;;AAkBrCV,iBAAiBW,SAAjB,GAA6B;AAC3BC,WAAStB,UAAUuB,MADQ;AAE3BX,kBAAgBZ,UAAUuB;AAFC,CAA7B;AAxBAtB,OAAOuB,MAAP,CAAc,SAAd,EAAwBC,QAAQC,OAAR,GA6BTtB,QACbE,QACED,GADF,mBAsBE;AACEsB,QAAM,gBADR;AAEEC,WAAS;AAAA,QAAGN,OAAH,QAAGA,OAAH;AAAA,WAAkB;AACzBO,iBAAW;AACTP,wBADS;AAETQ,eAAOC,SAASxB,WAAWyB,aAAX,CAAyB,OAAzB,CAAT,EAA4C,EAA5C,KAAmD;AAFjD;AADc,KAAlB;AAAA;AAFX,CAtBF,CADa,EAiCbtB,gBAjCa,CA7Bf","file":"/imports/react-ui/segments/containers/Preview.js.map","sourcesContent":["import React, { PropTypes } from 'react';\nimport { compose, gql, graphql } from 'react-apollo';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Customers } from '/imports/api/customers/customers';\nimport { Preview } from '../components';\n\nclass PreviewContainer extends React.Component {\n  render() {\n    const { customersQuery } = this.props;\n\n    if (customersQuery.loading) {\n      return null;\n    }\n\n    const updatedProps = {\n      ...this.props,\n      customers: customersQuery.customerListForSegmentPreview,\n      customerFields: Customers.getPublicFields(),\n    };\n\n    return <Preview {...updatedProps} />;\n  }\n}\n\nPreviewContainer.propTypes = {\n  segment: PropTypes.object,\n  customersQuery: PropTypes.object,\n};\n\nexport default compose(\n  graphql(\n    gql`\n      query customerListForSegmentPreview($segment: JSON, $limit: Int) {\n        customerListForSegmentPreview(segment: $segment, limit: $limit) {\n          _id\n          name\n          email\n          phone\n          isUser\n          integrationId\n          createdAt\n          messengerData\n          twitterData\n          facebookData\n          tagIds\n          getTags {\n            _id\n            name\n          }\n        }\n      }\n    `,\n    {\n      name: 'customersQuery',\n      options: ({ segment }) => ({\n        variables: {\n          segment,\n          limit: parseInt(FlowRouter.getQueryParam('limit'), 10) || 20,\n        },\n      }),\n    },\n  ),\n)(PreviewContainer);\n"]},"hash":"718eae23c94a3c45be4d77a6cbfa4c3c0b62f488"}
