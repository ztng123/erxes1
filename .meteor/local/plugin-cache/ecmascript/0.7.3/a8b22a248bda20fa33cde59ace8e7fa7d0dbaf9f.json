{"metadata":{"usedHelpers":["objectWithoutProperties","inherits","possibleConstructorReturn","classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"draft-js-mention-plugin","imported":["default","defaultSuggestionsFilter"],"specifiers":[{"kind":"named","imported":"default","local":"createMentionPlugin"},{"kind":"named","imported":"defaultSuggestionsFilter","local":"defaultSuggestionsFilter"}]},{"source":"draft-js","imported":["EditorState","ContentState","getDefaultKeyBinding"],"specifiers":[{"kind":"named","imported":"EditorState","local":"EditorState"},{"kind":"named","imported":"ContentState","local":"ContentState"},{"kind":"named","imported":"getDefaultKeyBinding","local":"getDefaultKeyBinding"}]},{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"meteor/underscore","imported":["_"],"specifiers":[{"kind":"named","imported":"_","local":"_"}]},{"source":"immutable","imported":["fromJS"],"specifiers":[{"kind":"named","imported":"fromJS","local":"fromJS"}]},{"source":"/imports/react-ui/common/Editor","imported":["ErxesEditor","toHTML","createStateFromHTML"],"specifiers":[{"kind":"named","imported":"ErxesEditor","local":"ErxesEditor"},{"kind":"named","imported":"toHTML","local":"toHTML"},{"kind":"named","imported":"createStateFromHTML","local":"createStateFromHTML"}]}],"exports":{"exported":["Editor"],"specifiers":[{"kind":"local","local":"Editor","exported":"default"}]}}},"options":{"filename":"/imports/react-ui/inbox/components/details/Editor.js","filenameRelative":"/imports/react-ui/inbox/components/details/Editor.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/inbox/components/details/Editor.js.map","sourceFileName":"/imports/react-ui/inbox/components/details/Editor.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Editor"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _objectWithoutProperties2 = require(\"babel-runtime/helpers/objectWithoutProperties\");\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  \"default\": function () {\n    return Editor;\n  }\n});\nvar createMentionPlugin = void 0,\n    defaultSuggestionsFilter = void 0;\nmodule.importSync(\"draft-js-mention-plugin\", {\n  \"default\": function (v) {\n    createMentionPlugin = v;\n  },\n  defaultSuggestionsFilter: function (v) {\n    defaultSuggestionsFilter = v;\n  }\n}, 0);\nvar EditorState = void 0,\n    ContentState = void 0,\n    getDefaultKeyBinding = void 0;\nmodule.importSync(\"draft-js\", {\n  EditorState: function (v) {\n    EditorState = v;\n  },\n  ContentState: function (v) {\n    ContentState = v;\n  },\n  getDefaultKeyBinding: function (v) {\n    getDefaultKeyBinding = v;\n  }\n}, 1);\nvar React = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 2);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 3);\n\nvar _ = void 0;\n\nmodule.importSync(\"meteor/underscore\", {\n  _: function (v) {\n    _ = v;\n  }\n}, 4);\nvar fromJS = void 0;\nmodule.importSync(\"immutable\", {\n  fromJS: function (v) {\n    fromJS = v;\n  }\n}, 5);\nvar ErxesEditor = void 0,\n    toHTML = void 0,\n    createStateFromHTML = void 0;\nmodule.importSync(\"/imports/react-ui/common/Editor\", {\n  ErxesEditor: function (v) {\n    ErxesEditor = v;\n  },\n  toHTML: function (v) {\n    toHTML = v;\n  },\n  createStateFromHTML: function (v) {\n    createStateFromHTML = v;\n  }\n}, 6);\n\nvar MentionEntry = function (props) {\n  var mention = props.mention,\n      theme = props.theme,\n      searchValue = props.searchValue,\n      parentProps = (0, _objectWithoutProperties3.default)(props, [\"mention\", \"theme\", \"searchValue\"]); // eslint-disable-line\n\n  return React.createElement(\n    \"div\",\n    parentProps,\n    React.createElement(\n      \"div\",\n      {\n        className: \"mentionSuggestionsEntryContainer\"\n      },\n      React.createElement(\n        \"div\",\n        {\n          className: \"mentionSuggestionsEntryContainerLeft\"\n        },\n        React.createElement(\"img\", {\n          src: mention.get('avatar'),\n          className: \"mentionSuggestionsEntryAvatar\",\n          role: \"presentation\"\n        })\n      ),\n      React.createElement(\n        \"div\",\n        {\n          className: \"mentionSuggestionsEntryContainerRight\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"mentionSuggestionsEntryText\"\n          },\n          mention.get('name')\n        ),\n        React.createElement(\n          \"div\",\n          {\n            className: \"mentionSuggestionsEntryTitle\"\n          },\n          mention.get('title')\n        )\n      )\n    )\n  );\n};\n\nvar extractEntries = function (mention) {\n  var entries = mention._root.entries;\n\n  var keys = _.map(entries, function (entry) {\n    return entry[0];\n  });\n\n  var values = _.map(entries, function (entry) {\n    return entry[1];\n  });\n\n  return _.object(keys, values);\n};\n\nvar mentionPlugin = createMentionPlugin({\n  mentionPrefix: '@'\n});\nvar MentionSuggestions = mentionPlugin.MentionSuggestions;\nvar plugins = [mentionPlugin];\n\nvar Editor = function (_Component) {\n  (0, _inherits3.default)(Editor, _Component);\n\n  function Editor(props) {\n    (0, _classCallCheck3.default)(this, Editor);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.state = {\n      editorState: EditorState.createEmpty(),\n      collectedMentions: [],\n      suggestions: _this.props.mentions\n    };\n    _this.onChange = _this.onChange.bind(_this);\n    _this.keyBindingFn = _this.keyBindingFn.bind(_this);\n    _this.onSearchChange = _this.onSearchChange.bind(_this);\n    _this.onAddMention = _this.onAddMention.bind(_this);\n    _this.getContent = _this.getContent.bind(_this);\n    return _this;\n  }\n\n  Editor.prototype.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps) {\n      if (nextProps.responseTemplate !== this.props.responseTemplate) {\n        var editorState = createStateFromHTML(this.state.editorState, nextProps.responseTemplate); // calling onChange, because draftjs's onChange is not trigerring after\n        // this setState\n\n        this.props.onChange(this.getContent(editorState)); // set editor state from response template\n\n        this.setState({\n          editorState: editorState\n        });\n      }\n    }\n\n    return componentWillReceiveProps;\n  }();\n\n  Editor.prototype.onChange = function () {\n    function onChange(editorState) {\n      this.setState({\n        editorState: editorState\n      });\n      this.props.onChange(this.getContent(editorState));\n    }\n\n    return onChange;\n  }();\n\n  Editor.prototype.onSearchChange = function () {\n    function onSearchChange(_ref) {\n      var value = _ref.value;\n      this.setState({\n        suggestions: defaultSuggestionsFilter(value, this.props.mentions)\n      });\n    }\n\n    return onSearchChange;\n  }();\n\n  Editor.prototype.onAddMention = function () {\n    function onAddMention(object) {\n      var mention = extractEntries(object);\n      var collectedMentions = this.state.collectedMentions;\n      collectedMentions.push(mention);\n      this.setState({\n        collectedMentions: collectedMentions\n      });\n    }\n\n    return onAddMention;\n  }();\n\n  Editor.prototype.getContent = function () {\n    function getContent(editorState) {\n      var content = toHTML(editorState); // some mentioned people may have been deleted\n\n      var finalMentions = []; // replace mention content\n\n      _.each(this.state.collectedMentions, function (m) {\n        var toFind = \"@\" + m.name;\n        var re = new RegExp(toFind, 'g'); // collect only not removed mentions\n\n        var findResult = content.match(re);\n\n        if (findResult && findResult.length > 0) {\n          finalMentions.push(m);\n        }\n\n        content = content.replace(re, \"<span data-user-id='\" + m._id + \"' class='mentioned-person'>@\" + m.name + \"</span>\");\n      }); // send mentioned user to parent\n\n\n      this.props.onAddMention(_.pluck(finalMentions, '_id'));\n      return content;\n    }\n\n    return getContent;\n  }();\n\n  Editor.prototype.keyBindingFn = function () {\n    function keyBindingFn(e) {\n      // handle shift + enter in editor\n      if (e.key === 'Enter' && (e.metaKey || e.ctrlKey)) {\n        // call parent's method to save content\n        this.props.onShifEnter(); // clear content\n\n        var state = this.state.editorState;\n        var editorState = EditorState.push(state, ContentState.createFromText(''));\n        this.setState({\n          editorState: editorState\n        });\n        return null;\n      }\n\n      return getDefaultKeyBinding(e);\n    }\n\n    return keyBindingFn;\n  }();\n\n  Editor.prototype.render = function () {\n    function render() {\n      var pluginContent = React.createElement(MentionSuggestions, {\n        onSearchChange: this.onSearchChange,\n        suggestions: this.props.showMentions ? this.state.suggestions : fromJS([]),\n        entryComponent: MentionEntry,\n        onAddMention: this.onAddMention,\n        onChange: this.onChange\n      });\n      var props = (0, _extends3.default)({}, this.props, {\n        editorState: this.state.editorState,\n        onChange: this.onChange,\n        keyBindingFn: this.keyBindingFn,\n        plugins: plugins,\n        pluginContent: pluginContent\n      });\n      return React.createElement(ErxesEditor, props);\n    }\n\n    return render;\n  }();\n\n  return Editor;\n}(Component);\n\nEditor.propTypes = {\n  onChange: PropTypes.func,\n  onAddMention: PropTypes.func,\n  onShifEnter: PropTypes.func,\n  showMentions: PropTypes.bool,\n  responseTemplate: PropTypes.string,\n  mentions: PropTypes.object\n};","map":{"version":3,"sources":["/imports/react-ui/inbox/components/details/Editor.js"],"names":["module","export","Editor","createMentionPlugin","defaultSuggestionsFilter","importSync","v","EditorState","ContentState","getDefaultKeyBinding","React","Component","PropTypes","_","fromJS","ErxesEditor","toHTML","createStateFromHTML","MentionEntry","mention","props","theme","searchValue","parentProps","get","extractEntries","entries","_root","keys","map","entry","values","object","mentionPlugin","mentionPrefix","MentionSuggestions","plugins","state","editorState","createEmpty","collectedMentions","suggestions","mentions","onChange","bind","keyBindingFn","onSearchChange","onAddMention","getContent","componentWillReceiveProps","nextProps","responseTemplate","setState","value","push","content","finalMentions","each","toFind","m","name","re","RegExp","findResult","match","length","replace","_id","pluck","e","key","metaKey","ctrlKey","onShifEnter","createFromText","render","pluginContent","showMentions","propTypes","func","bool","string"],"mappings":"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","file":"/imports/react-ui/inbox/components/details/Editor.js.map","sourcesContent":["import createMentionPlugin, { defaultSuggestionsFilter } from 'draft-js-mention-plugin';\nimport { EditorState, ContentState, getDefaultKeyBinding } from 'draft-js';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { _ } from 'meteor/underscore';\nimport { fromJS } from 'immutable';\nimport { ErxesEditor, toHTML, createStateFromHTML } from '/imports/react-ui/common/Editor';\n\nconst MentionEntry = props => {\n  const { mention, theme, searchValue, ...parentProps } = props; // eslint-disable-line\n\n  return (\n    <div {...parentProps}>\n      <div className=\"mentionSuggestionsEntryContainer\">\n        <div className=\"mentionSuggestionsEntryContainerLeft\">\n          <img\n            src={mention.get('avatar')}\n            className=\"mentionSuggestionsEntryAvatar\"\n            role=\"presentation\"\n          />\n        </div>\n\n        <div className=\"mentionSuggestionsEntryContainerRight\">\n          <div className=\"mentionSuggestionsEntryText\">\n            {mention.get('name')}\n          </div>\n\n          <div className=\"mentionSuggestionsEntryTitle\">\n            {mention.get('title')}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst extractEntries = mention => {\n  const entries = mention._root.entries;\n  const keys = _.map(entries, entry => entry[0]);\n  const values = _.map(entries, entry => entry[1]);\n\n  return _.object(keys, values);\n};\n\nconst mentionPlugin = createMentionPlugin({\n  mentionPrefix: '@',\n});\n\nconst { MentionSuggestions } = mentionPlugin;\nconst plugins = [mentionPlugin];\n\nexport default class Editor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      collectedMentions: [],\n      suggestions: this.props.mentions,\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.keyBindingFn = this.keyBindingFn.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onAddMention = this.onAddMention.bind(this);\n    this.getContent = this.getContent.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.responseTemplate !== this.props.responseTemplate) {\n      const editorState = createStateFromHTML(this.state.editorState, nextProps.responseTemplate);\n\n      // calling onChange, because draftjs's onChange is not trigerring after\n      // this setState\n      this.props.onChange(this.getContent(editorState));\n\n      // set editor state from response template\n      this.setState({ editorState });\n    }\n  }\n\n  onChange(editorState) {\n    this.setState({ editorState });\n\n    this.props.onChange(this.getContent(editorState));\n  }\n\n  onSearchChange({ value }) {\n    this.setState({\n      suggestions: defaultSuggestionsFilter(value, this.props.mentions),\n    });\n  }\n\n  onAddMention(object) {\n    const mention = extractEntries(object);\n\n    const collectedMentions = this.state.collectedMentions;\n\n    collectedMentions.push(mention);\n\n    this.setState({ collectedMentions });\n  }\n\n  getContent(editorState) {\n    let content = toHTML(editorState);\n\n    // some mentioned people may have been deleted\n    const finalMentions = [];\n\n    // replace mention content\n    _.each(this.state.collectedMentions, m => {\n      const toFind = `@${m.name}`;\n      const re = new RegExp(toFind, 'g');\n\n      // collect only not removed mentions\n      const findResult = content.match(re);\n\n      if (findResult && findResult.length > 0) {\n        finalMentions.push(m);\n      }\n\n      content = content.replace(\n        re,\n        `<span data-user-id='${m._id}' class='mentioned-person'>@${m.name}</span>`,\n      );\n    });\n\n    // send mentioned user to parent\n    this.props.onAddMention(_.pluck(finalMentions, '_id'));\n\n    return content;\n  }\n\n  keyBindingFn(e) {\n    // handle shift + enter in editor\n    if (e.key === 'Enter' && (e.metaKey || e.ctrlKey)) {\n      // call parent's method to save content\n      this.props.onShifEnter();\n\n      // clear content\n      const state = this.state.editorState;\n      const editorState = EditorState.push(state, ContentState.createFromText(''));\n      this.setState({ editorState });\n\n      return null;\n    }\n\n    return getDefaultKeyBinding(e);\n  }\n\n  render() {\n    const pluginContent = (\n      <MentionSuggestions\n        onSearchChange={this.onSearchChange}\n        suggestions={this.props.showMentions ? this.state.suggestions : fromJS([])}\n        entryComponent={MentionEntry}\n        onAddMention={this.onAddMention}\n        onChange={this.onChange}\n      />\n    );\n\n    const props = {\n      ...this.props,\n      editorState: this.state.editorState,\n      onChange: this.onChange,\n      keyBindingFn: this.keyBindingFn,\n      plugins,\n      pluginContent,\n    };\n\n    return <ErxesEditor {...props} />;\n  }\n}\n\nEditor.propTypes = {\n  onChange: PropTypes.func,\n  onAddMention: PropTypes.func,\n  onShifEnter: PropTypes.func,\n  showMentions: PropTypes.bool,\n  responseTemplate: PropTypes.string,\n  mentions: PropTypes.object, // eslint-disable-line\n};\n"]},"hash":"a8b22a248bda20fa33cde59ace8e7fa7d0dbaf9f"}
