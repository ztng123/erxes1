{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"meteor/kadira:flow-router","imported":["FlowRouter"],"specifiers":[{"kind":"named","imported":"FlowRouter","local":"FlowRouter"}]},{"source":"react-bootstrap","imported":["Button","ButtonGroup","OverlayTrigger","Popover"],"specifiers":[{"kind":"named","imported":"Button","local":"Button"},{"kind":"named","imported":"ButtonGroup","local":"ButtonGroup"},{"kind":"named","imported":"OverlayTrigger","local":"OverlayTrigger"},{"kind":"named","imported":"Popover","local":"Popover"}]},{"source":"classnames","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"classnames"}]},{"source":"react-color","imported":["ChromePicker"],"specifiers":[{"kind":"named","imported":"ChromePicker","local":"ChromePicker"}]},{"source":"/imports/api/client/uploadHandler","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"uploadHandler"}]},{"source":"/imports/react-ui/layout/components","imported":["Wrapper"],"specifiers":[{"kind":"named","imported":"Wrapper","local":"Wrapper"}]},{"source":"../../Sidebar","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Sidebar"}]},{"source":"./WidgetPreview","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"WidgetPreview"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/settings/integrations/components/MessengerAppearance.js","filenameRelative":"/imports/react-ui/settings/integrations/components/MessengerAppearance.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/settings/integrations/components/MessengerAppearance.js.map","sourceFileName":"/imports/react-ui/settings/integrations/components/MessengerAppearance.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"MessengerAppearance"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar FlowRouter = void 0;\nmodule.importSync(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 2);\nvar Button = void 0,\n    ButtonGroup = void 0,\n    OverlayTrigger = void 0,\n    Popover = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  Button: function (v) {\n    Button = v;\n  },\n  ButtonGroup: function (v) {\n    ButtonGroup = v;\n  },\n  OverlayTrigger: function (v) {\n    OverlayTrigger = v;\n  },\n  Popover: function (v) {\n    Popover = v;\n  }\n}, 3);\nvar classnames = void 0;\nmodule.importSync(\"classnames\", {\n  \"default\": function (v) {\n    classnames = v;\n  }\n}, 4);\nvar ChromePicker = void 0;\nmodule.importSync(\"react-color\", {\n  ChromePicker: function (v) {\n    ChromePicker = v;\n  }\n}, 5);\nvar uploadHandler = void 0;\nmodule.importSync(\"/imports/api/client/uploadHandler\", {\n  \"default\": function (v) {\n    uploadHandler = v;\n  }\n}, 6);\nvar Wrapper = void 0;\nmodule.importSync(\"/imports/react-ui/layout/components\", {\n  Wrapper: function (v) {\n    Wrapper = v;\n  }\n}, 7);\nvar Sidebar = void 0;\nmodule.importSync(\"../../Sidebar\", {\n  \"default\": function (v) {\n    Sidebar = v;\n  }\n}, 8);\nvar WidgetPreview = void 0;\nmodule.importSync(\"./WidgetPreview\", {\n  \"default\": function (v) {\n    WidgetPreview = v;\n  }\n}, 9);\n\nvar Appearance = function (_Component) {\n  (0, _inherits3.default)(Appearance, _Component);\n\n  function Appearance(props) {\n    (0, _classCallCheck3.default)(this, Appearance);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.state = {\n      color: props.prevOptions.color || '#452679',\n      wallpaper: props.prevOptions.wallpaper || '1',\n      logo: props.prevOptions.logo,\n      logoPreviewStyle: {},\n      logoPreviewUrl: props.prevOptions.logo || '/images/widget-logo.png'\n    };\n    _this.save = _this.save.bind(_this);\n    _this.onColorChange = _this.onColorChange.bind(_this);\n    _this.onWallpaperChange = _this.onWallpaperChange.bind(_this);\n    _this.handleLogoChange = _this.handleLogoChange.bind(_this);\n    return _this;\n  }\n\n  Appearance.prototype.onColorChange = function () {\n    function onColorChange(e) {\n      this.setState({\n        color: e.hex\n      });\n    }\n\n    return onColorChange;\n  }();\n\n  Appearance.prototype.onWallpaperChange = function () {\n    function onWallpaperChange(value) {\n      this.setState({\n        wallpaper: value\n      });\n    }\n\n    return onWallpaperChange;\n  }();\n\n  Appearance.prototype.handleLogoChange = function () {\n    function handleLogoChange(e) {\n      var _this2 = this;\n\n      var imageFile = e.target.files[0];\n      uploadHandler({\n        file: imageFile,\n        beforeUpload: function () {\n          _this2.setState({\n            logoPreviewStyle: {\n              opacity: '0.2'\n            }\n          });\n        },\n        afterUpload: function (_ref) {\n          var response = _ref.response;\n\n          _this2.setState({\n            logo: response.url,\n            logoPreviewStyle: {\n              opacity: '1'\n            }\n          });\n        },\n        afterRead: function (_ref2) {\n          var result = _ref2.result;\n\n          _this2.setState({\n            logoPreviewUrl: result\n          });\n        }\n      });\n    }\n\n    return handleLogoChange;\n  }();\n\n  Appearance.prototype.save = function () {\n    function save(e) {\n      e.preventDefault();\n      this.props.save({\n        color: this.state.color,\n        wallpaper: this.state.wallpaper,\n        logo: this.state.logo\n      });\n    }\n\n    return save;\n  }();\n\n  Appearance.prototype.renderWallpaperSelect = function () {\n    function renderWallpaperSelect(value) {\n      var _this3 = this;\n\n      var isSelected = this.state.wallpaper === value;\n      var selectorClass = classnames('background-selector', {\n        selected: isSelected\n      });\n      return React.createElement(\n        \"a\",\n        {\n          href: \"\",\n          className: selectorClass,\n          onClick: function () {\n            return _this3.onWallpaperChange(value);\n          },\n          style: {\n            borderColor: isSelected ? this.state.color : 'transparent'\n          }\n        },\n        React.createElement(\"div\", {\n          className: \"background-\" + value\n        })\n      );\n    }\n\n    return renderWallpaperSelect;\n  }();\n\n  Appearance.prototype.render = function () {\n    function render() {\n      var popoverTop = React.createElement(\n        Popover,\n        {\n          id: \"color-picker\"\n        },\n        React.createElement(ChromePicker, {\n          color: this.state.color,\n          onChange: this.onColorChange\n        })\n      );\n      var _state = this.state,\n          logo = _state.logo,\n          logoPreviewStyle = _state.logoPreviewStyle,\n          logoPreviewUrl = _state.logoPreviewUrl;\n      var content = React.createElement(\n        \"div\",\n        {\n          className: \"margined\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"widget-appearance type-box\"\n          },\n          React.createElement(\n            \"div\",\n            null,\n            React.createElement(WidgetPreview, {\n              color: this.state.color,\n              wallpaper: this.state.wallpaper,\n              user: this.props.user\n            }),\n            React.createElement(\"div\", {\n              className: \"logo-container\",\n              style: Object.assign({\n                backgroundColor: this.state.color,\n                backgroundImage: \"url(\" + logoPreviewUrl + \")\"\n              }, logoPreviewStyle)\n            })\n          ),\n          React.createElement(\n            \"div\",\n            {\n              className: \"widget-settings\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"box\"\n              },\n              React.createElement(\n                \"h2\",\n                null,\n                \"Choose a custom color\"\n              ),\n              React.createElement(\n                OverlayTrigger,\n                {\n                  trigger: \"click\",\n                  rootClose: true,\n                  placement: \"bottom\",\n                  overlay: popoverTop\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"color-pick\"\n                  },\n                  React.createElement(\"div\", {\n                    style: {\n                      backgroundColor: this.state.color\n                    }\n                  })\n                )\n              )\n            ),\n            React.createElement(\n              \"div\",\n              {\n                className: \"box\"\n              },\n              React.createElement(\n                \"h2\",\n                null,\n                \"Choose a wallpaper\"\n              ),\n              React.createElement(\n                \"div\",\n                {\n                  className: \"widget-backgrounds\"\n                },\n                this.renderWallpaperSelect('1'),\n                this.renderWallpaperSelect('2'),\n                this.renderWallpaperSelect('3'),\n                this.renderWallpaperSelect('4'),\n                this.renderWallpaperSelect('5')\n              )\n            ),\n            React.createElement(\n              \"div\",\n              {\n                className: \"box\"\n              },\n              React.createElement(\n                \"h2\",\n                null,\n                \"Choose a logo\"\n              ),\n              React.createElement(\"input\", {\n                type: \"file\",\n                onChange: this.handleLogoChange\n              }),\n              React.createElement(\"input\", {\n                type: \"hidden\",\n                id: \"logo\",\n                value: logo\n              })\n            )\n          )\n        )\n      );\n      var breadcrumb = [{\n        title: 'Settings',\n        link: '/settings/integrations'\n      }, {\n        title: 'Integrations'\n      }];\n      var actionBar = React.createElement(Wrapper.ActionBar, {\n        left: React.createElement(\n          ButtonGroup,\n          null,\n          React.createElement(\n            Button,\n            {\n              bsStyle: \"link\",\n              onClick: this.save\n            },\n            React.createElement(\"i\", {\n              className: \"ion-checkmark-circled\"\n            }),\n            \" Save\"\n          ),\n          React.createElement(\n            Button,\n            {\n              bsStyle: \"link\",\n              href: FlowRouter.path('/settings/integrations')\n            },\n            React.createElement(\"i\", {\n              className: \"ion-close-circled\"\n            }),\n            \" Cancel\"\n          )\n        )\n      });\n      return React.createElement(\n        \"div\",\n        null,\n        React.createElement(Wrapper, {\n          header: React.createElement(Wrapper.Header, {\n            breadcrumb: breadcrumb\n          }),\n          leftSidebar: React.createElement(Sidebar, null),\n          actionBar: actionBar,\n          content: content\n        })\n      );\n    }\n\n    return render;\n  }();\n\n  return Appearance;\n}(Component);\n\nAppearance.propTypes = {\n  prevOptions: PropTypes.object.isRequired,\n  // eslint-disable-line\n  user: PropTypes.object.isRequired,\n  // eslint-disable-line\n  save: PropTypes.func.isRequired\n};\nmodule.export(\"default\", exports.default = Appearance);","map":{"version":3,"sources":["/imports/react-ui/settings/integrations/components/MessengerAppearance.js"],"names":["React","Component","module","importSync","v","PropTypes","FlowRouter","Button","ButtonGroup","OverlayTrigger","Popover","classnames","ChromePicker","uploadHandler","Wrapper","Sidebar","WidgetPreview","Appearance","props","state","color","prevOptions","wallpaper","logo","logoPreviewStyle","logoPreviewUrl","save","bind","onColorChange","onWallpaperChange","handleLogoChange","e","setState","hex","value","imageFile","target","files","file","beforeUpload","opacity","afterUpload","response","url","afterRead","result","preventDefault","renderWallpaperSelect","isSelected","selectorClass","selected","borderColor","render","popoverTop","content","user","Object","assign","backgroundColor","backgroundImage","breadcrumb","title","link","actionBar","path","propTypes","object","isRequired","func","export","exports","default"],"mappings":"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","file":"/imports/react-ui/settings/integrations/components/MessengerAppearance.js.map","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Button, ButtonGroup, OverlayTrigger, Popover } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport { ChromePicker } from 'react-color';\nimport uploadHandler from '/imports/api/client/uploadHandler';\nimport { Wrapper } from '/imports/react-ui/layout/components';\nimport Sidebar from '../../Sidebar';\nimport WidgetPreview from './WidgetPreview';\n\nclass Appearance extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      color: props.prevOptions.color || '#452679',\n      wallpaper: props.prevOptions.wallpaper || '1',\n      logo: props.prevOptions.logo,\n      logoPreviewStyle: {},\n      logoPreviewUrl: props.prevOptions.logo || '/images/widget-logo.png',\n    };\n\n    this.save = this.save.bind(this);\n    this.onColorChange = this.onColorChange.bind(this);\n    this.onWallpaperChange = this.onWallpaperChange.bind(this);\n    this.handleLogoChange = this.handleLogoChange.bind(this);\n  }\n\n  onColorChange(e) {\n    this.setState({ color: e.hex });\n  }\n\n  onWallpaperChange(value) {\n    this.setState({ wallpaper: value });\n  }\n\n  handleLogoChange(e) {\n    const imageFile = e.target.files[0];\n\n    uploadHandler({\n      file: imageFile,\n\n      beforeUpload: () => {\n        this.setState({ logoPreviewStyle: { opacity: '0.2' } });\n      },\n\n      afterUpload: ({ response }) => {\n        this.setState({\n          logo: response.url,\n          logoPreviewStyle: { opacity: '1' },\n        });\n      },\n\n      afterRead: ({ result }) => {\n        this.setState({ logoPreviewUrl: result });\n      },\n    });\n  }\n\n  save(e) {\n    e.preventDefault();\n\n    this.props.save({\n      color: this.state.color,\n      wallpaper: this.state.wallpaper,\n      logo: this.state.logo,\n    });\n  }\n\n  renderWallpaperSelect(value) {\n    const isSelected = this.state.wallpaper === value;\n    const selectorClass = classnames('background-selector', {\n      selected: isSelected,\n    });\n\n    return (\n      <a\n        href=\"\"\n        className={selectorClass}\n        onClick={() => this.onWallpaperChange(value)}\n        style={{ borderColor: isSelected ? this.state.color : 'transparent' }}\n      >\n        <div className={`background-${value}`} />\n      </a>\n    );\n  }\n\n  render() {\n    const popoverTop = (\n      <Popover id=\"color-picker\">\n        <ChromePicker color={this.state.color} onChange={this.onColorChange} />\n      </Popover>\n    );\n\n    const { logo, logoPreviewStyle, logoPreviewUrl } = this.state;\n\n    const content = (\n      <div className=\"margined\">\n        <div className=\"widget-appearance type-box\">\n          <div>\n            <WidgetPreview\n              color={this.state.color}\n              wallpaper={this.state.wallpaper}\n              user={this.props.user}\n            />\n            <div\n              className=\"logo-container\"\n              style={Object.assign(\n                {\n                  backgroundColor: this.state.color,\n                  backgroundImage: `url(${logoPreviewUrl})`,\n                },\n                logoPreviewStyle,\n              )}\n            />\n          </div>\n\n          <div className=\"widget-settings\">\n            <div className=\"box\">\n              <h2>Choose a custom color</h2>\n              <OverlayTrigger trigger=\"click\" rootClose placement=\"bottom\" overlay={popoverTop}>\n                <div className=\"color-pick\">\n                  <div style={{ backgroundColor: this.state.color }} />\n                </div>\n              </OverlayTrigger>\n            </div>\n\n            <div className=\"box\">\n              <h2>Choose a wallpaper</h2>\n\n              <div className=\"widget-backgrounds\">\n                {this.renderWallpaperSelect('1')}\n                {this.renderWallpaperSelect('2')}\n                {this.renderWallpaperSelect('3')}\n                {this.renderWallpaperSelect('4')}\n                {this.renderWallpaperSelect('5')}\n              </div>\n            </div>\n\n            <div className=\"box\">\n              <h2>Choose a logo</h2>\n\n              <input type=\"file\" onChange={this.handleLogoChange} />\n              <input type=\"hidden\" id=\"logo\" value={logo} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n    const breadcrumb = [\n      { title: 'Settings', link: '/settings/integrations' },\n      { title: 'Integrations' },\n    ];\n\n    const actionBar = (\n      <Wrapper.ActionBar\n        left={\n          <ButtonGroup>\n            <Button bsStyle=\"link\" onClick={this.save}>\n              <i className=\"ion-checkmark-circled\" /> Save\n            </Button>\n\n            <Button bsStyle=\"link\" href={FlowRouter.path('/settings/integrations')}>\n              <i className=\"ion-close-circled\" /> Cancel\n            </Button>\n          </ButtonGroup>\n        }\n      />\n    );\n\n    return (\n      <div>\n        <Wrapper\n          header={<Wrapper.Header breadcrumb={breadcrumb} />}\n          leftSidebar={<Sidebar />}\n          actionBar={actionBar}\n          content={content}\n        />\n      </div>\n    );\n  }\n}\n\nAppearance.propTypes = {\n  prevOptions: PropTypes.object.isRequired, // eslint-disable-line\n  user: PropTypes.object.isRequired, // eslint-disable-line\n  save: PropTypes.func.isRequired,\n};\n\nexport default Appearance;\n"]},"hash":"a249ff83ae6857c811e0b64f55b46b04cf9fef97"}
