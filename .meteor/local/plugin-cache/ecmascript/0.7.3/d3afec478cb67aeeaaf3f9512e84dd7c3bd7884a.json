{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","PropTypes","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"PropTypes","local":"PropTypes"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"meteor/underscore","imported":["_"],"specifiers":[{"kind":"named","imported":"_","local":"_"}]},{"source":"/imports/react-ui/common","imported":["Spinner"],"specifiers":[{"kind":"named","imported":"Spinner","local":"Spinner"}]},{"source":"./Message","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Message"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/inbox/components/conversation/Conversation.js","filenameRelative":"/imports/react-ui/inbox/components/conversation/Conversation.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/inbox/components/conversation/Conversation.js.map","sourceFileName":"/imports/react-ui/inbox/components/conversation/Conversation.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Conversation"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    PropTypes = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\n\nvar _ = void 0;\n\nmodule.importSync(\"meteor/underscore\", {\n  _: function (v) {\n    _ = v;\n  }\n}, 1);\nvar Spinner = void 0;\nmodule.importSync(\"/imports/react-ui/common\", {\n  Spinner: function (v) {\n    Spinner = v;\n  }\n}, 2);\nvar Message = void 0;\nmodule.importSync(\"./Message\", {\n  \"default\": function (v) {\n    Message = v;\n  }\n}, 3);\nvar propTypes = {\n  messages: PropTypes.array.isRequired,\n  attachmentPreview: PropTypes.object\n};\n\nvar Conversation = function (_Component) {\n  (0, _inherits3.default)(Conversation, _Component);\n\n  function Conversation(props) {\n    (0, _classCallCheck3.default)(this, Conversation);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.renderPreview = _this.renderPreview.bind(_this);\n    return _this;\n  }\n\n  Conversation.prototype.renderPreview = function () {\n    function renderPreview() {\n      var attachmentPreview = this.props.attachmentPreview;\n\n      if (attachmentPreview && attachmentPreview.data) {\n        return React.createElement(\n          \"div\",\n          {\n            className: \"message staff attach-preview\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"body\"\n            },\n            attachmentPreview.type.startsWith('image') ? React.createElement(\"img\", {\n              role: \"presentation\",\n              src: attachmentPreview.data\n            }) : React.createElement(\"div\", {\n              className: \"attach-file\"\n            }),\n            React.createElement(Spinner, null)\n          )\n        );\n      }\n\n      return null;\n    }\n\n    return renderPreview;\n  }();\n\n  Conversation.prototype.render = function () {\n    function render() {\n      var messages = this.props.messages;\n      var tempId = void 0;\n      var rows = [];\n\n      _.each(messages, function (message) {\n        rows.push(React.createElement(Message, {\n          isSameUser: message.userId ? message.userId === tempId : message.customerId === tempId,\n          message: message,\n          staff: !message.customerId,\n          key: message._id\n        }));\n        tempId = message.userId ? message.userId : message.customerId;\n      });\n\n      return React.createElement(\n        \"div\",\n        {\n          className: \"conversation\"\n        },\n        rows,\n        this.renderPreview()\n      );\n    }\n\n    return render;\n  }();\n\n  return Conversation;\n}(Component);\n\nConversation.propTypes = propTypes;\nmodule.export(\"default\", exports.default = Conversation);","map":{"version":3,"sources":["/imports/react-ui/inbox/components/conversation/Conversation.js"],"names":["React","PropTypes","Component","module","importSync","v","_","Spinner","Message","propTypes","messages","array","isRequired","attachmentPreview","object","Conversation","props","renderPreview","bind","data","type","startsWith","render","tempId","rows","each","push","message","userId","customerId","_id","export","exports","default"],"mappings":";;;;;;;;;;;;;;AAAA,IAAIA,cAAJ;AAAA,IAAUC,kBAAV;AAAA,IAAoBC,kBAApB;AAA8BC,OAAOC,UAAP,CAAkB,OAAlB,EAA0B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACL,YAAMK,CAAN;AAAQ,GAA7B;AAA8BJ,aAAU,UAASI,CAAT,EAAW;AAACJ,gBAAUI,CAAV;AAAY,GAAhE;AAAiEH,aAAU,UAASG,CAAT,EAAW;AAACH,gBAAUG,CAAV;AAAY;AAAnG,CAA1B,EAA+H,CAA/H;;AAAkI,IAAIC,UAAJ;;AAAMH,OAAOC,UAAP,CAAkB,mBAAlB,EAAsC;AAACE,KAAE,UAASD,CAAT,EAAW;AAACC,QAAED,CAAF;AAAI;AAAnB,CAAtC,EAA2D,CAA3D;AAA8D,IAAIE,gBAAJ;AAAYJ,OAAOC,UAAP,CAAkB,0BAAlB,EAA6C;AAACG,WAAQ,UAASF,CAAT,EAAW;AAACE,cAAQF,CAAR;AAAU;AAA/B,CAA7C,EAA8E,CAA9E;AAAiF,IAAIG,gBAAJ;AAAYL,OAAOC,UAAP,CAAkB,WAAlB,EAA8B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACG,cAAQH,CAAR;AAAU;AAA/B,CAA9B,EAA+D,CAA/D;AAK7U,IAAMI,YAAY;AAChBC,YAAUT,UAAUU,KAAV,CAAgBC,UADV;AAEhBC,qBAAmBZ,UAAUa;AAFb,CAAlB;;IAKMC,Y;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA,+DACjB,sBAAMA,KAAN,CADiB;;AAGjB,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,OAArB;AAHiB;AAIlB;;yBAEDD,a;6BAAgB;AAAA,UACNJ,iBADM,GACgB,KAAKG,KADrB,CACNH,iBADM;;AAGd,UAAIA,qBAAqBA,kBAAkBM,IAA3C,EAAiD;AAC/C,eACE;AAAA;AAAA;AAAK,uBAAU;AAAf;AACE;AAAA;AAAA;AAAK,yBAAU;AAAf;AACGN,8BAAkBO,IAAlB,CAAuBC,UAAvB,CAAkC,OAAlC,IACG;AAAK,oBAAK,cAAV;AAAyB,mBAAKR,kBAAkBM;AAAhD,cADH,GAEG;AAAK,yBAAU;AAAf,cAHN;AAIE,gCAAC,OAAD;AAJF;AADF,SADF;AAUD;;AAED,aAAO,IAAP;AACD;;;;;yBAEDG,M;sBAAS;AAAA,UACCZ,QADD,GACc,KAAKM,KADnB,CACCN,QADD;AAEP,UAAIa,eAAJ;AAEA,UAAMC,OAAO,EAAb;;AAEAlB,QAAEmB,IAAF,CAAOf,QAAP,EAAiB,mBAAW;AAC1Bc,aAAKE,IAAL,CACE,oBAAC,OAAD;AACE,sBAAYC,QAAQC,MAAR,GAAiBD,QAAQC,MAAR,KAAmBL,MAApC,GAA6CI,QAAQE,UAAR,KAAuBN,MADlF;AAEE,mBAASI,OAFX;AAGE,iBAAO,CAACA,QAAQE,UAHlB;AAIE,eAAKF,QAAQG;AAJf,UADF;AASAP,iBAASI,QAAQC,MAAR,GAAiBD,QAAQC,MAAzB,GAAkCD,QAAQE,UAAnD;AACD,OAXD;;AAaA,aACE;AAAA;AAAA;AAAK,qBAAU;AAAf;AACGL,YADH;AAEG,aAAKP,aAAL;AAFH,OADF;AAMD;;;;;;EAnDwBf,S;;AAsD3Ba,aAAaN,SAAb,GAAyBA,SAAzB;AAhEAN,OAAO4B,MAAP,CAAc,SAAd,EAAwBC,QAAQC,OAAR,GAkETlB,YAlEf","file":"/imports/react-ui/inbox/components/conversation/Conversation.js.map","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport { _ } from 'meteor/underscore';\nimport { Spinner } from '/imports/react-ui/common';\nimport Message from './Message';\n\nconst propTypes = {\n  messages: PropTypes.array.isRequired,\n  attachmentPreview: PropTypes.object,\n};\n\nclass Conversation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderPreview = this.renderPreview.bind(this);\n  }\n\n  renderPreview() {\n    const { attachmentPreview } = this.props;\n\n    if (attachmentPreview && attachmentPreview.data) {\n      return (\n        <div className=\"message staff attach-preview\">\n          <div className=\"body\">\n            {attachmentPreview.type.startsWith('image')\n              ? <img role=\"presentation\" src={attachmentPreview.data} />\n              : <div className=\"attach-file\" />}\n            <Spinner />\n          </div>\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const { messages } = this.props;\n    let tempId;\n\n    const rows = [];\n\n    _.each(messages, message => {\n      rows.push(\n        <Message\n          isSameUser={message.userId ? message.userId === tempId : message.customerId === tempId}\n          message={message}\n          staff={!message.customerId}\n          key={message._id}\n        />,\n      );\n\n      tempId = message.userId ? message.userId : message.customerId;\n    });\n\n    return (\n      <div className=\"conversation\">\n        {rows}\n        {this.renderPreview()}\n      </div>\n    );\n  }\n}\n\nConversation.propTypes = propTypes;\n\nexport default Conversation;\n"]},"hash":"d3afec478cb67aeeaaf3f9512e84dd7c3bd7884a"}
