{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","PropTypes","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"PropTypes","local":"PropTypes"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-bootstrap","imported":["ButtonGroup","Button","FormControl"],"specifiers":[{"kind":"named","imported":"ButtonGroup","local":"ButtonGroup"},{"kind":"named","imported":"Button","local":"Button"},{"kind":"named","imported":"FormControl","local":"FormControl"}]},{"source":"meteor/kadira:flow-router","imported":["FlowRouter"],"specifiers":[{"kind":"named","imported":"FlowRouter","local":"FlowRouter"}]},{"source":"/imports/react-ui/layout/components","imported":["Wrapper"],"specifiers":[{"kind":"named","imported":"Wrapper","local":"Wrapper"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/engage/components/FormBase.js","filenameRelative":"/imports/react-ui/engage/components/FormBase.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/engage/components/FormBase.js.map","sourceFileName":"/imports/react-ui/engage/components/FormBase.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"FormBase"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    PropTypes = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar ButtonGroup = void 0,\n    Button = void 0,\n    FormControl = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  ButtonGroup: function (v) {\n    ButtonGroup = v;\n  },\n  Button: function (v) {\n    Button = v;\n  },\n  FormControl: function (v) {\n    FormControl = v;\n  }\n}, 1);\nvar FlowRouter = void 0;\nmodule.importSync(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 2);\nvar Wrapper = void 0;\nmodule.importSync(\"/imports/react-ui/layout/components\", {\n  Wrapper: function (v) {\n    Wrapper = v;\n  }\n}, 3);\nvar propTypes = {\n  message: PropTypes.object,\n  save: PropTypes.func.isRequired,\n  users: PropTypes.array\n};\n\nvar FormBase = function (_Component) {\n  (0, _inherits3.default)(FormBase, _Component);\n\n  function FormBase(props) {\n    (0, _classCallCheck3.default)(this, FormBase);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    var message = props.message || {};\n    _this.state = {\n      fromUser: message.fromUserId || ''\n    }; // binds\n\n    _this.generateDoc = _this.generateDoc.bind(_this);\n    _this.save = _this.save.bind(_this);\n    _this.saveAndLive = _this.saveAndLive.bind(_this);\n    _this.saveAndDraft = _this.saveAndDraft.bind(_this);\n    _this.onChangeUser = _this.onChangeUser.bind(_this);\n    return _this;\n  }\n\n  FormBase.prototype.componentDidMount = function () {\n    function componentDidMount() {\n      this.setState({\n        fromUser: document.getElementById('fromUserId').value\n      });\n    }\n\n    return componentDidMount;\n  }();\n\n  FormBase.prototype.getMessage = function () {\n    function getMessage() {\n      return this.props.message || {\n        email: {},\n        messenger: {}\n      };\n    }\n\n    return getMessage;\n  }();\n\n  FormBase.prototype.generateDoc = function () {\n    function generateDoc(e) {\n      e.preventDefault();\n      return {};\n    }\n\n    return generateDoc;\n  }();\n\n  FormBase.prototype.save = function () {\n    function save(e) {\n      var doc = this.generateDoc(e);\n      this.props.save(doc);\n    }\n\n    return save;\n  }();\n\n  FormBase.prototype.saveAndLive = function () {\n    function saveAndLive(e) {\n      var doc = this.generateDoc(e);\n      this.props.save((0, _extends3.default)({\n        isLive: true,\n        isDraft: false\n      }, doc));\n    }\n\n    return saveAndLive;\n  }();\n\n  FormBase.prototype.saveAndDraft = function () {\n    function saveAndDraft(e) {\n      var doc = this.generateDoc(e);\n      this.props.save((0, _extends3.default)({\n        isLive: false,\n        isDraft: true\n      }, doc));\n    }\n\n    return saveAndDraft;\n  }();\n\n  FormBase.prototype.renderButtons = function () {\n    function renderButtons(message) {\n      var save = React.createElement(\n        Button,\n        {\n          bsStyle: \"link\",\n          onClick: this.save\n        },\n        React.createElement(\"i\", {\n          className: \"ion-checkmark-circled\"\n        }),\n        \" Save\"\n      );\n      var saveAndLive = React.createElement(\n        Button,\n        {\n          bsStyle: \"link\",\n          onClick: this.saveAndLive,\n          key: \"action-save-live\"\n        },\n        React.createElement(\"i\", {\n          className: \"ion-checkmark-circled\"\n        }),\n        \" Save & live\"\n      );\n      var saveAndDraft = React.createElement(\n        Button,\n        {\n          bsStyle: \"link\",\n          onClick: this.saveAndDraft,\n          key: \"action-save-draft\"\n        },\n        React.createElement(\"i\", {\n          className: \"ion-checkmark-circled\"\n        }),\n        \" Save & draft\"\n      );\n\n      if (message._id) {\n        return save;\n      } else {\n        return [saveAndLive, saveAndDraft];\n      }\n    }\n\n    return renderButtons;\n  }();\n\n  FormBase.prototype.renderSidebarExtra = function () {\n    function renderSidebarExtra() {\n      return null;\n    }\n\n    return renderSidebarExtra;\n  }();\n\n  FormBase.prototype.renderContent = function () {\n    function renderContent() {\n      return null;\n    }\n\n    return renderContent;\n  }();\n\n  FormBase.prototype.renderTitle = function () {\n    function renderTitle() {\n      var kind = FlowRouter.getQueryParam('kind');\n\n      if (kind == 'auto') {\n        return 'Auto message';\n      } else if (kind == 'manual') {\n        return 'Manual message';\n      }\n\n      return 'Visitor auto message';\n    }\n\n    return renderTitle;\n  }();\n\n  FormBase.prototype.onChangeUser = function () {\n    function onChangeUser(e) {\n      this.setState({\n        fromUser: e.target.value\n      });\n    }\n\n    return onChangeUser;\n  }();\n\n  FormBase.prototype.render = function () {\n    function render() {\n      var breadcrumb = [{\n        title: 'Engage',\n        link: '/engage'\n      }, {\n        title: this.renderTitle()\n      }];\n      var message = this.getMessage();\n      var Section = Wrapper.Sidebar.Section;\n      var Title = Wrapper.Sidebar.Section.Title;\n      var sidebar = React.createElement(\n        Wrapper.Sidebar,\n        {\n          size: \"wide\"\n        },\n        React.createElement(\n          \"form\",\n          {\n            onSubmit: this.save\n          },\n          React.createElement(\n            Section,\n            null,\n            React.createElement(\n              Title,\n              null,\n              \"Title\"\n            ),\n            React.createElement(\n              \"div\",\n              {\n                className: \"box\"\n              },\n              React.createElement(FormControl, {\n                id: \"title\",\n                defaultValue: message.title,\n                required: true\n              })\n            )\n          ),\n          React.createElement(\n            Section,\n            null,\n            React.createElement(\n              Title,\n              null,\n              \"From\"\n            ),\n            React.createElement(\n              \"div\",\n              {\n                className: \"box\"\n              },\n              React.createElement(\n                FormControl,\n                {\n                  id: \"fromUserId\",\n                  componentClass: \"select\",\n                  defaultValue: message.fromUserId,\n                  onChange: this.onChangeUser\n                },\n                this.props.users.map(function (u) {\n                  return React.createElement(\n                    \"option\",\n                    {\n                      key: u._id,\n                      value: u._id\n                    },\n                    u.fullName || u.username\n                  );\n                })\n              )\n            )\n          ),\n          this.renderSidebarExtra()\n        )\n      );\n      var actionBar = React.createElement(Wrapper.ActionBar, {\n        left: React.createElement(\n          ButtonGroup,\n          null,\n          this.renderButtons(message),\n          React.createElement(\n            Button,\n            {\n              bsStyle: \"link\",\n              href: FlowRouter.path('engage/home')\n            },\n            React.createElement(\"i\", {\n              className: \"ion-close-circled\"\n            }),\n            \" Cancel\"\n          )\n        )\n      });\n      return React.createElement(Wrapper, {\n        header: React.createElement(Wrapper.Header, {\n          breadcrumb: breadcrumb\n        }),\n        actionBar: actionBar,\n        content: this.renderContent(),\n        leftSidebar: sidebar\n      });\n    }\n\n    return render;\n  }();\n\n  return FormBase;\n}(Component);\n\nFormBase.propTypes = propTypes;\nmodule.export(\"default\", exports.default = FormBase);","map":{"version":3,"sources":["/imports/react-ui/engage/components/FormBase.js"],"names":["React","PropTypes","Component","module","importSync","v","ButtonGroup","Button","FormControl","FlowRouter","Wrapper","propTypes","message","object","save","func","isRequired","users","array","FormBase","props","state","fromUser","fromUserId","generateDoc","bind","saveAndLive","saveAndDraft","onChangeUser","componentDidMount","setState","document","getElementById","value","getMessage","email","messenger","e","preventDefault","doc","isLive","isDraft","renderButtons","_id","renderSidebarExtra","renderContent","renderTitle","kind","getQueryParam","target","render","breadcrumb","title","link","Section","Sidebar","Title","sidebar","map","u","fullName","username","actionBar","path","export","exports","default"],"mappings":"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","file":"/imports/react-ui/engage/components/FormBase.js.map","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport { ButtonGroup, Button, FormControl } from 'react-bootstrap';\n\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Wrapper } from '/imports/react-ui/layout/components';\n\nconst propTypes = {\n  message: PropTypes.object,\n  save: PropTypes.func.isRequired,\n  users: PropTypes.array,\n};\n\nclass FormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    const message = props.message || {};\n\n    this.state = { fromUser: message.fromUserId || '' };\n\n    // binds\n    this.generateDoc = this.generateDoc.bind(this);\n    this.save = this.save.bind(this);\n    this.saveAndLive = this.saveAndLive.bind(this);\n    this.saveAndDraft = this.saveAndDraft.bind(this);\n    this.onChangeUser = this.onChangeUser.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ fromUser: document.getElementById('fromUserId').value });\n  }\n\n  getMessage() {\n    return this.props.message || { email: {}, messenger: {} };\n  }\n\n  generateDoc(e) {\n    e.preventDefault();\n\n    return {};\n  }\n\n  save(e) {\n    const doc = this.generateDoc(e);\n    this.props.save(doc);\n  }\n\n  saveAndLive(e) {\n    const doc = this.generateDoc(e);\n    this.props.save({ isLive: true, isDraft: false, ...doc });\n  }\n\n  saveAndDraft(e) {\n    const doc = this.generateDoc(e);\n    this.props.save({ isLive: false, isDraft: true, ...doc });\n  }\n\n  renderButtons(message) {\n    const save = (\n      <Button bsStyle=\"link\" onClick={this.save}>\n        <i className=\"ion-checkmark-circled\" /> Save\n      </Button>\n    );\n\n    const saveAndLive = (\n      <Button bsStyle=\"link\" onClick={this.saveAndLive} key=\"action-save-live\">\n        <i className=\"ion-checkmark-circled\" /> Save & live\n      </Button>\n    );\n\n    const saveAndDraft = (\n      <Button bsStyle=\"link\" onClick={this.saveAndDraft} key=\"action-save-draft\">\n        <i className=\"ion-checkmark-circled\" /> Save & draft\n      </Button>\n    );\n\n    if (message._id) {\n      return save;\n    } else {\n      return [saveAndLive, saveAndDraft];\n    }\n  }\n\n  renderSidebarExtra() {\n    return null;\n  }\n\n  renderContent() {\n    return null;\n  }\n\n  renderTitle() {\n    const kind = FlowRouter.getQueryParam('kind');\n\n    if (kind == 'auto') {\n      return 'Auto message';\n    } else if (kind == 'manual') {\n      return 'Manual message';\n    }\n\n    return 'Visitor auto message';\n  }\n\n  onChangeUser(e) {\n    this.setState({ fromUser: e.target.value });\n  }\n\n  render() {\n    const breadcrumb = [{ title: 'Engage', link: '/engage' }, { title: this.renderTitle() }];\n\n    const message = this.getMessage();\n\n    const { Section } = Wrapper.Sidebar;\n    const { Title } = Wrapper.Sidebar.Section;\n\n    const sidebar = (\n      <Wrapper.Sidebar size=\"wide\">\n        <form onSubmit={this.save}>\n          <Section>\n            <Title>Title</Title>\n            <div className=\"box\">\n              <FormControl id=\"title\" defaultValue={message.title} required />\n            </div>\n          </Section>\n\n          <Section>\n            <Title>From</Title>\n            <div className=\"box\">\n              <FormControl\n                id=\"fromUserId\"\n                componentClass=\"select\"\n                defaultValue={message.fromUserId}\n                onChange={this.onChangeUser}\n              >\n                {this.props.users.map(u => (\n                  <option key={u._id} value={u._id}>\n                    {u.fullName || u.username}\n                  </option>\n                ))}\n              </FormControl>\n            </div>\n          </Section>\n\n          {this.renderSidebarExtra()}\n        </form>\n      </Wrapper.Sidebar>\n    );\n\n    const actionBar = (\n      <Wrapper.ActionBar\n        left={\n          <ButtonGroup>\n            {this.renderButtons(message)}\n\n            <Button bsStyle=\"link\" href={FlowRouter.path('engage/home')}>\n              <i className=\"ion-close-circled\" /> Cancel\n            </Button>\n          </ButtonGroup>\n        }\n      />\n    );\n\n    return (\n      <Wrapper\n        header={<Wrapper.Header breadcrumb={breadcrumb} />}\n        actionBar={actionBar}\n        content={this.renderContent()}\n        leftSidebar={sidebar}\n      />\n    );\n  }\n}\n\nFormBase.propTypes = propTypes;\n\nexport default FormBase;\n"]},"hash":"25136dfe770550a440d76899a063322a704f0b87"}
