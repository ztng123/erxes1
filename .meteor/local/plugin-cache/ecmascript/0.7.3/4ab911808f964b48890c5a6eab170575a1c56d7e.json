{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"meteor/underscore","imported":["_"],"specifiers":[{"kind":"named","imported":"_","local":"_"}]},{"source":"react-bootstrap","imported":["Button"],"specifiers":[{"kind":"named","imported":"Button","local":"Button"}]},{"source":"meteor/erxes-notifier","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Alert"}]},{"source":"/imports/react-ui/settings/Sidebar","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Sidebar"}]},{"source":"/imports/react-ui/common","imported":["EmptyState","Pagination"],"specifiers":[{"kind":"named","imported":"EmptyState","local":"EmptyState"},{"kind":"named","imported":"Pagination","local":"Pagination"}]},{"source":"../../containers","imported":["NotificationListRow"],"specifiers":[{"kind":"named","imported":"NotificationListRow","local":"NotificationListRow"}]},{"source":"../","imported":["Wrapper"],"specifiers":[{"kind":"named","imported":"Wrapper","local":"Wrapper"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/layout/components/Notifications/NotificationList.js","filenameRelative":"/imports/react-ui/layout/components/Notifications/NotificationList.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/layout/components/Notifications/NotificationList.js.map","sourceFileName":"/imports/react-ui/layout/components/Notifications/NotificationList.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"NotificationList"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\n\nvar _ = void 0;\n\nmodule.importSync(\"meteor/underscore\", {\n  _: function (v) {\n    _ = v;\n  }\n}, 2);\nvar Button = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  Button: function (v) {\n    Button = v;\n  }\n}, 3);\nvar Alert = void 0;\nmodule.importSync(\"meteor/erxes-notifier\", {\n  \"default\": function (v) {\n    Alert = v;\n  }\n}, 4);\nvar Sidebar = void 0;\nmodule.importSync(\"/imports/react-ui/settings/Sidebar\", {\n  \"default\": function (v) {\n    Sidebar = v;\n  }\n}, 5);\nvar EmptyState = void 0,\n    Pagination = void 0;\nmodule.importSync(\"/imports/react-ui/common\", {\n  EmptyState: function (v) {\n    EmptyState = v;\n  },\n  Pagination: function (v) {\n    Pagination = v;\n  }\n}, 6);\nvar NotificationListRow = void 0;\nmodule.importSync(\"../../containers\", {\n  NotificationListRow: function (v) {\n    NotificationListRow = v;\n  }\n}, 7);\nvar Wrapper = void 0;\nmodule.importSync(\"../\", {\n  Wrapper: function (v) {\n    Wrapper = v;\n  }\n}, 8);\n\nvar NotificationList = function (_Component) {\n  (0, _inherits3.default)(NotificationList, _Component);\n\n  function NotificationList(props) {\n    (0, _classCallCheck3.default)(this, NotificationList);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.state = {\n      bulk: []\n    };\n    _this.markAllRead = _this.markAllRead.bind(_this);\n    return _this;\n  }\n\n  NotificationList.prototype.markAllRead = function () {\n    function markAllRead() {\n      var bulk = this.state.bulk;\n\n      _.each(this.props.notifications, function (notification) {\n        if (!notification.isRead) {\n          bulk.push(notification._id);\n        }\n      });\n\n      this.props.markAsRead(this.state.bulk, function (error) {\n        if (error) {\n          return Alert.error('Error', error.reason);\n        }\n\n        return Alert.success('All notifications have been seen');\n      });\n      this.setState({\n        bulk: []\n      });\n    }\n\n    return markAllRead;\n  }();\n\n  NotificationList.prototype.render = function () {\n    function render() {\n      var notifications = this.props.notifications;\n      var notifCount = notifications.length;\n      var _props = this.props,\n          loadMore = _props.loadMore,\n          hasMore = _props.hasMore;\n      var content = React.createElement(\n        Pagination,\n        {\n          loadMore: loadMore,\n          hasMore: hasMore\n        },\n        React.createElement(\n          \"ul\",\n          {\n            className: \"conversations-list notif-list\"\n          },\n          notifications.map(function (notif, key) {\n            return React.createElement(NotificationListRow, {\n              notification: notif,\n              key: key\n            });\n          })\n        )\n      );\n\n      if (notifCount === 0) {\n        content = React.createElement(EmptyState, {\n          text: \"No notifications\",\n          size: \"full\",\n          icon: React.createElement(\"i\", {\n            className: \"ion-android-notifications\"\n          })\n        });\n      }\n\n      var actionBarLeft = React.createElement(\n        \"div\",\n        null,\n        React.createElement(\n          Button,\n          {\n            bsStyle: \"link\",\n            onClick: this.markAllRead\n          },\n          React.createElement(\"i\", {\n            className: \"ion-checkmark-circled\"\n          }),\n          \" Mark all Read\"\n        )\n      );\n      var actionBar = React.createElement(Wrapper.ActionBar, {\n        left: actionBarLeft\n      });\n      return React.createElement(Wrapper, {\n        header: React.createElement(Wrapper.Header, {\n          breadcrumb: [{\n            title: 'Notifications'\n          }]\n        }),\n        leftSidebar: React.createElement(Sidebar, null),\n        actionBar: actionBar,\n        content: content\n      });\n    }\n\n    return render;\n  }();\n\n  return NotificationList;\n}(Component);\n\nNotificationList.propTypes = {\n  notifications: PropTypes.array.isRequired,\n  markAsRead: PropTypes.func.isRequired,\n  loadMore: PropTypes.func.isRequired,\n  hasMore: PropTypes.bool.isRequired\n};\nmodule.export(\"default\", exports.default = NotificationList);","map":{"version":3,"sources":["/imports/react-ui/layout/components/Notifications/NotificationList.js"],"names":["React","Component","module","importSync","v","PropTypes","_","Button","Alert","Sidebar","EmptyState","Pagination","NotificationListRow","Wrapper","NotificationList","props","state","bulk","markAllRead","bind","each","notifications","notification","isRead","push","_id","markAsRead","error","reason","success","setState","render","notifCount","length","loadMore","hasMore","content","map","notif","key","actionBarLeft","actionBar","title","propTypes","array","isRequired","func","bool","export","exports","default"],"mappings":";;;;;;;;;;;;;;AAAA,IAAIA,cAAJ;AAAA,IAAUC,kBAAV;AAAoBC,OAAOC,UAAP,CAAkB,OAAlB,EAA0B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACJ,YAAMI,CAAN;AAAQ,GAA7B;AAA8BH,aAAU,UAASG,CAAT,EAAW;AAACH,gBAAUG,CAAV;AAAY;AAAhE,CAA1B,EAA4F,CAA5F;AAA+F,IAAIC,kBAAJ;AAAcH,OAAOC,UAAP,CAAkB,YAAlB,EAA+B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACC,gBAAUD,CAAV;AAAY;AAAjC,CAA/B,EAAkE,CAAlE;;AAAqE,IAAIE,UAAJ;;AAAMJ,OAAOC,UAAP,CAAkB,mBAAlB,EAAsC;AAACG,KAAE,UAASF,CAAT,EAAW;AAACE,QAAEF,CAAF;AAAI;AAAnB,CAAtC,EAA2D,CAA3D;AAA8D,IAAIG,eAAJ;AAAWL,OAAOC,UAAP,CAAkB,iBAAlB,EAAoC;AAACI,UAAO,UAASH,CAAT,EAAW;AAACG,aAAOH,CAAP;AAAS;AAA7B,CAApC,EAAmE,CAAnE;AAAsE,IAAII,cAAJ;AAAUN,OAAOC,UAAP,CAAkB,uBAAlB,EAA0C;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACI,YAAMJ,CAAN;AAAQ;AAA7B,CAA1C,EAAyE,CAAzE;AAA4E,IAAIK,gBAAJ;AAAYP,OAAOC,UAAP,CAAkB,oCAAlB,EAAuD;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACK,cAAQL,CAAR;AAAU;AAA/B,CAAvD,EAAwF,CAAxF;AAA2F,IAAIM,mBAAJ;AAAA,IAAeC,mBAAf;AAA0BT,OAAOC,UAAP,CAAkB,0BAAlB,EAA6C;AAACO,cAAW,UAASN,CAAT,EAAW;AAACM,iBAAWN,CAAX;AAAa,GAArC;AAAsCO,cAAW,UAASP,CAAT,EAAW;AAACO,iBAAWP,CAAX;AAAa;AAA1E,CAA7C,EAAyH,CAAzH;AAA4H,IAAIQ,4BAAJ;AAAwBV,OAAOC,UAAP,CAAkB,kBAAlB,EAAqC;AAACS,uBAAoB,UAASR,CAAT,EAAW;AAACQ,0BAAoBR,CAApB;AAAsB;AAAvD,CAArC,EAA8F,CAA9F;AAAiG,IAAIS,gBAAJ;AAAYX,OAAOC,UAAP,CAAkB,KAAlB,EAAwB;AAACU,WAAQ,UAAST,CAAT,EAAW;AAACS,cAAQT,CAAR;AAAU;AAA/B,CAAxB,EAAyD,CAAzD;;IAU7yBU,gB;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA,+DACjB,sBAAMA,KAAN,CADiB;;AAGjB,UAAKC,KAAL,GAAa;AAAEC,YAAM;AAAR,KAAb;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AAJiB;AAKlB;;6BAEDD,W;2BAAc;AAAA,UACJD,IADI,GACK,KAAKD,KADV,CACJC,IADI;;AAGZX,QAAEc,IAAF,CAAO,KAAKL,KAAL,CAAWM,aAAlB,EAAiC,wBAAgB;AAC/C,YAAI,CAACC,aAAaC,MAAlB,EAA0B;AACxBN,eAAKO,IAAL,CAAUF,aAAaG,GAAvB;AACD;AACF,OAJD;;AAMA,WAAKV,KAAL,CAAWW,UAAX,CAAsB,KAAKV,KAAL,CAAWC,IAAjC,EAAuC,iBAAS;AAC9C,YAAIU,KAAJ,EAAW;AACT,iBAAOnB,MAAMmB,KAAN,CAAY,OAAZ,EAAqBA,MAAMC,MAA3B,CAAP;AACD;;AACD,eAAOpB,MAAMqB,OAAN,CAAc,kCAAd,CAAP;AACD,OALD;AAOA,WAAKC,QAAL,CAAc;AAAEb,cAAM;AAAR,OAAd;AACD;;;;;6BAEDc,M;sBAAS;AACP,UAAMV,gBAAgB,KAAKN,KAAL,CAAWM,aAAjC;AACA,UAAMW,aAAaX,cAAcY,MAAjC;AAFO,mBAGuB,KAAKlB,KAH5B;AAAA,UAGCmB,QAHD,UAGCA,QAHD;AAAA,UAGWC,OAHX,UAGWA,OAHX;AAKP,UAAIC,UACF;AAAC,kBAAD;AAAA;AAAY,oBAAUF,QAAtB;AAAgC,mBAASC;AAAzC;AACE;AAAA;AAAA;AAAI,uBAAU;AAAd;AACGd,wBAAcgB,GAAd,CAAkB,UAACC,KAAD,EAAQC,GAAR;AAAA,mBACjB,oBAAC,mBAAD;AAAqB,4BAAcD,KAAnC;AAA0C,mBAAKC;AAA/C,cADiB;AAAA,WAAlB;AADH;AADF,OADF;;AAUA,UAAIP,eAAe,CAAnB,EAAsB;AACpBI,kBACE,oBAAC,UAAD;AACE,gBAAK,kBADP;AAEE,gBAAK,MAFP;AAGE,gBAAM;AAAG,uBAAU;AAAb;AAHR,UADF;AAOD;;AAED,UAAMI,gBACJ;AAAA;AAAA;AACE;AAAC,gBAAD;AAAA;AAAQ,qBAAQ,MAAhB;AAAuB,qBAAS,KAAKtB;AAArC;AACE;AAAG,uBAAU;AAAb,YADF;AAAA;AAAA;AADF,OADF;AAQA,UAAMuB,YAAY,oBAAC,OAAD,CAAS,SAAT;AAAmB,cAAMD;AAAzB,QAAlB;AAEA,aACE,oBAAC,OAAD;AACE,gBAAQ,oBAAC,OAAD,CAAS,MAAT;AAAgB,sBAAY,CAAC;AAAEE,mBAAO;AAAT,WAAD;AAA5B,UADV;AAEE,qBAAa,oBAAC,OAAD,OAFf;AAGE,mBAAWD,SAHb;AAIE,iBAASL;AAJX,QADF;AAQD;;;;;;EAtE4BnC,S;;AAyE/Ba,iBAAiB6B,SAAjB,GAA6B;AAC3BtB,iBAAehB,UAAUuC,KAAV,CAAgBC,UADJ;AAE3BnB,cAAYrB,UAAUyC,IAAV,CAAeD,UAFA;AAG3BX,YAAU7B,UAAUyC,IAAV,CAAeD,UAHE;AAI3BV,WAAS9B,UAAU0C,IAAV,CAAeF;AAJG,CAA7B;AAnFA3C,OAAO8C,MAAP,CAAc,SAAd,EAAwBC,QAAQC,OAAR,GA0FTpC,gBA1Ff","file":"/imports/react-ui/layout/components/Notifications/NotificationList.js.map","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { _ } from 'meteor/underscore';\nimport { Button } from 'react-bootstrap';\nimport Alert from 'meteor/erxes-notifier';\nimport Sidebar from '/imports/react-ui/settings/Sidebar';\nimport { EmptyState, Pagination } from '/imports/react-ui/common';\nimport { NotificationListRow } from '../../containers';\nimport { Wrapper } from '../';\n\nclass NotificationList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { bulk: [] };\n    this.markAllRead = this.markAllRead.bind(this);\n  }\n\n  markAllRead() {\n    const { bulk } = this.state;\n\n    _.each(this.props.notifications, notification => {\n      if (!notification.isRead) {\n        bulk.push(notification._id);\n      }\n    });\n\n    this.props.markAsRead(this.state.bulk, error => {\n      if (error) {\n        return Alert.error('Error', error.reason);\n      }\n      return Alert.success('All notifications have been seen');\n    });\n\n    this.setState({ bulk: [] });\n  }\n\n  render() {\n    const notifications = this.props.notifications;\n    const notifCount = notifications.length;\n    const { loadMore, hasMore } = this.props;\n\n    let content = (\n      <Pagination loadMore={loadMore} hasMore={hasMore}>\n        <ul className=\"conversations-list notif-list\">\n          {notifications.map((notif, key) => (\n            <NotificationListRow notification={notif} key={key} />\n          ))}\n        </ul>\n      </Pagination>\n    );\n\n    if (notifCount === 0) {\n      content = (\n        <EmptyState\n          text=\"No notifications\"\n          size=\"full\"\n          icon={<i className=\"ion-android-notifications\" />}\n        />\n      );\n    }\n\n    const actionBarLeft = (\n      <div>\n        <Button bsStyle=\"link\" onClick={this.markAllRead}>\n          <i className=\"ion-checkmark-circled\" /> Mark all Read\n        </Button>\n      </div>\n    );\n\n    const actionBar = <Wrapper.ActionBar left={actionBarLeft} />;\n\n    return (\n      <Wrapper\n        header={<Wrapper.Header breadcrumb={[{ title: 'Notifications' }]} />}\n        leftSidebar={<Sidebar />}\n        actionBar={actionBar}\n        content={content}\n      />\n    );\n  }\n}\n\nNotificationList.propTypes = {\n  notifications: PropTypes.array.isRequired,\n  markAsRead: PropTypes.func.isRequired,\n  loadMore: PropTypes.func.isRequired,\n  hasMore: PropTypes.bool.isRequired,\n};\n\nexport default NotificationList;\n"]},"hash":"4ab911808f964b48890c5a6eab170575a1c56d7e"}
