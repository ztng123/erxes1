{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"meteor/underscore","imported":["_"],"specifiers":[{"kind":"named","imported":"_","local":"_"}]},{"source":"react-toggle","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Toggle"}]},{"source":"/imports/react-ui/layout/components","imported":["Wrapper"],"specifiers":[{"kind":"named","imported":"Wrapper","local":"Wrapper"}]},{"source":"meteor/erxes-notifier","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Alert"}]},{"source":"../../Sidebar","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Sidebar"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/settings/profile/components/NotificationSettings.js","filenameRelative":"/imports/react-ui/settings/profile/components/NotificationSettings.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/settings/profile/components/NotificationSettings.js.map","sourceFileName":"/imports/react-ui/settings/profile/components/NotificationSettings.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"NotificationSettings"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\n\nvar _ = void 0;\n\nmodule.importSync(\"meteor/underscore\", {\n  _: function (v) {\n    _ = v;\n  }\n}, 2);\nvar Toggle = void 0;\nmodule.importSync(\"react-toggle\", {\n  \"default\": function (v) {\n    Toggle = v;\n  }\n}, 3);\nvar Wrapper = void 0;\nmodule.importSync(\"/imports/react-ui/layout/components\", {\n  Wrapper: function (v) {\n    Wrapper = v;\n  }\n}, 4);\nvar Alert = void 0;\nmodule.importSync(\"meteor/erxes-notifier\", {\n  \"default\": function (v) {\n    Alert = v;\n  }\n}, 5);\nvar Sidebar = void 0;\nmodule.importSync(\"../../Sidebar\", {\n  \"default\": function (v) {\n    Sidebar = v;\n  }\n}, 6);\n\nvar NotificationSettings = function (_Component) {\n  (0, _inherits3.default)(NotificationSettings, _Component);\n\n  function NotificationSettings(props) {\n    (0, _classCallCheck3.default)(this, NotificationSettings);\n\n    // on notif type change\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.onTypeChange = _this.onTypeChange.bind(_this);\n    _this.onEmailConfigChange = _this.onEmailConfigChange.bind(_this);\n    return _this;\n  }\n\n  NotificationSettings.prototype.onTypeChange = function () {\n    function onTypeChange(e) {\n      // save config\n      this.props.save(e.target.value, e.target.checked, function (error) {\n        if (error) return Alert.error(error.reason);\n        return Alert.success('Congrats');\n      });\n    }\n\n    return onTypeChange;\n  }();\n\n  NotificationSettings.prototype.onEmailConfigChange = function () {\n    function onEmailConfigChange(e) {\n      // save get notification by email config\n      this.props.configGetNotificationByEmail({\n        isAllowed: e.target.checked\n      }, function (error) {\n        if (error) return Alert.error(error.reason);\n        return Alert.success('Congrats');\n      });\n    }\n\n    return onEmailConfigChange;\n  }();\n\n  NotificationSettings.prototype.isChecked = function () {\n    function isChecked(notifType) {\n      var oldEntry = _.find(this.props.configs, function (config) {\n        return config.notifType === notifType.name;\n      }); // if no previous configuration found then default is checked\n\n\n      if (!oldEntry) {\n        return true;\n      }\n\n      return oldEntry.isAllowed;\n    }\n\n    return isChecked;\n  }();\n\n  NotificationSettings.prototype.renderNotifType = function () {\n    function renderNotifType(type, key) {\n      return React.createElement(\n        \"div\",\n        {\n          key: key,\n          className: \"flex-inline\"\n        },\n        React.createElement(Toggle, {\n          value: type.name,\n          checked: this.isChecked(type),\n          onChange: this.onTypeChange,\n          icons: {\n            checked: null,\n            unchecked: null\n          }\n        }),\n        type.text\n      );\n    }\n\n    return renderNotifType;\n  }();\n\n  NotificationSettings.prototype.renderModule = function () {\n    function renderModule(module, mindex) {\n      var _this2 = this;\n\n      return React.createElement(\n        \"div\",\n        {\n          key: mindex\n        },\n        React.createElement(\n          \"h5\",\n          null,\n          module.description\n        ),\n        module.types.map(function (type, index) {\n          return _this2.renderNotifType(type, \"\" + mindex + index);\n        })\n      );\n    }\n\n    return renderModule;\n  }();\n\n  NotificationSettings.prototype.render = function () {\n    function render() {\n      var _this3 = this;\n\n      var content = React.createElement(\n        \"div\",\n        {\n          className: \"margined notification-settings\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"flex-inline\"\n          },\n          React.createElement(Toggle, {\n            defaultChecked: this.props.getNotificationByEmail,\n            onChange: this.onEmailConfigChange,\n            icons: {\n              checked: null,\n              unchecked: null\n            }\n          }),\n          \"Get notification by email\"\n        ),\n        React.createElement(\n          \"div\",\n          {\n            className: \"margined\"\n          },\n          this.props.modules.map(function (module, index) {\n            return _this3.renderModule(module, index);\n          })\n        )\n      );\n      var breadcrumb = [{\n        title: 'Settings',\n        link: '/settings/channels'\n      }, {\n        title: 'Notification settings'\n      }];\n      return React.createElement(Wrapper, {\n        header: React.createElement(Wrapper.Header, {\n          breadcrumb: breadcrumb\n        }),\n        leftSidebar: React.createElement(Sidebar, null),\n        content: content\n      });\n    }\n\n    return render;\n  }();\n\n  return NotificationSettings;\n}(Component);\n\nNotificationSettings.propTypes = {\n  modules: PropTypes.array.isRequired,\n  configs: PropTypes.array.isRequired,\n  save: PropTypes.func.isRequired,\n  // save get notification by email action\n  configGetNotificationByEmail: PropTypes.func.isRequired,\n  // previously configured value\n  getNotificationByEmail: PropTypes.bool.isRequired\n};\nmodule.export(\"default\", exports.default = NotificationSettings);","map":{"version":3,"sources":["/imports/react-ui/settings/profile/components/NotificationSettings.js"],"names":["React","Component","module","importSync","v","PropTypes","_","Toggle","Wrapper","Alert","Sidebar","NotificationSettings","props","onTypeChange","bind","onEmailConfigChange","e","save","target","value","checked","error","reason","success","configGetNotificationByEmail","isAllowed","isChecked","notifType","oldEntry","find","configs","config","name","renderNotifType","type","key","unchecked","text","renderModule","mindex","description","types","map","index","render","content","getNotificationByEmail","modules","breadcrumb","title","link","propTypes","array","isRequired","func","bool","export","exports","default"],"mappings":"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","file":"/imports/react-ui/settings/profile/components/NotificationSettings.js.map","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { _ } from 'meteor/underscore';\nimport Toggle from 'react-toggle';\nimport { Wrapper } from '/imports/react-ui/layout/components';\nimport Alert from 'meteor/erxes-notifier';\nimport Sidebar from '../../Sidebar';\n\nclass NotificationSettings extends Component {\n  constructor(props) {\n    super(props);\n\n    // on notif type change\n    this.onTypeChange = this.onTypeChange.bind(this);\n\n    this.onEmailConfigChange = this.onEmailConfigChange.bind(this);\n  }\n\n  onTypeChange(e) {\n    // save config\n    this.props.save(e.target.value, e.target.checked, error => {\n      if (error) return Alert.error(error.reason);\n      return Alert.success('Congrats');\n    });\n  }\n\n  onEmailConfigChange(e) {\n    // save get notification by email config\n    this.props.configGetNotificationByEmail({ isAllowed: e.target.checked }, error => {\n      if (error) return Alert.error(error.reason);\n      return Alert.success('Congrats');\n    });\n  }\n\n  isChecked(notifType) {\n    const oldEntry = _.find(this.props.configs, config => config.notifType === notifType.name);\n\n    // if no previous configuration found then default is checked\n    if (!oldEntry) {\n      return true;\n    }\n\n    return oldEntry.isAllowed;\n  }\n\n  renderNotifType(type, key) {\n    return (\n      <div key={key} className=\"flex-inline\">\n        <Toggle\n          value={type.name}\n          checked={this.isChecked(type)}\n          onChange={this.onTypeChange}\n          icons={{\n            checked: null,\n            unchecked: null,\n          }}\n        />\n        {type.text}\n      </div>\n    );\n  }\n\n  renderModule(module, mindex) {\n    return (\n      <div key={mindex}>\n        <h5>{module.description}</h5>\n        {module.types.map((type, index) => this.renderNotifType(type, `${mindex}${index}`))}\n      </div>\n    );\n  }\n\n  render() {\n    const content = (\n      <div className=\"margined notification-settings\">\n        <div className=\"flex-inline\">\n          <Toggle\n            defaultChecked={this.props.getNotificationByEmail}\n            onChange={this.onEmailConfigChange}\n            icons={{\n              checked: null,\n              unchecked: null,\n            }}\n          />\n          Get notification by email\n        </div>\n        <div className=\"margined\">\n          {this.props.modules.map((module, index) => this.renderModule(module, index))}\n        </div>\n      </div>\n    );\n\n    const breadcrumb = [\n      { title: 'Settings', link: '/settings/channels' },\n      { title: 'Notification settings' },\n    ];\n\n    return (\n      <Wrapper\n        header={<Wrapper.Header breadcrumb={breadcrumb} />}\n        leftSidebar={<Sidebar />}\n        content={content}\n      />\n    );\n  }\n}\n\nNotificationSettings.propTypes = {\n  modules: PropTypes.array.isRequired,\n  configs: PropTypes.array.isRequired,\n  save: PropTypes.func.isRequired,\n\n  // save get notification by email action\n  configGetNotificationByEmail: PropTypes.func.isRequired,\n\n  // previously configured value\n  getNotificationByEmail: PropTypes.bool.isRequired,\n};\n\nexport default NotificationSettings;\n"]},"hash":"36939c37d3cd3636a5ff10a54053532683891bb5"}
