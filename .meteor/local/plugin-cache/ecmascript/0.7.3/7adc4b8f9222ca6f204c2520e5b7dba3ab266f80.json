{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]},{"source":"../notifications","imported":["Notifications","Configs"],"specifiers":[{"kind":"named","imported":"Notifications","local":"Notifications"},{"kind":"named","imported":"Configs","local":"Configs"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/erxes-notifications/server/methods.js","filenameRelative":"/packages/erxes-notifications/server/methods.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/erxes-notifications/server/methods.js.map","sourceFileName":"/packages/erxes-notifications/server/methods.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"methods"},"ignored":false,"code":"var _Meteor$methods;\n\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar check = void 0;\nmodule.importSync(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  }\n}, 1);\nvar Notifications = void 0,\n    Configs = void 0;\nmodule.importSync(\"../notifications\", {\n  Notifications: function (v) {\n    Notifications = v;\n  },\n  Configs: function (v) {\n    Configs = v;\n  }\n}, 2);\nMeteor.methods((_Meteor$methods = {}, _Meteor$methods['notifications.markAsRead'] = function (ids) {\n  check(ids, [String]);\n  Notifications.update({\n    _id: {\n      $in: ids\n    }\n  }, {\n    $set: {\n      isRead: true\n    }\n  }, {\n    multi: true\n  });\n}, _Meteor$methods['notifications.getModules'] = function () {\n  return Notifications.Modules;\n}, _Meteor$methods['notifications.saveConfig'] = function (notifType, isAllowed) {\n  check(notifType, String);\n  check(isAllowed, Boolean);\n  var selector = {\n    user: this.userId,\n    notifType: notifType\n  };\n  var oldOne = Configs.findOne(selector); // if already inserted then update isAllowed field\n\n  if (oldOne) {\n    Configs.update({\n      _id: oldOne._id\n    }, {\n      $set: {\n        isAllowed: isAllowed\n      }\n    }); // if it is first time then insert\n  } else {\n    selector.isAllowed = isAllowed;\n    Configs.insert(selector);\n  }\n}, _Meteor$methods));","map":{"version":3,"sources":["/packages/erxes-notifications/server/methods.js"],"names":["Meteor","module","importSync","v","check","Notifications","Configs","methods","ids","String","update","_id","$in","$set","isRead","multi","Modules","notifType","isAllowed","Boolean","selector","user","userId","oldOne","findOne","insert"],"mappings":";;AAAA,IAAIA,eAAJ;AAAWC,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACF,UAAO,UAASG,CAAT,EAAW;AAACH,aAAOG,CAAP;AAAS;AAA7B,CAAlC,EAAiE,CAAjE;AAAoE,IAAIC,cAAJ;AAAUH,OAAOC,UAAP,CAAkB,cAAlB,EAAiC;AAACE,SAAM,UAASD,CAAT,EAAW;AAACC,YAAMD,CAAN;AAAQ;AAA3B,CAAjC,EAA8D,CAA9D;AAAiE,IAAIE,sBAAJ;AAAA,IAAkBC,gBAAlB;AAA0BL,OAAOC,UAAP,CAAkB,kBAAlB,EAAqC;AAACG,iBAAc,UAASF,CAAT,EAAW;AAACE,oBAAcF,CAAd;AAAgB,GAA3C;AAA4CG,WAAQ,UAASH,CAAT,EAAW;AAACG,cAAQH,CAAR;AAAU;AAA1E,CAArC,EAAiH,CAAjH;AAKpLH,OAAOO,OAAP,wCACG,0BADH,cAC+BC,GAD/B,EACoC;AAChCJ,QAAMI,GAAN,EAAW,CAACC,MAAD,CAAX;AAEAJ,gBAAcK,MAAd,CACE;AAAEC,SAAK;AAAEC,WAAKJ;AAAP;AAAP,GADF,EAEE;AAAEK,UAAM;AAAEC,cAAQ;AAAV;AAAR,GAFF,EAGE;AAAEC,WAAO;AAAT,GAHF;AAKD,CATH,kBAWG,0BAXH,gBAWiC;AAC7B,SAAOV,cAAcW,OAArB;AACD,CAbH,kBAeG,0BAfH,cAe+BC,SAf/B,EAe0CC,SAf1C,EAeqD;AACjDd,QAAMa,SAAN,EAAiBR,MAAjB;AACAL,QAAMc,SAAN,EAAiBC,OAAjB;AAEA,MAAMC,WAAW;AAAEC,UAAM,KAAKC,MAAb;AAAqBL;AAArB,GAAjB;AAEA,MAAMM,SAASjB,QAAQkB,OAAR,CAAgBJ,QAAhB,CAAf,CANiD,CAQjD;;AACA,MAAIG,MAAJ,EAAY;AACVjB,YAAQI,MAAR,CAAe;AAAEC,WAAKY,OAAOZ;AAAd,KAAf,EAAoC;AAAEE,YAAM;AAAEK;AAAF;AAAR,KAApC,EADU,CAGZ;AACC,GAJD,MAIO;AACLE,aAASF,SAAT,GAAqBA,SAArB;AACAZ,YAAQmB,MAAR,CAAeL,QAAf;AACD;AACF,CAhCH","file":"/packages/erxes-notifications/server/methods.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nimport { Notifications, Configs } from '../notifications';\n\nMeteor.methods({\n  ['notifications.markAsRead'](ids) {\n    check(ids, [String]);\n\n    Notifications.update(\n      { _id: { $in: ids } },\n      { $set: { isRead: true } },\n      { multi: true }\n    );\n  },\n\n  ['notifications.getModules']() {\n    return Notifications.Modules;\n  },\n\n  ['notifications.saveConfig'](notifType, isAllowed) {\n    check(notifType, String);\n    check(isAllowed, Boolean);\n\n    const selector = { user: this.userId, notifType };\n\n    const oldOne = Configs.findOne(selector);\n\n    // if already inserted then update isAllowed field\n    if (oldOne) {\n      Configs.update({ _id: oldOne._id }, { $set: { isAllowed } });\n\n    // if it is first time then insert\n    } else {\n      selector.isAllowed = isAllowed;\n      Configs.insert(selector);\n    }\n  },\n});\n"]},"hash":"7adc4b8f9222ca6f204c2520e5b7dba3ab266f80"}
