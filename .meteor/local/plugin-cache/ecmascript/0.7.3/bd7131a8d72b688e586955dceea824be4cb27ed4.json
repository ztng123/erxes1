{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-bootstrap","imported":["FormGroup","ControlLabel","FormControl","Button"],"specifiers":[{"kind":"named","imported":"FormGroup","local":"FormGroup"},{"kind":"named","imported":"ControlLabel","local":"ControlLabel"},{"kind":"named","imported":"FormControl","local":"FormControl"},{"kind":"named","imported":"Button","local":"Button"}]},{"source":"meteor/erxes-notifier","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Alert"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/tags/components/Form.js","filenameRelative":"/imports/react-ui/tags/components/Form.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/tags/components/Form.js.map","sourceFileName":"/imports/react-ui/tags/components/Form.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Form"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar FormGroup = void 0,\n    ControlLabel = void 0,\n    FormControl = void 0,\n    Button = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  FormGroup: function (v) {\n    FormGroup = v;\n  },\n  ControlLabel: function (v) {\n    ControlLabel = v;\n  },\n  FormControl: function (v) {\n    FormControl = v;\n  },\n  Button: function (v) {\n    Button = v;\n  }\n}, 2);\nvar Alert = void 0;\nmodule.importSync(\"meteor/erxes-notifier\", {\n  \"default\": function (v) {\n    Alert = v;\n  }\n}, 3);\nvar propTypes = {\n  tag: PropTypes.object,\n  type: PropTypes.string.isRequired,\n  save: PropTypes.func.isRequired\n};\nvar contextTypes = {\n  closeModal: PropTypes.func.isRequired\n};\n\nvar Form = function (_Component) {\n  (0, _inherits3.default)(Form, _Component);\n\n  Form.generateRandomColorCode = function () {\n    function generateRandomColorCode() {\n      return \"#\" + Math.random().toString(16).slice(2, 8);\n    }\n\n    return generateRandomColorCode;\n  }();\n\n  function Form(props, context) {\n    (0, _classCallCheck3.default)(this, Form);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props, context));\n\n    var tag = props.tag;\n    _this.state = {\n      name: tag ? tag.name : '',\n      colorCode: tag ? tag.colorCode : Form.generateRandomColorCode()\n    };\n    _this.submit = _this.submit.bind(_this);\n    _this.handleName = _this.handleName.bind(_this);\n    _this.handleColorCode = _this.handleColorCode.bind(_this);\n    return _this;\n  }\n\n  Form.prototype.submit = function () {\n    function submit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var _props = this.props,\n          tag = _props.tag,\n          type = _props.type,\n          save = _props.save;\n      var _state = this.state,\n          name = _state.name,\n          colorCode = _state.colorCode;\n      save({\n        tag: tag,\n        doc: {\n          name: name,\n          type: type,\n          colorCode: colorCode\n        },\n        callback: function (error) {\n          if (error) {\n            return Alert.error(error.reason);\n          }\n\n          Alert.success('The tag has been saved successfully.');\n          return _this2.context.closeModal();\n        }\n      });\n    }\n\n    return submit;\n  }();\n\n  Form.prototype.handleName = function () {\n    function handleName(e) {\n      this.setState({\n        name: e.target.value\n      });\n    }\n\n    return handleName;\n  }();\n\n  Form.prototype.handleColorCode = function () {\n    function handleColorCode(e) {\n      this.setState({\n        colorCode: e.target.value\n      });\n    }\n\n    return handleColorCode;\n  }();\n\n  Form.prototype.render = function () {\n    function render() {\n      var _state2 = this.state,\n          name = _state2.name,\n          colorCode = _state2.colorCode;\n      return React.createElement(\n        \"form\",\n        {\n          onSubmit: this.submit\n        },\n        React.createElement(\n          FormGroup,\n          {\n            controlId: \"name\"\n          },\n          React.createElement(\n            ControlLabel,\n            null,\n            \"Name\"\n          ),\n          React.createElement(FormControl, {\n            type: \"text\",\n            value: name,\n            onChange: this.handleName,\n            required: true\n          })\n        ),\n        React.createElement(\n          FormGroup,\n          {\n            controlId: \"colorCode\"\n          },\n          React.createElement(\n            ControlLabel,\n            null,\n            \"Color code\"\n          ),\n          React.createElement(FormControl, {\n            type: \"color\",\n            value: colorCode,\n            onChange: this.handleColorCode\n          })\n        ),\n        React.createElement(\n          Button,\n          {\n            type: \"submit\"\n          },\n          \"Save\"\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.contextTypes = contextTypes;\nmodule.export(\"default\", exports.default = Form);","map":{"version":3,"sources":["/imports/react-ui/tags/components/Form.js"],"names":["React","Component","module","importSync","v","PropTypes","FormGroup","ControlLabel","FormControl","Button","Alert","propTypes","tag","object","type","string","isRequired","save","func","contextTypes","closeModal","Form","generateRandomColorCode","Math","random","toString","slice","props","context","state","name","colorCode","submit","bind","handleName","handleColorCode","e","preventDefault","doc","callback","error","reason","success","setState","target","value","render","export","exports","default"],"mappings":"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","file":"/imports/react-ui/tags/components/Form.js.map","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup, ControlLabel, FormControl, Button } from 'react-bootstrap';\nimport Alert from 'meteor/erxes-notifier';\n\nconst propTypes = {\n  tag: PropTypes.object,\n  type: PropTypes.string.isRequired,\n  save: PropTypes.func.isRequired,\n};\n\nconst contextTypes = {\n  closeModal: PropTypes.func.isRequired,\n};\n\nclass Form extends Component {\n  static generateRandomColorCode() {\n    return `#${Math.random().toString(16).slice(2, 8)}`;\n  }\n\n  constructor(props, context) {\n    super(props, context);\n\n    const { tag } = props;\n\n    this.state = {\n      name: tag ? tag.name : '',\n      colorCode: tag ? tag.colorCode : Form.generateRandomColorCode(),\n    };\n\n    this.submit = this.submit.bind(this);\n    this.handleName = this.handleName.bind(this);\n    this.handleColorCode = this.handleColorCode.bind(this);\n  }\n\n  submit(e) {\n    e.preventDefault();\n\n    const { tag, type, save } = this.props;\n    const { name, colorCode } = this.state;\n\n    save({\n      tag,\n      doc: { name, type, colorCode },\n      callback: error => {\n        if (error) {\n          return Alert.error(error.reason);\n        }\n\n        Alert.success('The tag has been saved successfully.');\n        return this.context.closeModal();\n      },\n    });\n  }\n\n  handleName(e) {\n    this.setState({ name: e.target.value });\n  }\n\n  handleColorCode(e) {\n    this.setState({ colorCode: e.target.value });\n  }\n\n  render() {\n    const { name, colorCode } = this.state;\n\n    return (\n      <form onSubmit={this.submit}>\n        <FormGroup controlId=\"name\">\n          <ControlLabel>Name</ControlLabel>\n          <FormControl type=\"text\" value={name} onChange={this.handleName} required />\n        </FormGroup>\n\n        <FormGroup controlId=\"colorCode\">\n          <ControlLabel>Color code</ControlLabel>\n          <FormControl type=\"color\" value={colorCode} onChange={this.handleColorCode} />\n        </FormGroup>\n\n        <Button type=\"submit\">Save</Button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = propTypes;\nForm.contextTypes = contextTypes;\n\nexport default Form;\n"]},"hash":"bd7131a8d72b688e586955dceea824be4cb27ed4"}
