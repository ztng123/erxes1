{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-bootstrap","imported":["Label"],"specifiers":[{"kind":"named","imported":"Label","local":"Label"}]},{"source":"meteor/kadira:flow-router","imported":["FlowRouter"],"specifiers":[{"kind":"named","imported":"FlowRouter","local":"FlowRouter"}]},{"source":"./Condition","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Condition"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/segments/components/Conditions.js","filenameRelative":"/imports/react-ui/segments/components/Conditions.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/segments/components/Conditions.js.map","sourceFileName":"/imports/react-ui/segments/components/Conditions.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Conditions"},"ignored":false,"code":"var React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar Label = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  Label: function (v) {\n    Label = v;\n  }\n}, 2);\nvar FlowRouter = void 0;\nmodule.importSync(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 3);\nvar Condition = void 0;\nmodule.importSync(\"./Condition\", {\n  \"default\": function (v) {\n    Condition = v;\n  }\n}, 4);\nvar propTypes = {\n  conditions: PropTypes.array.isRequired,\n  changeCondition: PropTypes.func.isRequired,\n  removeCondition: PropTypes.func.isRequired,\n  parentSegmentId: PropTypes.string\n};\n\nfunction Conditions(_ref) {\n  var conditions = _ref.conditions,\n      changeCondition = _ref.changeCondition,\n      removeCondition = _ref.removeCondition,\n      parentSegmentId = _ref.parentSegmentId;\n  return React.createElement(\n    \"div\",\n    null,\n    parentSegmentId ? React.createElement(\n      \"a\",\n      {\n        href: FlowRouter.path('segments/edit', {\n          id: parentSegmentId\n        }),\n        target: \"_blank\"\n      },\n      React.createElement(\n        \"h4\",\n        null,\n        React.createElement(\n          Label,\n          null,\n          \"Parent segment conditions \",\n          React.createElement(\"i\", {\n            className: \"ion-android-open\"\n          })\n        )\n      ),\n      React.createElement(\"br\", null)\n    ) : null,\n    conditions.map(function (condition) {\n      return React.createElement(Condition, {\n        condition: condition,\n        changeCondition: changeCondition,\n        removeCondition: removeCondition,\n        key: condition.field\n      });\n    })\n  );\n}\n\nConditions.propTypes = propTypes;\nmodule.export(\"default\", exports.default = Conditions);","map":{"version":3,"sources":["/imports/react-ui/segments/components/Conditions.js"],"names":["React","module","importSync","v","PropTypes","Label","FlowRouter","Condition","propTypes","conditions","array","isRequired","changeCondition","func","removeCondition","parentSegmentId","string","Conditions","path","id","map","condition","field","export","exports","default"],"mappings":"AAAA,IAAIA,cAAJ;AAAUC,OAAOC,UAAP,CAAkB,OAAlB,EAA0B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACH,YAAMG,CAAN;AAAQ;AAA7B,CAA1B,EAAyD,CAAzD;AAA4D,IAAIC,kBAAJ;AAAcH,OAAOC,UAAP,CAAkB,YAAlB,EAA+B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACC,gBAAUD,CAAV;AAAY;AAAjC,CAA/B,EAAkE,CAAlE;AAAqE,IAAIE,cAAJ;AAAUJ,OAAOC,UAAP,CAAkB,iBAAlB,EAAoC;AAACG,SAAM,UAASF,CAAT,EAAW;AAACE,YAAMF,CAAN;AAAQ;AAA3B,CAApC,EAAiE,CAAjE;AAAoE,IAAIG,mBAAJ;AAAeL,OAAOC,UAAP,CAAkB,2BAAlB,EAA8C;AAACI,cAAW,UAASH,CAAT,EAAW;AAACG,iBAAWH,CAAX;AAAa;AAArC,CAA9C,EAAqF,CAArF;AAAwF,IAAII,kBAAJ;AAAcN,OAAOC,UAAP,CAAkB,aAAlB,EAAgC;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACI,gBAAUJ,CAAV;AAAY;AAAjC,CAAhC,EAAmE,CAAnE;AAM5V,IAAMK,YAAY;AAChBC,cAAYL,UAAUM,KAAV,CAAgBC,UADZ;AAEhBC,mBAAiBR,UAAUS,IAAV,CAAeF,UAFhB;AAGhBG,mBAAiBV,UAAUS,IAAV,CAAeF,UAHhB;AAIhBI,mBAAiBX,UAAUY;AAJX,CAAlB;;AAOA,SAASC,UAAT,OAAuF;AAAA,MAAjER,UAAiE,QAAjEA,UAAiE;AAAA,MAArDG,eAAqD,QAArDA,eAAqD;AAAA,MAApCE,eAAoC,QAApCA,eAAoC;AAAA,MAAnBC,eAAmB,QAAnBA,eAAmB;AACrF,SACE;AAAA;AAAA;AACGA,sBACG;AAAA;AAAA;AAAG,cAAMT,WAAWY,IAAX,CAAgB,eAAhB,EAAiC;AAAEC,cAAIJ;AAAN,SAAjC,CAAT;AAAoE,gBAAO;AAA3E;AACE;AAAA;AAAA;AACE;AAAC,eAAD;AAAA;AAAA;AAC4B;AAAG,uBAAU;AAAb;AAD5B;AADF,OADF;AAME;AANF,KADH,GASG,IAVN;AAWGN,eAAWW,GAAX,CAAe;AAAA,aACd,oBAAC,SAAD;AACE,mBAAWC,SADb;AAEE,yBAAiBT,eAFnB;AAGE,yBAAiBE,eAHnB;AAIE,aAAKO,UAAUC;AAJjB,QADc;AAAA,KAAf;AAXH,GADF;AAsBD;;AAEDL,WAAWT,SAAX,GAAuBA,SAAvB;AAtCAP,OAAOsB,MAAP,CAAc,SAAd,EAAwBC,QAAQC,OAAR,GAwCTR,UAxCf","file":"/imports/react-ui/segments/components/Conditions.js.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from 'react-bootstrap';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport Condition from './Condition';\n\nconst propTypes = {\n  conditions: PropTypes.array.isRequired,\n  changeCondition: PropTypes.func.isRequired,\n  removeCondition: PropTypes.func.isRequired,\n  parentSegmentId: PropTypes.string,\n};\n\nfunction Conditions({ conditions, changeCondition, removeCondition, parentSegmentId }) {\n  return (\n    <div>\n      {parentSegmentId\n        ? <a href={FlowRouter.path('segments/edit', { id: parentSegmentId })} target=\"_blank\">\n            <h4>\n              <Label>\n                Parent segment conditions <i className=\"ion-android-open\" />\n              </Label>\n            </h4>\n            <br />\n          </a>\n        : null}\n      {conditions.map(condition => (\n        <Condition\n          condition={condition}\n          changeCondition={changeCondition}\n          removeCondition={removeCondition}\n          key={condition.field}\n        />\n      ))}\n    </div>\n  );\n}\n\nConditions.propTypes = propTypes;\n\nexport default Conditions;\n"]},"hash":"bdd976b2fa82883925fb73e56242c9df934ad97b"}
