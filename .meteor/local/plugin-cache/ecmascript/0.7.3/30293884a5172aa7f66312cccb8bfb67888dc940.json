{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","PropTypes","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"PropTypes","local":"PropTypes"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"moment","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"moment"}]},{"source":"react-bootstrap","imported":["Button"],"specifiers":[{"kind":"named","imported":"Button","local":"Button"}]},{"source":"meteor/erxes-notifier","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Alert"}]},{"source":"meteor/kadira:flow-router","imported":["FlowRouter"],"specifiers":[{"kind":"named","imported":"FlowRouter","local":"FlowRouter"}]},{"source":"/imports/react-ui/layout/components","imported":["Wrapper"],"specifiers":[{"kind":"named","imported":"Wrapper","local":"Wrapper"}]},{"source":"/imports/api/conversations/constants","imported":["CONVERSATION_STATUSES"],"specifiers":[{"kind":"named","imported":"CONVERSATION_STATUSES","local":"CONVERSATION_STATUSES"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/inbox/components/details/LeftSidebar.js","filenameRelative":"/imports/react-ui/inbox/components/details/LeftSidebar.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/inbox/components/details/LeftSidebar.js.map","sourceFileName":"/imports/react-ui/inbox/components/details/LeftSidebar.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"LeftSidebar"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    PropTypes = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar moment = void 0;\nmodule.importSync(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 1);\nvar Button = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  Button: function (v) {\n    Button = v;\n  }\n}, 2);\nvar Alert = void 0;\nmodule.importSync(\"meteor/erxes-notifier\", {\n  \"default\": function (v) {\n    Alert = v;\n  }\n}, 3);\nvar FlowRouter = void 0;\nmodule.importSync(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 4);\nvar Wrapper = void 0;\nmodule.importSync(\"/imports/react-ui/layout/components\", {\n  Wrapper: function (v) {\n    Wrapper = v;\n  }\n}, 5);\nvar CONVERSATION_STATUSES = void 0;\nmodule.importSync(\"/imports/api/conversations/constants\", {\n  CONVERSATION_STATUSES: function (v) {\n    CONVERSATION_STATUSES = v;\n  }\n}, 6);\nvar propTypes = {\n  conversation: PropTypes.object.isRequired,\n  messagesCount: PropTypes.number.isRequired,\n  changeStatus: PropTypes.func.isRequired\n};\n\nvar Sidebar = function (_Component) {\n  (0, _inherits3.default)(Sidebar, _Component);\n\n  function Sidebar(props) {\n    (0, _classCallCheck3.default)(this, Sidebar);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.state = {\n      selectedIntegration: FlowRouter.getQueryParam('integrationType') || 'All Integrations'\n    };\n    _this.changeStatus = _this.changeStatus.bind(_this);\n    return _this;\n  } // change resolved status\n\n\n  Sidebar.prototype.changeStatus = function () {\n    function changeStatus() {\n      var status = this.props.conversation.status;\n\n      if (status === CONVERSATION_STATUSES.CLOSED) {\n        status = CONVERSATION_STATUSES.OPEN;\n      } else {\n        status = CONVERSATION_STATUSES.CLOSED;\n      } // call change status method\n\n\n      this.props.changeStatus(this.props.conversation._id, status, function () {\n        if (status === CONVERSATION_STATUSES.CLOSED) {\n          Alert.success('The conversation has been resolved!');\n        } else {\n          Alert.info('The conversation has been reopened and restored to Inbox.');\n        }\n      });\n    }\n\n    return changeStatus;\n  }();\n\n  Sidebar.prototype.renderStatusButton = function () {\n    function renderStatusButton() {\n      var bsStyle = 'success';\n      var text = 'Resolve';\n      var icon = React.createElement(\"i\", {\n        className: \"ion-checkmark-circled\"\n      });\n\n      if (this.props.conversation.status === CONVERSATION_STATUSES.CLOSED) {\n        text = 'Open';\n        bsStyle = 'warning';\n        icon = React.createElement(\"i\", {\n          className: \"ion-refresh\"\n        });\n      }\n\n      return React.createElement(\n        Button,\n        {\n          bsStyle: bsStyle,\n          onClick: this.changeStatus,\n          className: \"action-btn\"\n        },\n        icon,\n        \" \",\n        text\n      );\n    }\n\n    return renderStatusButton;\n  }();\n\n  Sidebar.prototype.renderFacebookPostUrl = function () {\n    function renderFacebookPostUrl() {\n      var conversation = this.props.conversation;\n      var integration = conversation.integration || {};\n\n      if (integration.kind === 'facebook' && conversation.facebookData.kind === 'feed') {\n        var link = \"http://facebook.com/\" + conversation.facebookData.postId;\n        return React.createElement(\n          \"li\",\n          null,\n          \"Facebook URL\",\n          React.createElement(\n            \"span\",\n            {\n              className: \"counter\"\n            },\n            React.createElement(\n              \"a\",\n              {\n                target: \"_blank\",\n                href: link,\n                rel: \"noopener noreferrer\"\n              },\n              \"[view]\"\n            )\n          )\n        );\n      }\n\n      return null;\n    }\n\n    return renderFacebookPostUrl;\n  }();\n\n  Sidebar.prototype.render = function () {\n    function render() {\n      var Sidebar = Wrapper.Sidebar;\n      var Title = Wrapper.Sidebar.Section.Title;\n      var _props = this.props,\n          conversation = _props.conversation,\n          messagesCount = _props.messagesCount;\n      var _conversation$integra = conversation.integration,\n          integration = _conversation$integra === undefined ? {} : _conversation$integra;\n      var _integration$brand = integration.brand,\n          brand = _integration$brand === undefined ? {} : _integration$brand,\n          _integration$channels = integration.channels,\n          channels = _integration$channels === undefined ? [] : _integration$channels;\n      return React.createElement(\n        Sidebar,\n        {\n          fixedContent: this.renderStatusButton()\n        },\n        React.createElement(\n          Wrapper.Sidebar.Section,\n          null,\n          React.createElement(\n            Title,\n            null,\n            \"Conversation Details\"\n          ),\n          React.createElement(\n            \"ul\",\n            {\n              className: \"sidebar-list no-link\"\n            },\n            React.createElement(\n              \"li\",\n              null,\n              \"Opened\",\n              React.createElement(\n                \"span\",\n                {\n                  className: \"counter\"\n                },\n                moment(conversation.createdAt).fromNow()\n              )\n            ),\n            React.createElement(\n              \"li\",\n              null,\n              \"Channels\",\n              React.createElement(\n                \"div\",\n                {\n                  className: \"value\"\n                },\n                channels.map(function (c) {\n                  return React.createElement(\n                    \"span\",\n                    {\n                      key: c._id\n                    },\n                    c.name\n                  );\n                })\n              )\n            ),\n            React.createElement(\n              \"li\",\n              null,\n              \"Brand\",\n              React.createElement(\n                \"span\",\n                {\n                  className: \"counter\"\n                },\n                brand.name\n              )\n            ),\n            React.createElement(\n              \"li\",\n              null,\n              \"Integration\",\n              React.createElement(\n                \"span\",\n                {\n                  className: \"counter\"\n                },\n                integration.kind\n              )\n            ),\n            React.createElement(\n              \"li\",\n              null,\n              \"Conversations\",\n              React.createElement(\n                \"span\",\n                {\n                  className: \"counter\"\n                },\n                messagesCount\n              )\n            ),\n            this.renderFacebookPostUrl()\n          )\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return Sidebar;\n}(Component);\n\nSidebar.propTypes = propTypes;\nmodule.export(\"default\", exports.default = Sidebar);","map":{"version":3,"sources":["/imports/react-ui/inbox/components/details/LeftSidebar.js"],"names":["React","PropTypes","Component","module","importSync","v","moment","Button","Alert","FlowRouter","Wrapper","CONVERSATION_STATUSES","propTypes","conversation","object","isRequired","messagesCount","number","changeStatus","func","Sidebar","props","state","selectedIntegration","getQueryParam","bind","status","CLOSED","OPEN","_id","success","info","renderStatusButton","bsStyle","text","icon","renderFacebookPostUrl","integration","kind","facebookData","link","postId","render","Title","Section","brand","channels","createdAt","fromNow","map","c","name","export","exports","default"],"mappings":"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","file":"/imports/react-ui/inbox/components/details/LeftSidebar.js.map","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport moment from 'moment';\nimport { Button } from 'react-bootstrap';\nimport Alert from 'meteor/erxes-notifier';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Wrapper } from '/imports/react-ui/layout/components';\nimport { CONVERSATION_STATUSES } from '/imports/api/conversations/constants';\n\nconst propTypes = {\n  conversation: PropTypes.object.isRequired,\n  messagesCount: PropTypes.number.isRequired,\n  changeStatus: PropTypes.func.isRequired,\n};\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedIntegration: FlowRouter.getQueryParam('integrationType') || 'All Integrations',\n    };\n\n    this.changeStatus = this.changeStatus.bind(this);\n  }\n\n  // change resolved status\n  changeStatus() {\n    let status = this.props.conversation.status;\n\n    if (status === CONVERSATION_STATUSES.CLOSED) {\n      status = CONVERSATION_STATUSES.OPEN;\n    } else {\n      status = CONVERSATION_STATUSES.CLOSED;\n    }\n\n    // call change status method\n    this.props.changeStatus(this.props.conversation._id, status, () => {\n      if (status === CONVERSATION_STATUSES.CLOSED) {\n        Alert.success('The conversation has been resolved!');\n      } else {\n        Alert.info('The conversation has been reopened and restored to Inbox.');\n      }\n    });\n  }\n\n  renderStatusButton() {\n    let bsStyle = 'success';\n    let text = 'Resolve';\n    let icon = <i className=\"ion-checkmark-circled\" />;\n\n    if (this.props.conversation.status === CONVERSATION_STATUSES.CLOSED) {\n      text = 'Open';\n      bsStyle = 'warning';\n      icon = <i className=\"ion-refresh\" />;\n    }\n\n    return (\n      <Button bsStyle={bsStyle} onClick={this.changeStatus} className=\"action-btn\">\n        {icon} {text}\n      </Button>\n    );\n  }\n\n  renderFacebookPostUrl() {\n    const conversation = this.props.conversation;\n    const integration = conversation.integration || {};\n\n    if (integration.kind === 'facebook' && conversation.facebookData.kind === 'feed') {\n      const link = `http://facebook.com/${conversation.facebookData.postId}`;\n      return (\n        <li>\n          Facebook URL\n          <span className=\"counter\">\n            <a target=\"_blank\" href={link} rel=\"noopener noreferrer\">\n              [view]\n            </a>\n          </span>\n        </li>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const Sidebar = Wrapper.Sidebar;\n\n    const { Title } = Wrapper.Sidebar.Section;\n    const { conversation, messagesCount } = this.props;\n    const { integration = {} } = conversation;\n    const { brand = {}, channels = [] } = integration;\n\n    return (\n      <Sidebar fixedContent={this.renderStatusButton()}>\n        <Wrapper.Sidebar.Section>\n          <Title>Conversation Details</Title>\n\n          <ul className=\"sidebar-list no-link\">\n            <li>\n              Opened\n              <span className=\"counter\">{moment(conversation.createdAt).fromNow()}</span>\n            </li>\n            <li>\n              Channels\n              <div className=\"value\">\n                {channels.map(c => (\n                  <span key={c._id}>\n                    {c.name}\n                  </span>\n                ))}\n              </div>\n            </li>\n            <li>\n              Brand\n              <span className=\"counter\">{brand.name}</span>\n            </li>\n            <li>\n              Integration\n              <span className=\"counter\">{integration.kind}</span>\n            </li>\n            <li>\n              Conversations\n              <span className=\"counter\">{messagesCount}</span>\n            </li>\n            {this.renderFacebookPostUrl()}\n          </ul>\n        </Wrapper.Sidebar.Section>\n      </Sidebar>\n    );\n  }\n}\n\nSidebar.propTypes = propTypes;\n\nexport default Sidebar;\n"]},"hash":"30293884a5172aa7f66312cccb8bfb67888dc940"}
