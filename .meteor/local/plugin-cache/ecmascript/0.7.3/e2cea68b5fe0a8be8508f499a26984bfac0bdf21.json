{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"classnames","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"classNames"}]},{"source":"moment","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"moment"}]},{"source":"meteor/kadira:flow-router","imported":["FlowRouter"],"specifiers":[{"kind":"named","imported":"FlowRouter","local":"FlowRouter"}]},{"source":"/imports/react-ui/common","imported":["NameCard","Tip"],"specifiers":[{"kind":"named","imported":"NameCard","local":"NameCard"},{"kind":"named","imported":"Tip","local":"Tip"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/layout/components/Notifications/NotificationListRow.js","filenameRelative":"/imports/react-ui/layout/components/Notifications/NotificationListRow.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/layout/components/Notifications/NotificationListRow.js.map","sourceFileName":"/imports/react-ui/layout/components/Notifications/NotificationListRow.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"NotificationListRow"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar classNames = void 0;\nmodule.importSync(\"classnames\", {\n  \"default\": function (v) {\n    classNames = v;\n  }\n}, 2);\nvar moment = void 0;\nmodule.importSync(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 3);\nvar FlowRouter = void 0;\nmodule.importSync(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 4);\nvar NameCard = void 0,\n    Tip = void 0;\nmodule.importSync(\"/imports/react-ui/common\", {\n  NameCard: function (v) {\n    NameCard = v;\n  },\n  Tip: function (v) {\n    Tip = v;\n  }\n}, 5);\n\nvar NotificationListRow = function (_Component) {\n  (0, _inherits3.default)(NotificationListRow, _Component);\n\n  function NotificationListRow(props) {\n    (0, _classCallCheck3.default)(this, NotificationListRow);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.goNotification = _this.goNotification.bind(_this);\n    _this.markAsRead = _this.markAsRead.bind(_this);\n    return _this;\n  }\n\n  NotificationListRow.prototype.goNotification = function () {\n    function goNotification() {\n      var notification = this.props.notification;\n      this.markAsRead();\n      FlowRouter.go(notification.link);\n    }\n\n    return goNotification;\n  }();\n\n  NotificationListRow.prototype.markAsRead = function () {\n    function markAsRead() {\n      var _props = this.props,\n          notification = _props.notification,\n          markAsRead = _props.markAsRead;\n\n      if (!notification.isRead) {\n        markAsRead(notification._id);\n      }\n    }\n\n    return markAsRead;\n  }();\n\n  NotificationListRow.prototype.render = function () {\n    function render() {\n      var _classNames;\n\n      var _props2 = this.props,\n          notification = _props2.notification,\n          createdUser = _props2.createdUser;\n      var notifType = notification.notifType,\n          isRead = notification.isRead;\n      var classes = classNames((_classNames = {}, _classNames[notifType] = !isRead, _classNames.unread = !isRead, _classNames));\n      return React.createElement(\n        \"li\",\n        {\n          className: classes\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"body\",\n            onClick: this.goNotification\n          },\n          React.createElement(NameCard, {\n            user: createdUser,\n            firstLine: notification.title,\n            secondLine: moment(notification.date).format('DD MMM YYYY, HH:mm')\n          })\n        ),\n        React.createElement(\n          \"div\",\n          {\n            className: \"column markRead\"\n          },\n          React.createElement(\n            Tip,\n            {\n              text: \"Mark as Read\"\n            },\n            React.createElement(\n              \"span\",\n              {\n                onClick: this.markAsRead\n              },\n              React.createElement(\"i\", {\n                className: \"ion-android-radio-button-off\"\n              })\n            )\n          )\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return NotificationListRow;\n}(Component);\n\nNotificationListRow.propTypes = {\n  notification: PropTypes.object.isRequired,\n  markAsRead: PropTypes.func.isRequired,\n  createdUser: PropTypes.object\n};\nmodule.export(\"default\", exports.default = NotificationListRow);","map":{"version":3,"sources":["/imports/react-ui/layout/components/Notifications/NotificationListRow.js"],"names":["React","Component","module","importSync","v","PropTypes","classNames","moment","FlowRouter","NameCard","Tip","NotificationListRow","props","goNotification","bind","markAsRead","notification","go","link","isRead","_id","render","createdUser","notifType","classes","unread","title","date","format","propTypes","object","isRequired","func","export","exports","default"],"mappings":"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","file":"/imports/react-ui/layout/components/Notifications/NotificationListRow.js.map","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { NameCard, Tip } from '/imports/react-ui/common';\n\nclass NotificationListRow extends Component {\n  constructor(props) {\n    super(props);\n\n    this.goNotification = this.goNotification.bind(this);\n    this.markAsRead = this.markAsRead.bind(this);\n  }\n\n  goNotification() {\n    const { notification } = this.props;\n    this.markAsRead();\n    FlowRouter.go(notification.link);\n  }\n\n  markAsRead() {\n    const { notification, markAsRead } = this.props;\n    if (!notification.isRead) {\n      markAsRead(notification._id);\n    }\n  }\n\n  render() {\n    const { notification, createdUser } = this.props;\n    const { notifType, isRead } = notification;\n    const classes = classNames({\n      [notifType]: !isRead,\n      unread: !isRead,\n    });\n\n    return (\n      <li className={classes}>\n        <div className=\"body\" onClick={this.goNotification}>\n          <NameCard\n            user={createdUser}\n            firstLine={notification.title}\n            secondLine={moment(notification.date).format('DD MMM YYYY, HH:mm')}\n          />\n        </div>\n        <div className=\"column markRead\">\n          <Tip text=\"Mark as Read\">\n            <span onClick={this.markAsRead}>\n              <i className=\"ion-android-radio-button-off\" />\n            </span>\n          </Tip>\n        </div>\n      </li>\n    );\n  }\n}\n\nNotificationListRow.propTypes = {\n  notification: PropTypes.object.isRequired,\n  markAsRead: PropTypes.func.isRequired,\n  createdUser: PropTypes.object,\n};\n\nexport default NotificationListRow;\n"]},"hash":"e2cea68b5fe0a8be8508f499a26984bfac0bdf21"}
