{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]},{"source":"meteor/mdg:validated-method","imported":["ValidatedMethod"],"specifiers":[{"kind":"named","imported":"ValidatedMethod","local":"ValidatedMethod"}]},{"source":"meteor/underscore","imported":["_"],"specifiers":[{"kind":"named","imported":"_","local":"_"}]},{"source":"/imports/api/utils","imported":["ErxesMixin"],"specifiers":[{"kind":"named","imported":"ErxesMixin","local":"ErxesMixin"}]},{"source":"../../integrations","imported":["Integrations"],"specifiers":[{"kind":"named","imported":"Integrations","local":"Integrations"}]},{"source":"../../constants","imported":["KIND_CHOICES"],"specifiers":[{"kind":"named","imported":"KIND_CHOICES","local":"KIND_CHOICES"}]},{"source":"./twitter","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"twitter"}]},{"source":"./facebook","imported":["getPageList"],"specifiers":[{"kind":"named","imported":"getPageList","local":"getPageList"}]}],"exports":{"exported":["addTwitter","addFacebook","getFacebookAppList","getFacebookPageList"],"specifiers":[{"kind":"local","local":"addTwitter","exported":"addTwitter"},{"kind":"local","local":"addFacebook","exported":"addFacebook"},{"kind":"local","local":"getFacebookAppList","exported":"getFacebookAppList"},{"kind":"local","local":"getFacebookPageList","exported":"getFacebookPageList"}]}}},"options":{"filename":"/imports/api/integrations/social/server/methods.js","filenameRelative":"/imports/api/integrations/social/server/methods.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/api/integrations/social/server/methods.js.map","sourceFileName":"/imports/api/integrations/social/server/methods.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"methods"},"ignored":false,"code":"module.export({\n  addTwitter: function () {\n    return addTwitter;\n  },\n  addFacebook: function () {\n    return addFacebook;\n  },\n  getFacebookAppList: function () {\n    return getFacebookAppList;\n  },\n  getFacebookPageList: function () {\n    return getFacebookPageList;\n  }\n});\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar check = void 0;\nmodule.importSync(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  }\n}, 1);\nvar ValidatedMethod = void 0;\nmodule.importSync(\"meteor/mdg:validated-method\", {\n  ValidatedMethod: function (v) {\n    ValidatedMethod = v;\n  }\n}, 2);\n\nvar _ = void 0;\n\nmodule.importSync(\"meteor/underscore\", {\n  _: function (v) {\n    _ = v;\n  }\n}, 3);\nvar ErxesMixin = void 0;\nmodule.importSync(\"/imports/api/utils\", {\n  ErxesMixin: function (v) {\n    ErxesMixin = v;\n  }\n}, 4);\nvar Integrations = void 0;\nmodule.importSync(\"../../integrations\", {\n  Integrations: function (v) {\n    Integrations = v;\n  }\n}, 5);\nvar KIND_CHOICES = void 0;\nmodule.importSync(\"../../constants\", {\n  KIND_CHOICES: function (v) {\n    KIND_CHOICES = v;\n  }\n}, 6);\nvar twitter = void 0;\nmodule.importSync(\"./twitter\", {\n  \"default\": function (v) {\n    twitter = v;\n  }\n}, 7);\nvar getPageList = void 0;\nmodule.importSync(\"./facebook\", {\n  getPageList: function (v) {\n    getPageList = v;\n  }\n}, 8);\nvar addTwitter = new ValidatedMethod({\n  name: 'integrations.addTwitter',\n  mixins: [ErxesMixin],\n  validate: function (doc) {\n    check(doc, {\n      brandId: String,\n      queryParams: Object\n    });\n  },\n  run: function (_ref) {\n    var brandId = _ref.brandId,\n        queryParams = _ref.queryParams;\n    // authenticate via twitter and get logged in user's infos\n    twitter.authenticate(queryParams, function (doc) {\n      var id = Integrations.insert(Object.assign(doc, {\n        brandId: brandId,\n        kind: KIND_CHOICES.TWITTER\n      })); // start tracking newly created twitter integration\n\n      var integration = Integrations.findOne({\n        _id: id\n      });\n      twitter.trackIntegration(integration);\n    });\n  }\n});\nvar addFacebook = new ValidatedMethod({\n  name: 'integrations.addFacebook',\n  mixins: [ErxesMixin],\n  validate: function (doc) {\n    check(doc, {\n      name: String,\n      appId: String,\n      brandId: String,\n      pageIds: [String]\n    });\n  },\n  run: function (_ref2) {\n    var name = _ref2.name,\n        appId = _ref2.appId,\n        brandId = _ref2.brandId,\n        pageIds = _ref2.pageIds;\n    return Integrations.insert({\n      name: name,\n      kind: KIND_CHOICES.FACEBOOK,\n      brandId: brandId,\n      facebookData: {\n        appId: appId,\n        pageIds: pageIds\n      }\n    });\n  }\n});\nvar getFacebookAppList = new ValidatedMethod({\n  name: 'integrations.getFacebookAppList',\n  mixins: [ErxesMixin],\n  validate: function () {},\n  run: function () {\n    return _.map(Meteor.settings.services.facebook, function (app) {\n      return {\n        id: app.id,\n        name: app.name\n      };\n    });\n  }\n});\nvar getFacebookPageList = new ValidatedMethod({\n  name: 'integrations.getFacebookPageList',\n  mixins: [ErxesMixin],\n  validate: function (_ref3) {\n    var appId = _ref3.appId;\n    check(appId, String);\n  },\n  run: function (_ref4) {\n    var appId = _ref4.appId;\n\n    var app = _.find(Meteor.settings.services.facebook, function (a) {\n      return a.id === appId;\n    });\n\n    if (!app) {\n      return [];\n    }\n\n    return getPageList(app.accessToken);\n  }\n});","map":{"version":3,"sources":["/imports/api/integrations/social/server/methods.js"],"names":["module","export","addTwitter","addFacebook","getFacebookAppList","getFacebookPageList","Meteor","importSync","v","check","ValidatedMethod","_","ErxesMixin","Integrations","KIND_CHOICES","twitter","getPageList","name","mixins","validate","doc","brandId","String","queryParams","Object","run","authenticate","id","insert","assign","kind","TWITTER","integration","findOne","_id","trackIntegration","appId","pageIds","FACEBOOK","facebookData","map","settings","services","facebook","app","find","a","accessToken"],"mappings":"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","file":"/imports/api/integrations/social/server/methods.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport { ValidatedMethod } from 'meteor/mdg:validated-method';\nimport { _ } from 'meteor/underscore';\nimport { ErxesMixin } from '/imports/api/utils';\nimport { Integrations } from '../../integrations';\nimport { KIND_CHOICES } from '../../constants';\nimport twitter from './twitter';\nimport { getPageList } from './facebook';\n\n// add twitter\nexport const addTwitter = new ValidatedMethod({\n  name: 'integrations.addTwitter',\n  mixins: [ErxesMixin],\n\n  validate(doc) {\n    check(doc, { brandId: String, queryParams: Object });\n  },\n\n  run({ brandId, queryParams }) {\n    // authenticate via twitter and get logged in user's infos\n    twitter.authenticate(queryParams, doc => {\n      const id = Integrations.insert(Object.assign(doc, { brandId, kind: KIND_CHOICES.TWITTER }));\n\n      // start tracking newly created twitter integration\n      const integration = Integrations.findOne({ _id: id });\n      twitter.trackIntegration(integration);\n    });\n  },\n});\n\n// add facebook\nexport const addFacebook = new ValidatedMethod({\n  name: 'integrations.addFacebook',\n  mixins: [ErxesMixin],\n\n  validate(doc) {\n    check(doc, {\n      name: String,\n      appId: String,\n      brandId: String,\n      pageIds: [String],\n    });\n  },\n\n  run({ name, appId, brandId, pageIds }) {\n    return Integrations.insert({\n      name,\n      kind: KIND_CHOICES.FACEBOOK,\n      brandId,\n      facebookData: {\n        appId,\n        pageIds,\n      },\n    });\n  },\n});\n\n// get facebook apps's list from settings.json\nexport const getFacebookAppList = new ValidatedMethod({\n  name: 'integrations.getFacebookAppList',\n  mixins: [ErxesMixin],\n\n  validate() {},\n\n  run() {\n    return _.map(Meteor.settings.services.facebook, app => ({\n      id: app.id,\n      name: app.name,\n    }));\n  },\n});\n\n// get facebook apps's page list from settings.json\nexport const getFacebookPageList = new ValidatedMethod({\n  name: 'integrations.getFacebookPageList',\n  mixins: [ErxesMixin],\n\n  validate({ appId }) {\n    check(appId, String);\n  },\n\n  run({ appId }) {\n    const app = _.find(Meteor.settings.services.facebook, a => a.id === appId);\n\n    if (!app) {\n      return [];\n    }\n\n    return getPageList(app.accessToken);\n  },\n});\n"]},"hash":"07f73e80c095911ff8d9c8c759a47eae8e745890"}
