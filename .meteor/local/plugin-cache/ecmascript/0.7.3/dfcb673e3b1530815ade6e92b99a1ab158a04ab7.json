{"metadata":{"usedHelpers":["extends","taggedTemplateLiteralLoose","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"meteor/kadira:flow-router","imported":["FlowRouter"],"specifiers":[{"kind":"named","imported":"FlowRouter","local":"FlowRouter"}]},{"source":"react-apollo","imported":["compose","gql","graphql"],"specifiers":[{"kind":"named","imported":"compose","local":"compose"},{"kind":"named","imported":"gql","local":"gql"},{"kind":"named","imported":"graphql","local":"graphql"}]},{"source":"meteor/erxes-notifier","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Alert"}]},{"source":"../components","imported":["Facebook"],"specifiers":[{"kind":"named","imported":"Facebook","local":"Facebook"}]},{"source":"/imports/react-ui/common","imported":["Spinner"],"specifiers":[{"kind":"named","imported":"Spinner","local":"Spinner"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/settings/integrations/containers/Facebook.js","filenameRelative":"/imports/react-ui/settings/integrations/containers/Facebook.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/settings/integrations/containers/Facebook.js.map","sourceFileName":"/imports/react-ui/settings/integrations/containers/Facebook.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Facebook"},"ignored":false,"code":"var _taggedTemplateLiteralLoose2 = require(\"babel-runtime/helpers/taggedTemplateLiteralLoose\");\n\nvar _taggedTemplateLiteralLoose3 = _interopRequireDefault(_taggedTemplateLiteralLoose2);\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _templateObject = (0, _taggedTemplateLiteralLoose3.default)([\"\\n      query brands {\\n        brands {\\n          _id\\n          name\\n        }\\n      }\\n    \"], [\"\\n      query brands {\\n        brands {\\n          _id\\n          name\\n        }\\n      }\\n    \"]);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 1);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 2);\nvar FlowRouter = void 0;\nmodule.importSync(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 3);\nvar compose = void 0,\n    gql = void 0,\n    graphql = void 0;\nmodule.importSync(\"react-apollo\", {\n  compose: function (v) {\n    compose = v;\n  },\n  gql: function (v) {\n    gql = v;\n  },\n  graphql: function (v) {\n    graphql = v;\n  }\n}, 4);\nvar Alert = void 0;\nmodule.importSync(\"meteor/erxes-notifier\", {\n  \"default\": function (v) {\n    Alert = v;\n  }\n}, 5);\nvar Facebook = void 0;\nmodule.importSync(\"../components\", {\n  Facebook: function (v) {\n    Facebook = v;\n  }\n}, 6);\nvar Spinner = void 0;\nmodule.importSync(\"/imports/react-ui/common\", {\n  Spinner: function (v) {\n    Spinner = v;\n  }\n}, 7);\n\nvar FacebookContainer = function (props) {\n  var brandsQuery = props.brandsQuery;\n\n  if (brandsQuery.loading) {\n    return React.createElement(Spinner, null);\n  }\n\n  var brands = brandsQuery.brands;\n\n  var save = function (doc) {\n    Meteor.call('integrations.addFacebook', doc, function (error) {\n      if (error) {\n        return Alert.error(error.error);\n      }\n\n      Alert.success('Congrats');\n      return FlowRouter.go('/settings/integrations/list');\n    });\n  };\n\n  var updatedProps = (0, _extends3.default)({}, props, {\n    brands: brands,\n    save: save\n  });\n  return React.createElement(Facebook, updatedProps);\n};\n\nFacebookContainer.propTypes = {\n  type: PropTypes.string,\n  brandsQuery: PropTypes.object\n};\nmodule.export(\"default\", exports.default = compose(graphql(gql(_templateObject), {\n  name: 'brandsQuery',\n  options: function () {\n    return {\n      fetchPolicy: 'network-only'\n    };\n  }\n}))(FacebookContainer));","map":{"version":3,"sources":["/imports/react-ui/settings/integrations/containers/Facebook.js"],"names":["Meteor","module","importSync","v","React","PropTypes","FlowRouter","compose","gql","graphql","Alert","Facebook","Spinner","FacebookContainer","brandsQuery","props","loading","brands","save","call","doc","error","success","go","updatedProps","propTypes","type","string","object","export","exports","default","name","options","fetchPolicy"],"mappings":";;;;;;;;;;;;AAAA,IAAIA,eAAJ;AAAWC,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACF,UAAO,UAASG,CAAT,EAAW;AAACH,aAAOG,CAAP;AAAS;AAA7B,CAAlC,EAAiE,CAAjE;AAAoE,IAAIC,cAAJ;AAAUH,OAAOC,UAAP,CAAkB,OAAlB,EAA0B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACC,YAAMD,CAAN;AAAQ;AAA7B,CAA1B,EAAyD,CAAzD;AAA4D,IAAIE,kBAAJ;AAAcJ,OAAOC,UAAP,CAAkB,YAAlB,EAA+B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACE,gBAAUF,CAAV;AAAY;AAAjC,CAA/B,EAAkE,CAAlE;AAAqE,IAAIG,mBAAJ;AAAeL,OAAOC,UAAP,CAAkB,2BAAlB,EAA8C;AAACI,cAAW,UAASH,CAAT,EAAW;AAACG,iBAAWH,CAAX;AAAa;AAArC,CAA9C,EAAqF,CAArF;AAAwF,IAAII,gBAAJ;AAAA,IAAYC,YAAZ;AAAA,IAAgBC,gBAAhB;AAAwBR,OAAOC,UAAP,CAAkB,cAAlB,EAAiC;AAACK,WAAQ,UAASJ,CAAT,EAAW;AAACI,cAAQJ,CAAR;AAAU,GAA/B;AAAgCK,OAAI,UAASL,CAAT,EAAW;AAACK,UAAIL,CAAJ;AAAM,GAAtD;AAAuDM,WAAQ,UAASN,CAAT,EAAW;AAACM,cAAQN,CAAR;AAAU;AAArF,CAAjC,EAAwH,CAAxH;AAA2H,IAAIO,cAAJ;AAAUT,OAAOC,UAAP,CAAkB,uBAAlB,EAA0C;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACO,YAAMP,CAAN;AAAQ;AAA7B,CAA1C,EAAyE,CAAzE;AAA4E,IAAIQ,iBAAJ;AAAaV,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACS,YAAS,UAASR,CAAT,EAAW;AAACQ,eAASR,CAAT;AAAW;AAAjC,CAAlC,EAAqE,CAArE;AAAwE,IAAIS,gBAAJ;AAAYX,OAAOC,UAAP,CAAkB,0BAAlB,EAA6C;AAACU,WAAQ,UAAST,CAAT,EAAW;AAACS,cAAQT,CAAR;AAAU;AAA/B,CAA7C,EAA8E,CAA9E;;AASzpB,IAAMU,oBAAoB,iBAAS;AAAA,MACzBC,WADyB,GACTC,KADS,CACzBD,WADyB;;AAGjC,MAAIA,YAAYE,OAAhB,EAAyB;AACvB,WAAO,oBAAC,OAAD,OAAP;AACD;;AAED,MAAMC,SAASH,YAAYG,MAA3B;;AAEA,MAAMC,OAAO,eAAO;AAClBlB,WAAOmB,IAAP,CAAY,0BAAZ,EAAwCC,GAAxC,EAA6C,iBAAS;AACpD,UAAIC,KAAJ,EAAW;AACT,eAAOX,MAAMW,KAAN,CAAYA,MAAMA,KAAlB,CAAP;AACD;;AAEDX,YAAMY,OAAN,CAAc,UAAd;AACA,aAAOhB,WAAWiB,EAAX,CAAc,6BAAd,CAAP;AACD,KAPD;AAQD,GATD;;AAWA,MAAMC,0CACDT,KADC;AAEJE,kBAFI;AAGJC;AAHI,IAAN;AAMA,SAAO,oBAAC,QAAD,EAAcM,YAAd,CAAP;AACD,CA3BD;;AA6BAX,kBAAkBY,SAAlB,GAA8B;AAC5BC,QAAMrB,UAAUsB,MADY;AAE5Bb,eAAaT,UAAUuB;AAFK,CAA9B;AAtCA3B,OAAO4B,MAAP,CAAc,SAAd,EAAwBC,QAAQC,OAAR,GA2CTxB,QACbE,QACED,GADF,mBASE;AACEwB,QAAM,aADR;AAEEC,WAAS;AAAA,WAAO;AACdC,mBAAa;AADC,KAAP;AAAA;AAFX,CATF,CADa,EAiBbrB,iBAjBa,CA3Cf","file":"/imports/react-ui/settings/integrations/containers/Facebook.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { compose, gql, graphql } from 'react-apollo';\nimport Alert from 'meteor/erxes-notifier';\nimport { Facebook } from '../components';\nimport { Spinner } from '/imports/react-ui/common';\n\nconst FacebookContainer = props => {\n  const { brandsQuery } = props;\n\n  if (brandsQuery.loading) {\n    return <Spinner />;\n  }\n\n  const brands = brandsQuery.brands;\n\n  const save = doc => {\n    Meteor.call('integrations.addFacebook', doc, error => {\n      if (error) {\n        return Alert.error(error.error);\n      }\n\n      Alert.success('Congrats');\n      return FlowRouter.go('/settings/integrations/list');\n    });\n  };\n\n  const updatedProps = {\n    ...props,\n    brands,\n    save,\n  };\n\n  return <Facebook {...updatedProps} />;\n};\n\nFacebookContainer.propTypes = {\n  type: PropTypes.string,\n  brandsQuery: PropTypes.object,\n};\n\nexport default compose(\n  graphql(\n    gql`\n      query brands {\n        brands {\n          _id\n          name\n        }\n      }\n    `,\n    {\n      name: 'brandsQuery',\n      options: () => ({\n        fetchPolicy: 'network-only',\n      }),\n    },\n  ),\n)(FacebookContainer);\n"]},"hash":"dfcb673e3b1530815ade6e92b99a1ab158a04ab7"}
