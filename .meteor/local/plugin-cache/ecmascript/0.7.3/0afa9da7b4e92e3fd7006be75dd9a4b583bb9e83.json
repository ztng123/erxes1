{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/erxes-notifier","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Alert"}]},{"source":"meteor/kadira:flow-router","imported":["FlowRouter"],"specifiers":[{"kind":"named","imported":"FlowRouter","local":"FlowRouter"}]},{"source":"react-komposer","imported":["compose"],"specifiers":[{"kind":"named","imported":"compose","local":"compose"}]},{"source":"/imports/react-ui/utils","imported":["getTrackerLoader","composerOptions"],"specifiers":[{"kind":"named","imported":"getTrackerLoader","local":"getTrackerLoader"},{"kind":"named","imported":"composerOptions","local":"composerOptions"}]},{"source":"../components","imported":["MessageListRow"],"specifiers":[{"kind":"named","imported":"MessageListRow","local":"MessageListRow"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/engage/containers/MessageListRow.js","filenameRelative":"/imports/react-ui/engage/containers/MessageListRow.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/engage/containers/MessageListRow.js.map","sourceFileName":"/imports/react-ui/engage/containers/MessageListRow.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"MessageListRow"},"ignored":false,"code":"var Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Alert = void 0;\nmodule.importSync(\"meteor/erxes-notifier\", {\n  \"default\": function (v) {\n    Alert = v;\n  }\n}, 1);\nvar FlowRouter = void 0;\nmodule.importSync(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 2);\nvar compose = void 0;\nmodule.importSync(\"react-komposer\", {\n  compose: function (v) {\n    compose = v;\n  }\n}, 3);\nvar getTrackerLoader = void 0,\n    composerOptions = void 0;\nmodule.importSync(\"/imports/react-ui/utils\", {\n  getTrackerLoader: function (v) {\n    getTrackerLoader = v;\n  },\n  composerOptions: function (v) {\n    composerOptions = v;\n  }\n}, 4);\nvar MessageListRow = void 0;\nmodule.importSync(\"../components\", {\n  MessageListRow: function (v) {\n    MessageListRow = v;\n  }\n}, 5);\n\nfunction composer(_ref, onData) {\n  var message = _ref.message,\n      refetch = _ref.refetch;\n  var messageId = message._id;\n\n  var edit = function () {\n    FlowRouter.go(\"/engage/messages/edit/\" + messageId);\n  };\n\n  var remove = function () {\n    if (!confirm('Are you sure?')) return; // eslint-disable-line no-alert\n\n    Meteor.call('engage.messages.remove', messageId, function (error) {\n      if (error) {\n        return Alert.error(\"Can't delete a message\", error.reason);\n      }\n\n      refetch();\n      return Alert.success('Congrats', 'Message has deleted.');\n    });\n  };\n\n  var setLive = function () {\n    Meteor.call('engage.messages.setLive', messageId, function () {\n      refetch();\n      return Alert.success('Live');\n    });\n  };\n\n  var setLiveManual = function () {\n    Meteor.call('engage.messages.setLiveManual', messageId, function () {\n      refetch();\n      return Alert.success('Live');\n    });\n  };\n\n  var setPause = function () {\n    Meteor.call('engage.messages.setPause', messageId, function () {\n      refetch();\n      return Alert.success('Paused');\n    });\n  };\n\n  onData(null, {\n    edit: edit,\n    remove: remove,\n    setLive: setLive,\n    setLiveManual: setLiveManual,\n    setPause: setPause\n  });\n}\n\nmodule.export(\"default\", exports.default = compose(getTrackerLoader(composer), composerOptions({}))(MessageListRow));","map":{"version":3,"sources":["/imports/react-ui/engage/containers/MessageListRow.js"],"names":["Meteor","module","importSync","v","Alert","FlowRouter","compose","getTrackerLoader","composerOptions","MessageListRow","composer","onData","message","refetch","messageId","_id","edit","go","remove","confirm","call","error","reason","success","setLive","setLiveManual","setPause","export","exports","default"],"mappings":"AAAA,IAAIA,eAAJ;AAAWC,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACF,UAAO,UAASG,CAAT,EAAW;AAACH,aAAOG,CAAP;AAAS;AAA7B,CAAlC,EAAiE,CAAjE;AAAoE,IAAIC,cAAJ;AAAUH,OAAOC,UAAP,CAAkB,uBAAlB,EAA0C;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACC,YAAMD,CAAN;AAAQ;AAA7B,CAA1C,EAAyE,CAAzE;AAA4E,IAAIE,mBAAJ;AAAeJ,OAAOC,UAAP,CAAkB,2BAAlB,EAA8C;AAACG,cAAW,UAASF,CAAT,EAAW;AAACE,iBAAWF,CAAX;AAAa;AAArC,CAA9C,EAAqF,CAArF;AAAwF,IAAIG,gBAAJ;AAAYL,OAAOC,UAAP,CAAkB,gBAAlB,EAAmC;AAACI,WAAQ,UAASH,CAAT,EAAW;AAACG,cAAQH,CAAR;AAAU;AAA/B,CAAnC,EAAoE,CAApE;AAAuE,IAAII,yBAAJ;AAAA,IAAqBC,wBAArB;AAAqCP,OAAOC,UAAP,CAAkB,yBAAlB,EAA4C;AAACK,oBAAiB,UAASJ,CAAT,EAAW;AAACI,uBAAiBJ,CAAjB;AAAmB,GAAjD;AAAkDK,mBAAgB,UAASL,CAAT,EAAW;AAACK,sBAAgBL,CAAhB;AAAkB;AAAhG,CAA5C,EAA8I,CAA9I;AAAiJ,IAAIM,uBAAJ;AAAmBR,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACO,kBAAe,UAASN,CAAT,EAAW;AAACM,qBAAeN,CAAf;AAAiB;AAA7C,CAAlC,EAAiF,CAAjF;;AAOxiB,SAASO,QAAT,OAAwCC,MAAxC,EAAgD;AAAA,MAA5BC,OAA4B,QAA5BA,OAA4B;AAAA,MAAnBC,OAAmB,QAAnBA,OAAmB;AAC9C,MAAMC,YAAYF,QAAQG,GAA1B;;AAEA,MAAMC,OAAO,YAAM;AACjBX,eAAWY,EAAX,4BAAuCH,SAAvC;AACD,GAFD;;AAIA,MAAMI,SAAS,YAAM;AACnB,QAAI,CAACC,QAAQ,eAAR,CAAL,EAA+B,OADZ,CACoB;;AAEvCnB,WAAOoB,IAAP,CAAY,wBAAZ,EAAsCN,SAAtC,EAAiD,iBAAS;AACxD,UAAIO,KAAJ,EAAW;AACT,eAAOjB,MAAMiB,KAAN,CAAY,wBAAZ,EAAsCA,MAAMC,MAA5C,CAAP;AACD;;AAEDT;AAEA,aAAOT,MAAMmB,OAAN,CAAc,UAAd,EAA0B,sBAA1B,CAAP;AACD,KARD;AASD,GAZD;;AAcA,MAAMC,UAAU,YAAM;AACpBxB,WAAOoB,IAAP,CAAY,yBAAZ,EAAuCN,SAAvC,EAAkD,YAAM;AACtDD;AACA,aAAOT,MAAMmB,OAAN,CAAc,MAAd,CAAP;AACD,KAHD;AAID,GALD;;AAOA,MAAME,gBAAgB,YAAM;AAC1BzB,WAAOoB,IAAP,CAAY,+BAAZ,EAA6CN,SAA7C,EAAwD,YAAM;AAC5DD;AACA,aAAOT,MAAMmB,OAAN,CAAc,MAAd,CAAP;AACD,KAHD;AAID,GALD;;AAOA,MAAMG,WAAW,YAAM;AACrB1B,WAAOoB,IAAP,CAAY,0BAAZ,EAAwCN,SAAxC,EAAmD,YAAM;AACvDD;AACA,aAAOT,MAAMmB,OAAN,CAAc,QAAd,CAAP;AACD,KAHD;AAID,GALD;;AAOAZ,SAAO,IAAP,EAAa;AACXK,cADW;AAEXE,kBAFW;AAGXM,oBAHW;AAIXC,gCAJW;AAKXC;AALW,GAAb;AAOD;;AAxDDzB,OAAO0B,MAAP,CAAc,SAAd,EAAwBC,QAAQC,OAAR,GA0DTvB,QAAQC,iBAAiBG,QAAjB,CAAR,EAAoCF,gBAAgB,EAAhB,CAApC,EAAyDC,cAAzD,CA1Df","file":"/imports/react-ui/engage/containers/MessageListRow.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport Alert from 'meteor/erxes-notifier';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { compose } from 'react-komposer';\nimport { getTrackerLoader, composerOptions } from '/imports/react-ui/utils';\nimport { MessageListRow } from '../components';\n\nfunction composer({ message, refetch }, onData) {\n  const messageId = message._id;\n\n  const edit = () => {\n    FlowRouter.go(`/engage/messages/edit/${messageId}`);\n  };\n\n  const remove = () => {\n    if (!confirm('Are you sure?')) return; // eslint-disable-line no-alert\n\n    Meteor.call('engage.messages.remove', messageId, error => {\n      if (error) {\n        return Alert.error(\"Can't delete a message\", error.reason);\n      }\n\n      refetch();\n\n      return Alert.success('Congrats', 'Message has deleted.');\n    });\n  };\n\n  const setLive = () => {\n    Meteor.call('engage.messages.setLive', messageId, () => {\n      refetch();\n      return Alert.success('Live');\n    });\n  };\n\n  const setLiveManual = () => {\n    Meteor.call('engage.messages.setLiveManual', messageId, () => {\n      refetch();\n      return Alert.success('Live');\n    });\n  };\n\n  const setPause = () => {\n    Meteor.call('engage.messages.setPause', messageId, () => {\n      refetch();\n      return Alert.success('Paused');\n    });\n  };\n\n  onData(null, {\n    edit,\n    remove,\n    setLive,\n    setLiveManual,\n    setPause,\n  });\n}\n\nexport default compose(getTrackerLoader(composer), composerOptions({}))(MessageListRow);\n"]},"hash":"0afa9da7b4e92e3fd7006be75dd9a4b583bb9e83"}
