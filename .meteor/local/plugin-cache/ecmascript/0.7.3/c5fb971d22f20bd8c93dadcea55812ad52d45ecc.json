{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-bootstrap","imported":["FormControl"],"specifiers":[{"kind":"named","imported":"FormControl","local":"FormControl"}]},{"source":"./Editor","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Editor"}]},{"source":"/imports/api/engage/constants","imported":["MESSENGER_KINDS","SENT_AS_CHOICES"],"specifiers":[{"kind":"named","imported":"MESSENGER_KINDS","local":"MESSENGER_KINDS"},{"kind":"named","imported":"SENT_AS_CHOICES","local":"SENT_AS_CHOICES"}]},{"source":"../containers","imported":["MessengerPreview"],"specifiers":[{"kind":"named","imported":"MessengerPreview","local":"MessengerPreview"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/engage/components/MessengerForm.js","filenameRelative":"/imports/react-ui/engage/components/MessengerForm.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/engage/components/MessengerForm.js.map","sourceFileName":"/imports/react-ui/engage/components/MessengerForm.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"MessengerForm"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar FormControl = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  FormControl: function (v) {\n    FormControl = v;\n  }\n}, 2);\nvar Editor = void 0;\nmodule.importSync(\"./Editor\", {\n  \"default\": function (v) {\n    Editor = v;\n  }\n}, 3);\nvar MESSENGER_KINDS = void 0,\n    SENT_AS_CHOICES = void 0;\nmodule.importSync(\"/imports/api/engage/constants\", {\n  MESSENGER_KINDS: function (v) {\n    MESSENGER_KINDS = v;\n  },\n  SENT_AS_CHOICES: function (v) {\n    SENT_AS_CHOICES = v;\n  }\n}, 4);\nvar MessengerPreview = void 0;\nmodule.importSync(\"../containers\", {\n  MessengerPreview: function (v) {\n    MessengerPreview = v;\n  }\n}, 5);\nvar propTypes = {\n  message: PropTypes.object.isRequired,\n  onContentChange: PropTypes.func.isRequired,\n  showMessengerType: PropTypes.bool,\n  fromUser: PropTypes.string.isRequired,\n  brands: PropTypes.array\n};\n\nvar MessengerForm = function (_Component) {\n  (0, _inherits3.default)(MessengerForm, _Component);\n\n  function MessengerForm(props) {\n    (0, _classCallCheck3.default)(this, MessengerForm);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    var message = _this.props.message;\n    var messenger = message.messenger || {};\n    _this.state = {\n      sentAs: messenger.sentAs || '',\n      messengerContent: messenger.content || ''\n    }; // binds\n\n    _this.onContentChange = _this.onContentChange.bind(_this);\n    _this.onChangeSentAs = _this.onChangeSentAs.bind(_this);\n    return _this;\n  }\n\n  MessengerForm.prototype.onContentChange = function () {\n    function onContentChange(content) {\n      this.props.onContentChange(content);\n      this.setState({\n        messengerContent: content\n      });\n    }\n\n    return onContentChange;\n  }();\n\n  MessengerForm.prototype.onChangeSentAs = function () {\n    function onChangeSentAs(e) {\n      this.setState({\n        sentAs: e.target.value\n      });\n    }\n\n    return onChangeSentAs;\n  }();\n\n  MessengerForm.prototype.renderMessageType = function () {\n    function renderMessageType(messenger) {\n      if (this.props.showMessengerType) {\n        return React.createElement(\n          \"div\",\n          {\n            className: \"header-row\"\n          },\n          React.createElement(\n            \"span\",\n            null,\n            \"Message type:\"\n          ),\n          React.createElement(\n            FormControl,\n            {\n              id: \"messengerKind\",\n              componentClass: \"select\",\n              defaultValue: messenger.kind\n            },\n            React.createElement(\"option\", null),\n            MESSENGER_KINDS.SELECT_OPTIONS.map(function (k) {\n              return React.createElement(\n                \"option\",\n                {\n                  key: k.value,\n                  value: k.value\n                },\n                k.text\n              );\n            })\n          )\n        );\n      }\n    }\n\n    return renderMessageType;\n  }();\n\n  MessengerForm.prototype.render = function () {\n    function render() {\n      var message = this.props.message || {};\n      var messenger = message.messenger || {};\n      var brands = this.props.brands;\n      return React.createElement(\n        \"div\",\n        null,\n        React.createElement(\n          \"div\",\n          {\n            className: \"form-header\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"header-row\"\n            },\n            React.createElement(\n              \"span\",\n              null,\n              \"Brand:\"\n            ),\n            React.createElement(\n              FormControl,\n              {\n                id: \"brandId\",\n                componentClass: \"select\",\n                defaultValue: messenger.brandId\n              },\n              React.createElement(\"option\", null),\n              brands.map(function (b) {\n                return React.createElement(\n                  \"option\",\n                  {\n                    key: b._id,\n                    value: b._id\n                  },\n                  b.name\n                );\n              })\n            )\n          ),\n          this.renderMessageType(messenger),\n          React.createElement(\n            \"div\",\n            {\n              className: \"header-row\"\n            },\n            React.createElement(\n              \"span\",\n              null,\n              \"Sent as:\"\n            ),\n            React.createElement(\n              FormControl,\n              {\n                id: \"messengerSentAs\",\n                componentClass: \"select\",\n                onChange: this.onChangeSentAs,\n                defaultValue: messenger.sentAs\n              },\n              React.createElement(\"option\", null),\n              SENT_AS_CHOICES.SELECT_OPTIONS.map(function (s) {\n                return React.createElement(\n                  \"option\",\n                  {\n                    key: s.value,\n                    value: s.value\n                  },\n                  s.text\n                );\n              })\n            )\n          )\n        ),\n        React.createElement(\n          \"div\",\n          {\n            className: \"form-content\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"flex-content\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"messenger-content\"\n              },\n              React.createElement(\n                \"h2\",\n                null,\n                \"Content\"\n              ),\n              React.createElement(Editor, {\n                defaultValue: messenger.content,\n                onChange: this.onContentChange\n              })\n            ),\n            React.createElement(MessengerPreview, {\n              sentAs: this.state.sentAs,\n              content: this.state.messengerContent,\n              fromUser: this.props.fromUser\n            })\n          )\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return MessengerForm;\n}(Component);\n\nMessengerForm.propTypes = propTypes;\nmodule.export(\"default\", exports.default = MessengerForm);","map":{"version":3,"sources":["/imports/react-ui/engage/components/MessengerForm.js"],"names":["React","Component","module","importSync","v","PropTypes","FormControl","Editor","MESSENGER_KINDS","SENT_AS_CHOICES","MessengerPreview","propTypes","message","object","isRequired","onContentChange","func","showMessengerType","bool","fromUser","string","brands","array","MessengerForm","props","messenger","state","sentAs","messengerContent","content","bind","onChangeSentAs","setState","e","target","value","renderMessageType","kind","SELECT_OPTIONS","map","k","text","render","brandId","b","_id","name","s","export","exports","default"],"mappings":"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","file":"/imports/react-ui/engage/components/MessengerForm.js.map","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormControl } from 'react-bootstrap';\nimport Editor from './Editor';\nimport { MESSENGER_KINDS, SENT_AS_CHOICES } from '/imports/api/engage/constants';\nimport { MessengerPreview } from '../containers';\n\nconst propTypes = {\n  message: PropTypes.object.isRequired,\n  onContentChange: PropTypes.func.isRequired,\n  showMessengerType: PropTypes.bool,\n  fromUser: PropTypes.string.isRequired,\n  brands: PropTypes.array,\n};\n\nclass MessengerForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const { message } = this.props;\n    const messenger = message.messenger || {};\n\n    this.state = { sentAs: messenger.sentAs || '', messengerContent: messenger.content || '' };\n\n    // binds\n    this.onContentChange = this.onContentChange.bind(this);\n    this.onChangeSentAs = this.onChangeSentAs.bind(this);\n  }\n\n  onContentChange(content) {\n    this.props.onContentChange(content);\n    this.setState({ messengerContent: content });\n  }\n\n  onChangeSentAs(e) {\n    this.setState({ sentAs: e.target.value });\n  }\n\n  renderMessageType(messenger) {\n    if (this.props.showMessengerType) {\n      return (\n        <div className=\"header-row\">\n          <span>Message type:</span>\n          <FormControl id=\"messengerKind\" componentClass=\"select\" defaultValue={messenger.kind}>\n            <option />\n            {MESSENGER_KINDS.SELECT_OPTIONS.map(k => (\n              <option key={k.value} value={k.value}>\n                {k.text}\n              </option>\n            ))}\n          </FormControl>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const message = this.props.message || {};\n    const messenger = message.messenger || {};\n    const brands = this.props.brands;\n\n    return (\n      <div>\n        <div className=\"form-header\">\n          <div className=\"header-row\">\n            <span>Brand:</span>\n            <FormControl id=\"brandId\" componentClass=\"select\" defaultValue={messenger.brandId}>\n              <option />\n              {brands.map(b => (\n                <option key={b._id} value={b._id}>\n                  {b.name}\n                </option>\n              ))}\n            </FormControl>\n          </div>\n\n          {this.renderMessageType(messenger)}\n\n          <div className=\"header-row\">\n            <span>Sent as:</span>\n            <FormControl\n              id=\"messengerSentAs\"\n              componentClass=\"select\"\n              onChange={this.onChangeSentAs}\n              defaultValue={messenger.sentAs}\n            >\n              <option />\n              {SENT_AS_CHOICES.SELECT_OPTIONS.map(s => (\n                <option key={s.value} value={s.value}>\n                  {s.text}\n                </option>\n              ))}\n            </FormControl>\n          </div>\n        </div>\n        <div className=\"form-content\">\n          <div className=\"flex-content\">\n            <div className=\"messenger-content\">\n              <h2>Content</h2>\n              <Editor defaultValue={messenger.content} onChange={this.onContentChange} />\n            </div>\n            <MessengerPreview\n              sentAs={this.state.sentAs}\n              content={this.state.messengerContent}\n              fromUser={this.props.fromUser}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMessengerForm.propTypes = propTypes;\n\nexport default MessengerForm;\n"]},"hash":"c5fb971d22f20bd8c93dadcea55812ad52d45ecc"}
