{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","slicedToArray","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-bootstrap","imported":["OverlayTrigger","Popover","Button"],"specifiers":[{"kind":"named","imported":"OverlayTrigger","local":"OverlayTrigger"},{"kind":"named","imported":"Popover","local":"Popover"},{"kind":"named","imported":"Button","local":"Button"}]},{"source":"/imports/react-ui/common","imported":["FilterableList"],"specifiers":[{"kind":"named","imported":"FilterableList","local":"FilterableList"}]},{"source":"/imports/api/customers/constants","imported":["types","operators","dateUnits"],"specifiers":[{"kind":"named","imported":"types","local":"types"},{"kind":"named","imported":"operators","local":"operators"},{"kind":"named","imported":"dateUnits","local":"dateUnits"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/segments/components/AddConditionButton.js","filenameRelative":"/imports/react-ui/segments/components/AddConditionButton.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/segments/components/AddConditionButton.js.map","sourceFileName":"/imports/react-ui/segments/components/AddConditionButton.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"AddConditionButton"},"ignored":false,"code":"var _slicedToArray2 = require(\"babel-runtime/helpers/slicedToArray\");\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar OverlayTrigger = void 0,\n    Popover = void 0,\n    Button = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  OverlayTrigger: function (v) {\n    OverlayTrigger = v;\n  },\n  Popover: function (v) {\n    Popover = v;\n  },\n  Button: function (v) {\n    Button = v;\n  }\n}, 2);\nvar FilterableList = void 0;\nmodule.importSync(\"/imports/react-ui/common\", {\n  FilterableList: function (v) {\n    FilterableList = v;\n  }\n}, 3);\nvar types = void 0,\n    operators = void 0,\n    dateUnits = void 0;\nmodule.importSync(\"/imports/api/customers/constants\", {\n  types: function (v) {\n    types = v;\n  },\n  operators: function (v) {\n    operators = v;\n  },\n  dateUnits: function (v) {\n    dateUnits = v;\n  }\n}, 4);\nvar propTypes = {\n  fields: PropTypes.array.isRequired,\n  addCondition: PropTypes.func.isRequired\n};\n\nvar AddConditionButton = function (_Component) {\n  (0, _inherits3.default)(AddConditionButton, _Component);\n\n  function AddConditionButton(props) {\n    (0, _classCallCheck3.default)(this, AddConditionButton);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.addCondition = _this.addCondition.bind(_this);\n    return _this;\n  }\n\n  AddConditionButton.prototype.addCondition = function () {\n    function addCondition(items, id) {\n      var _Object$keys = Object.keys(types),\n          _Object$keys2 = (0, _slicedToArray3.default)(_Object$keys, 1),\n          type = _Object$keys2[0];\n\n      var _operators$type = (0, _slicedToArray3.default)(operators[type], 1),\n          operator = _operators$type[0];\n\n      this.props.addCondition({\n        field: id,\n        value: '',\n        operator: operator.value,\n        dateUnit: dateUnits.days,\n        type: type\n      });\n      this.overlayTrigger.hide();\n    }\n\n    return addCondition;\n  }();\n\n  AddConditionButton.prototype.render = function () {\n    function render() {\n      var _this2 = this;\n\n      var popover = React.createElement(\n        Popover,\n        {\n          id: \"condition-popover\",\n          title: \"Select a field\"\n        },\n        React.createElement(FilterableList, {\n          items: this.props.fields,\n          onClick: this.addCondition,\n          showCheckmark: false\n        })\n      );\n      return React.createElement(\n        OverlayTrigger,\n        {\n          ref: function (overlayTrigger) {\n            _this2.overlayTrigger = overlayTrigger;\n          },\n          trigger: \"click\",\n          placement: \"bottom\",\n          overlay: popover,\n          rootClose: true\n        },\n        React.createElement(\n          Button,\n          {\n            bsSize: \"sm\"\n          },\n          \"Add a condition\"\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return AddConditionButton;\n}(Component);\n\nAddConditionButton.propTypes = propTypes;\nmodule.export(\"default\", exports.default = AddConditionButton);","map":{"version":3,"sources":["/imports/react-ui/segments/components/AddConditionButton.js"],"names":["React","Component","module","importSync","v","PropTypes","OverlayTrigger","Popover","Button","FilterableList","types","operators","dateUnits","propTypes","fields","array","isRequired","addCondition","func","AddConditionButton","props","bind","items","id","Object","keys","type","operator","field","value","dateUnit","days","overlayTrigger","hide","render","popover","export","exports","default"],"mappings":"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","file":"/imports/react-ui/segments/components/AddConditionButton.js.map","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { OverlayTrigger, Popover, Button } from 'react-bootstrap';\nimport { FilterableList } from '/imports/react-ui/common';\nimport { types, operators, dateUnits } from '/imports/api/customers/constants';\n\nconst propTypes = {\n  fields: PropTypes.array.isRequired,\n  addCondition: PropTypes.func.isRequired,\n};\n\nclass AddConditionButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addCondition = this.addCondition.bind(this);\n  }\n\n  addCondition(items, id) {\n    const [type] = Object.keys(types);\n    const [operator] = operators[type];\n\n    this.props.addCondition({\n      field: id,\n      value: '',\n      operator: operator.value,\n      dateUnit: dateUnits.days,\n      type,\n    });\n    this.overlayTrigger.hide();\n  }\n\n  render() {\n    const popover = (\n      <Popover id=\"condition-popover\" title=\"Select a field\">\n        <FilterableList\n          items={this.props.fields}\n          onClick={this.addCondition}\n          showCheckmark={false}\n        />\n      </Popover>\n    );\n\n    return (\n      <OverlayTrigger\n        ref={overlayTrigger => {\n          this.overlayTrigger = overlayTrigger;\n        }}\n        trigger=\"click\"\n        placement=\"bottom\"\n        overlay={popover}\n        rootClose\n      >\n        <Button bsSize=\"sm\">Add a condition</Button>\n      </OverlayTrigger>\n    );\n  }\n}\n\nAddConditionButton.propTypes = propTypes;\n\nexport default AddConditionButton;\n"]},"hash":"cc5c7d13077d6426b255ad4f7374e44e873f3f72"}
