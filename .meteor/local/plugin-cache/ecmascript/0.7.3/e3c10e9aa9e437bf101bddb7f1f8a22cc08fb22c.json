{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"./Avatar","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Avatar"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/common/nameCard/NameCard.js","filenameRelative":"/imports/react-ui/common/nameCard/NameCard.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/common/nameCard/NameCard.js.map","sourceFileName":"/imports/react-ui/common/nameCard/NameCard.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"NameCard"},"ignored":false,"code":"var React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar Avatar = void 0;\nmodule.importSync(\"./Avatar\", {\n  \"default\": function (v) {\n    Avatar = v;\n  }\n}, 2);\nvar propTypes = {\n  user: PropTypes.object,\n  customer: PropTypes.object,\n  singleLine: PropTypes.bool,\n  firstLine: PropTypes.node,\n  secondLine: PropTypes.node,\n  avatarSize: PropTypes.number,\n  url: PropTypes.string\n};\n\nfunction NameCard(_ref) {\n  var user = _ref.user,\n      customer = _ref.customer,\n      firstLine = _ref.firstLine,\n      secondLine = _ref.secondLine,\n      singleLine = _ref.singleLine,\n      avatarSize = _ref.avatarSize,\n      url = _ref.url;\n  var first = void 0;\n  var second = void 0;\n\n  if (user || firstLine || secondLine) {\n    first = firstLine || user.details && user.details.fullName;\n    second = !singleLine && (secondLine || \"@\" + user.username);\n  } else if (customer) {\n    first = firstLine || customer.name || singleLine && (customer.name || customer.email || 'N/A');\n    second = !singleLine && (secondLine || customer.email || 'N/A');\n  }\n\n  return React.createElement(\n    \"div\",\n    {\n      className: \"name-card\"\n    },\n    React.createElement(Avatar, {\n      user: user,\n      customer: customer,\n      size: avatarSize\n    }),\n    React.createElement(\n      \"div\",\n      {\n        className: \"text\"\n      },\n      React.createElement(\n        \"a\",\n        {\n          href: url ? url : '#',\n          className: \"first-line\"\n        },\n        first\n      ),\n      React.createElement(\n        \"div\",\n        {\n          className: \"second-line\"\n        },\n        second\n      )\n    )\n  );\n}\n\nNameCard.propTypes = propTypes;\nNameCard.Avatar = Avatar;\nmodule.export(\"default\", exports.default = NameCard);","map":{"version":3,"sources":["/imports/react-ui/common/nameCard/NameCard.js"],"names":["React","module","importSync","v","PropTypes","Avatar","propTypes","user","object","customer","singleLine","bool","firstLine","node","secondLine","avatarSize","number","url","string","NameCard","first","second","details","fullName","username","name","email","export","exports","default"],"mappings":"AAAA,IAAIA,cAAJ;AAAUC,OAAOC,UAAP,CAAkB,OAAlB,EAA0B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACH,YAAMG,CAAN;AAAQ;AAA7B,CAA1B,EAAyD,CAAzD;AAA4D,IAAIC,kBAAJ;AAAcH,OAAOC,UAAP,CAAkB,YAAlB,EAA+B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACC,gBAAUD,CAAV;AAAY;AAAjC,CAA/B,EAAkE,CAAlE;AAAqE,IAAIE,eAAJ;AAAWJ,OAAOC,UAAP,CAAkB,UAAlB,EAA6B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACE,aAAOF,CAAP;AAAS;AAA9B,CAA7B,EAA6D,CAA7D;AAIpK,IAAMG,YAAY;AAChBC,QAAMH,UAAUI,MADA;AAEhBC,YAAUL,UAAUI,MAFJ;AAGhBE,cAAYN,UAAUO,IAHN;AAIhBC,aAAWR,UAAUS,IAJL;AAKhBC,cAAYV,UAAUS,IALN;AAMhBE,cAAYX,UAAUY,MANN;AAOhBC,OAAKb,UAAUc;AAPC,CAAlB;;AAUA,SAASC,QAAT,OAA0F;AAAA,MAAtEZ,IAAsE,QAAtEA,IAAsE;AAAA,MAAhEE,QAAgE,QAAhEA,QAAgE;AAAA,MAAtDG,SAAsD,QAAtDA,SAAsD;AAAA,MAA3CE,UAA2C,QAA3CA,UAA2C;AAAA,MAA/BJ,UAA+B,QAA/BA,UAA+B;AAAA,MAAnBK,UAAmB,QAAnBA,UAAmB;AAAA,MAAPE,GAAO,QAAPA,GAAO;AACxF,MAAIG,cAAJ;AACA,MAAIC,eAAJ;;AAEA,MAAId,QAAQK,SAAR,IAAqBE,UAAzB,EAAqC;AACnCM,YAAQR,aAAcL,KAAKe,OAAL,IAAgBf,KAAKe,OAAL,CAAaC,QAAnD;AACAF,aAAS,CAACX,UAAD,KAAgBI,oBAAkBP,KAAKiB,QAAvC,CAAT;AACD,GAHD,MAGO,IAAIf,QAAJ,EAAc;AACnBW,YACER,aAAaH,SAASgB,IAAtB,IAA+Bf,eAAeD,SAASgB,IAAT,IAAiBhB,SAASiB,KAA1B,IAAmC,KAAlD,CADjC;AAEAL,aAAS,CAACX,UAAD,KAAgBI,cAAcL,SAASiB,KAAvB,IAAgC,KAAhD,CAAT;AACD;;AAED,SACE;AAAA;AAAA;AAAK,iBAAU;AAAf;AACE,wBAAC,MAAD;AAAQ,YAAMnB,IAAd;AAAoB,gBAAUE,QAA9B;AAAwC,YAAMM;AAA9C,MADF;AAEE;AAAA;AAAA;AAAK,mBAAU;AAAf;AACE;AAAA;AAAA;AAAG,gBAAME,MAAMA,GAAN,GAAY,GAArB;AAA0B,qBAAU;AAApC;AACGG;AADH,OADF;AAIE;AAAA;AAAA;AAAK,qBAAU;AAAf;AACGC;AADH;AAJF;AAFF,GADF;AAaD;;AAEDF,SAASb,SAAT,GAAqBA,SAArB;AACAa,SAASd,MAAT,GAAkBA,MAAlB;AA3CAJ,OAAO0B,MAAP,CAAc,SAAd,EAAwBC,QAAQC,OAAR,GA6CTV,QA7Cf","file":"/imports/react-ui/common/nameCard/NameCard.js.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from './Avatar';\n\nconst propTypes = {\n  user: PropTypes.object,\n  customer: PropTypes.object,\n  singleLine: PropTypes.bool,\n  firstLine: PropTypes.node,\n  secondLine: PropTypes.node,\n  avatarSize: PropTypes.number,\n  url: PropTypes.string,\n};\n\nfunction NameCard({ user, customer, firstLine, secondLine, singleLine, avatarSize, url }) {\n  let first;\n  let second;\n\n  if (user || firstLine || secondLine) {\n    first = firstLine || (user.details && user.details.fullName);\n    second = !singleLine && (secondLine || `@${user.username}`);\n  } else if (customer) {\n    first =\n      firstLine || customer.name || (singleLine && (customer.name || customer.email || 'N/A'));\n    second = !singleLine && (secondLine || customer.email || 'N/A');\n  }\n\n  return (\n    <div className=\"name-card\">\n      <Avatar user={user} customer={customer} size={avatarSize} />\n      <div className=\"text\">\n        <a href={url ? url : '#'} className=\"first-line\">\n          {first}\n        </a>\n        <div className=\"second-line\">\n          {second}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nNameCard.propTypes = propTypes;\nNameCard.Avatar = Avatar;\n\nexport default NameCard;\n"]},"hash":"e3c10e9aa9e437bf101bddb7f1f8a22cc08fb22c"}
