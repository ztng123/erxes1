{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-bootstrap","imported":["FormGroup","ControlLabel","FormControl"],"specifiers":[{"kind":"named","imported":"FormGroup","local":"FormGroup"},{"kind":"named","imported":"ControlLabel","local":"ControlLabel"},{"kind":"named","imported":"FormControl","local":"FormControl"}]},{"source":"./Common","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Common"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/settings/integrations/components/Form.js","filenameRelative":"/imports/react-ui/settings/integrations/components/Form.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/settings/integrations/components/Form.js.map","sourceFileName":"/imports/react-ui/settings/integrations/components/Form.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Form"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar FormGroup = void 0,\n    ControlLabel = void 0,\n    FormControl = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  FormGroup: function (v) {\n    FormGroup = v;\n  },\n  ControlLabel: function (v) {\n    ControlLabel = v;\n  },\n  FormControl: function (v) {\n    FormControl = v;\n  }\n}, 2);\nvar Common = void 0;\nmodule.importSync(\"./Common\", {\n  \"default\": function (v) {\n    Common = v;\n  }\n}, 3);\n\nvar Form = function (_Common) {\n  (0, _inherits3.default)(Form, _Common);\n\n  Form.getInstallCode = function () {\n    function getInstallCode(brandCode, formCode) {\n      return \"\\n      <script>\\n        window.erxesSettings = {\\n          forms: [{\\n            brand_id: \\\"\" + brandCode + \"\\\",\\n            form_id: \\\"\" + formCode + \"\\\",\\n          }],\\n        };\\n        \" + Form.installCodeIncludeScript('form') + \"\\n      </script>\\n    \";\n    }\n\n    return getInstallCode;\n  }();\n\n  function Form(props, context) {\n    (0, _classCallCheck3.default)(this, Form);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Common.call(this, props, context));\n\n    var code = '';\n    var integration = props.integration || {};\n    var formData = integration.formData || {}; // showed install code automatically in edit mode\n\n    if (integration._id) {\n      var brand = integration.brand;\n      var form = integration.form;\n      code = _this.constructor.getInstallCode(brand.code, form.code);\n    }\n\n    _this.state = {\n      code: code,\n      copied: false,\n      successAction: formData.successAction\n    };\n    _this.handleBrandChange = _this.handleBrandChange.bind(_this);\n    _this.handleFormChange = _this.handleFormChange.bind(_this);\n    _this.handleSuccessActionChange = _this.handleSuccessActionChange.bind(_this);\n    return _this;\n  }\n\n  Form.prototype.updateInstallCodeValue = function () {\n    function updateInstallCodeValue() {\n      var brandId = document.getElementById('selectBrand').value;\n      var formId = document.getElementById('formId').value;\n\n      if (brandId && formId) {\n        var _props = this.props,\n            brands = _props.brands,\n            forms = _props.forms;\n        var brand = brands.find(function (brand) {\n          return brand._id === brandId;\n        });\n        var form = forms.find(function (form) {\n          return form._id === formId;\n        });\n        var code = this.constructor.getInstallCode(brand.code, form.code);\n        this.setState({\n          code: code,\n          copied: false\n        });\n      }\n    }\n\n    return updateInstallCodeValue;\n  }();\n\n  Form.prototype.handleBrandChange = function () {\n    function handleBrandChange() {\n      this.updateInstallCodeValue();\n    }\n\n    return handleBrandChange;\n  }();\n\n  Form.prototype.handleFormChange = function () {\n    function handleFormChange() {\n      this.updateInstallCodeValue();\n    }\n\n    return handleFormChange;\n  }();\n\n  Form.prototype.handleSuccessActionChange = function () {\n    function handleSuccessActionChange() {\n      this.setState({\n        successAction: document.getElementById('successAction').value\n      });\n    }\n\n    return handleSuccessActionChange;\n  }();\n\n  Form.prototype.handleSubmit = function () {\n    function handleSubmit(e) {\n      e.preventDefault();\n      this.context.closeModal();\n\n      var getElementById = function (id) {\n        var element = document.getElementById(id);\n        return element && element.value || '';\n      };\n\n      this.props.save({\n        mainDoc: {\n          name: document.getElementById('integration-name').value,\n          brandId: document.getElementById('selectBrand').value,\n          formId: document.getElementById('formId').value\n        },\n        formDoc: {\n          loadType: getElementById('loadType'),\n          successAction: getElementById('successAction'),\n          fromEmail: getElementById('fromEmail'),\n          userEmailTitle: getElementById('userEmailTitle'),\n          userEmailContent: getElementById('userEmailContent'),\n          adminEmails: getElementById('adminEmails').split(','),\n          adminEmailTitle: getElementById('adminEmailTitle'),\n          adminEmailContent: getElementById('adminEmailContent'),\n          thankContent: getElementById('thankContent'),\n          redirectUrl: getElementById('redirectUrl')\n        }\n      });\n    }\n\n    return handleSubmit;\n  }();\n\n  Form.prototype.renderEmailFields = function () {\n    function renderEmailFields(formData) {\n      if (this.state.successAction === 'email') {\n        return React.createElement(\n          \"div\",\n          null,\n          React.createElement(\n            FormGroup,\n            {\n              controlId: \"fromEmail\"\n            },\n            React.createElement(\n              ControlLabel,\n              null,\n              \"From email\"\n            ),\n            React.createElement(FormControl, {\n              type: \"text\",\n              defaultValue: formData.fromEmail\n            })\n          ),\n          React.createElement(\n            FormGroup,\n            {\n              controlId: \"userEmailTitle\"\n            },\n            React.createElement(\n              ControlLabel,\n              null,\n              \"User email title\"\n            ),\n            React.createElement(FormControl, {\n              type: \"text\",\n              defaultValue: formData.userEmailTitle\n            })\n          ),\n          React.createElement(\n            FormGroup,\n            {\n              controlId: \"userEmailContent\"\n            },\n            React.createElement(\n              ControlLabel,\n              null,\n              \"User email content\"\n            ),\n            React.createElement(FormControl, {\n              componentClass: \"textarea\",\n              type: \"text\",\n              defaultValue: formData.userEmailContent\n            })\n          ),\n          React.createElement(\n            FormGroup,\n            {\n              controlId: \"adminEmails\"\n            },\n            React.createElement(\n              ControlLabel,\n              null,\n              \"Admin emails\"\n            ),\n            React.createElement(FormControl, {\n              type: \"text\",\n              defaultValue: formData.adminEmails\n            })\n          ),\n          React.createElement(\n            FormGroup,\n            {\n              controlId: \"adminEmailTitle\"\n            },\n            React.createElement(\n              ControlLabel,\n              null,\n              \"Admin email title\"\n            ),\n            React.createElement(FormControl, {\n              type: \"text\",\n              defaultValue: formData.adminEmailTitle\n            })\n          ),\n          React.createElement(\n            FormGroup,\n            {\n              controlId: \"adminEmailContent\"\n            },\n            React.createElement(\n              ControlLabel,\n              null,\n              \"Admin email content\"\n            ),\n            React.createElement(FormControl, {\n              componentClass: \"textarea\",\n              type: \"text\",\n              defaultValue: formData.adminEmailContent\n            })\n          )\n        );\n      }\n    }\n\n    return renderEmailFields;\n  }();\n\n  Form.prototype.renderRedirectUrl = function () {\n    function renderRedirectUrl(formData) {\n      if (this.state.successAction === 'redirect') {\n        return React.createElement(\n          \"div\",\n          null,\n          React.createElement(\n            FormGroup,\n            {\n              controlId: \"redirectUrl\"\n            },\n            React.createElement(\n              ControlLabel,\n              null,\n              \"Redirect url\"\n            ),\n            React.createElement(FormControl, {\n              type: \"text\",\n              defaultValue: formData.redirectUrl\n            })\n          )\n        );\n      }\n    }\n\n    return renderRedirectUrl;\n  }();\n\n  Form.prototype.extraContent = function () {\n    function extraContent() {\n      var _props$integration = this.props.integration,\n          integration = _props$integration === undefined ? {} : _props$integration;\n      var formData = integration.formData || {};\n      return React.createElement(\n        \"div\",\n        null,\n        React.createElement(\n          FormGroup,\n          {\n            controlId: \"formId\"\n          },\n          React.createElement(\n            ControlLabel,\n            null,\n            \"Form\"\n          ),\n          React.createElement(\n            FormControl,\n            {\n              componentClass: \"select\",\n              placeholder: \"Select Form\",\n              onChange: this.handleFormChange,\n              defaultValue: integration.formId\n            },\n            React.createElement(\"option\", null),\n            this.props.forms.map(function (form) {\n              return React.createElement(\n                \"option\",\n                {\n                  key: form._id,\n                  value: form._id\n                },\n                form.title\n              );\n            })\n          )\n        ),\n        React.createElement(\n          FormGroup,\n          {\n            controlId: \"loadType\"\n          },\n          React.createElement(\n            ControlLabel,\n            null,\n            \"Load\"\n          ),\n          React.createElement(\n            FormControl,\n            {\n              componentClass: \"select\",\n              defaultValue: formData.loadType\n            },\n            React.createElement(\"option\", null),\n            this.props.loadTypes.map(function (type, index) {\n              return React.createElement(\n                \"option\",\n                {\n                  key: index,\n                  value: type\n                },\n                type\n              );\n            })\n          )\n        ),\n        React.createElement(\n          FormGroup,\n          {\n            controlId: \"successAction\"\n          },\n          React.createElement(\n            ControlLabel,\n            null,\n            \"On success\"\n          ),\n          React.createElement(\n            FormControl,\n            {\n              onChange: this.handleSuccessActionChange,\n              componentClass: \"select\",\n              defaultValue: formData.successAction\n            },\n            React.createElement(\"option\", null),\n            this.props.successActions.map(function (action, index) {\n              return React.createElement(\n                \"option\",\n                {\n                  key: index,\n                  value: action\n                },\n                action\n              );\n            })\n          )\n        ),\n        this.renderEmailFields(formData),\n        this.renderRedirectUrl(formData),\n        React.createElement(\n          FormGroup,\n          {\n            controlId: \"thankContent\"\n          },\n          React.createElement(\n            ControlLabel,\n            null,\n            \"Thank content\"\n          ),\n          React.createElement(FormControl, {\n            componentClass: \"textarea\",\n            type: \"text\",\n            defaultValue: formData.thankContent\n          })\n        )\n      );\n    }\n\n    return extraContent;\n  }();\n\n  return Form;\n}(Common);\n\nForm.propTypes = {\n  forms: PropTypes.array.isRequired,\n  // eslint-disable-line\n  loadTypes: PropTypes.array.isRequired\n};\nmodule.export(\"default\", exports.default = Form);","map":{"version":3,"sources":["/imports/react-ui/settings/integrations/components/Form.js"],"names":["React","module","importSync","v","PropTypes","FormGroup","ControlLabel","FormControl","Common","Form","getInstallCode","brandCode","formCode","installCodeIncludeScript","props","context","code","integration","formData","_id","brand","form","constructor","state","copied","successAction","handleBrandChange","bind","handleFormChange","handleSuccessActionChange","updateInstallCodeValue","brandId","document","getElementById","value","formId","brands","forms","find","setState","handleSubmit","e","preventDefault","closeModal","element","id","save","mainDoc","name","formDoc","loadType","fromEmail","userEmailTitle","userEmailContent","adminEmails","split","adminEmailTitle","adminEmailContent","thankContent","redirectUrl","renderEmailFields","renderRedirectUrl","extraContent","map","title","loadTypes","type","index","successActions","action","propTypes","array","isRequired","export","exports","default"],"mappings":"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","file":"/imports/react-ui/settings/integrations/components/Form.js.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup, ControlLabel, FormControl } from 'react-bootstrap';\nimport Common from './Common';\n\nclass Form extends Common {\n  static getInstallCode(brandCode, formCode) {\n    return `\n      <script>\n        window.erxesSettings = {\n          forms: [{\n            brand_id: \"${brandCode}\",\n            form_id: \"${formCode}\",\n          }],\n        };\n        ${Form.installCodeIncludeScript('form')}\n      </script>\n    `;\n  }\n\n  constructor(props, context) {\n    super(props, context);\n\n    let code = '';\n    const integration = props.integration || {};\n    const formData = integration.formData || {};\n\n    // showed install code automatically in edit mode\n    if (integration._id) {\n      const brand = integration.brand;\n      const form = integration.form;\n\n      code = this.constructor.getInstallCode(brand.code, form.code);\n    }\n\n    this.state = { code, copied: false, successAction: formData.successAction };\n\n    this.handleBrandChange = this.handleBrandChange.bind(this);\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.handleSuccessActionChange = this.handleSuccessActionChange.bind(this);\n  }\n\n  updateInstallCodeValue() {\n    const brandId = document.getElementById('selectBrand').value;\n    const formId = document.getElementById('formId').value;\n\n    if (brandId && formId) {\n      const { brands, forms } = this.props;\n\n      const brand = brands.find(brand => brand._id === brandId);\n      const form = forms.find(form => form._id === formId);\n\n      const code = this.constructor.getInstallCode(brand.code, form.code);\n\n      this.setState({ code, copied: false });\n    }\n  }\n\n  handleBrandChange() {\n    this.updateInstallCodeValue();\n  }\n\n  handleFormChange() {\n    this.updateInstallCodeValue();\n  }\n\n  handleSuccessActionChange() {\n    this.setState({\n      successAction: document.getElementById('successAction').value,\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.context.closeModal();\n\n    const getElementById = id => {\n      const element = document.getElementById(id);\n\n      return (element && element.value) || '';\n    };\n\n    this.props.save({\n      mainDoc: {\n        name: document.getElementById('integration-name').value,\n        brandId: document.getElementById('selectBrand').value,\n        formId: document.getElementById('formId').value,\n      },\n\n      formDoc: {\n        loadType: getElementById('loadType'),\n        successAction: getElementById('successAction'),\n        fromEmail: getElementById('fromEmail'),\n        userEmailTitle: getElementById('userEmailTitle'),\n        userEmailContent: getElementById('userEmailContent'),\n        adminEmails: getElementById('adminEmails').split(','),\n        adminEmailTitle: getElementById('adminEmailTitle'),\n        adminEmailContent: getElementById('adminEmailContent'),\n        thankContent: getElementById('thankContent'),\n        redirectUrl: getElementById('redirectUrl'),\n      },\n    });\n  }\n\n  renderEmailFields(formData) {\n    if (this.state.successAction === 'email') {\n      return (\n        <div>\n          <FormGroup controlId=\"fromEmail\">\n            <ControlLabel>From email</ControlLabel>\n            <FormControl type=\"text\" defaultValue={formData.fromEmail} />\n          </FormGroup>\n\n          <FormGroup controlId=\"userEmailTitle\">\n            <ControlLabel>User email title</ControlLabel>\n            <FormControl type=\"text\" defaultValue={formData.userEmailTitle} />\n          </FormGroup>\n\n          <FormGroup controlId=\"userEmailContent\">\n            <ControlLabel>User email content</ControlLabel>\n            <FormControl\n              componentClass=\"textarea\"\n              type=\"text\"\n              defaultValue={formData.userEmailContent}\n            />\n          </FormGroup>\n\n          <FormGroup controlId=\"adminEmails\">\n            <ControlLabel>Admin emails</ControlLabel>\n            <FormControl type=\"text\" defaultValue={formData.adminEmails} />\n          </FormGroup>\n\n          <FormGroup controlId=\"adminEmailTitle\">\n            <ControlLabel>Admin email title</ControlLabel>\n            <FormControl type=\"text\" defaultValue={formData.adminEmailTitle} />\n          </FormGroup>\n\n          <FormGroup controlId=\"adminEmailContent\">\n            <ControlLabel>Admin email content</ControlLabel>\n            <FormControl\n              componentClass=\"textarea\"\n              type=\"text\"\n              defaultValue={formData.adminEmailContent}\n            />\n          </FormGroup>\n        </div>\n      );\n    }\n  }\n\n  renderRedirectUrl(formData) {\n    if (this.state.successAction === 'redirect') {\n      return (\n        <div>\n          <FormGroup controlId=\"redirectUrl\">\n            <ControlLabel>Redirect url</ControlLabel>\n            <FormControl type=\"text\" defaultValue={formData.redirectUrl} />\n          </FormGroup>\n        </div>\n      );\n    }\n  }\n\n  extraContent() {\n    const { integration = {} } = this.props;\n    const formData = integration.formData || {};\n\n    return (\n      <div>\n        <FormGroup controlId=\"formId\">\n          <ControlLabel>Form</ControlLabel>\n\n          <FormControl\n            componentClass=\"select\"\n            placeholder=\"Select Form\"\n            onChange={this.handleFormChange}\n            defaultValue={integration.formId}\n          >\n            <option />\n            {this.props.forms.map(form => (\n              <option key={form._id} value={form._id}>\n                {form.title}\n              </option>\n            ))}\n          </FormControl>\n        </FormGroup>\n\n        <FormGroup controlId=\"loadType\">\n          <ControlLabel>Load</ControlLabel>\n\n          <FormControl componentClass=\"select\" defaultValue={formData.loadType}>\n            <option />\n            {this.props.loadTypes.map((type, index) => (\n              <option key={index} value={type}>\n                {type}\n              </option>\n            ))}\n          </FormControl>\n        </FormGroup>\n\n        <FormGroup controlId=\"successAction\">\n          <ControlLabel>On success</ControlLabel>\n\n          <FormControl\n            onChange={this.handleSuccessActionChange}\n            componentClass=\"select\"\n            defaultValue={formData.successAction}\n          >\n            <option />\n            {this.props.successActions.map((action, index) => (\n              <option key={index} value={action}>\n                {action}\n              </option>\n            ))}\n          </FormControl>\n        </FormGroup>\n\n        {this.renderEmailFields(formData)}\n        {this.renderRedirectUrl(formData)}\n\n        <FormGroup controlId=\"thankContent\">\n          <ControlLabel>Thank content</ControlLabel>\n          <FormControl componentClass=\"textarea\" type=\"text\" defaultValue={formData.thankContent} />\n        </FormGroup>\n      </div>\n    );\n  }\n}\n\nForm.propTypes = {\n  forms: PropTypes.array.isRequired, // eslint-disable-line\n  loadTypes: PropTypes.array.isRequired, // eslint-disable-line\n};\n\nexport default Form;\n"]},"hash":"dc79b1e9c5531724de36eab07f7b94b79728b4f6"}
