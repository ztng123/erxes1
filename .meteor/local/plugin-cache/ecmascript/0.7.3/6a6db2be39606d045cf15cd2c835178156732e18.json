{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-bootstrap","imported":["Table"],"specifiers":[{"kind":"named","imported":"Table","local":"Table"}]},{"source":"/imports/react-ui/layout/components","imported":["Wrapper"],"specifiers":[{"kind":"named","imported":"Wrapper","local":"Wrapper"}]},{"source":"/imports/react-ui/common","imported":["Pagination"],"specifiers":[{"kind":"named","imported":"Pagination","local":"Pagination"}]},{"source":"/imports/react-ui/engage/containers","imported":["Widget"],"specifiers":[{"kind":"named","imported":"Widget","local":"Widget"}]},{"source":"./sidebar/Sidebar","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Sidebar"}]},{"source":"./CustomerRow","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"CustomerRow"}]},{"source":"../../containers","imported":["ManageColumns"],"specifiers":[{"kind":"named","imported":"ManageColumns","local":"ManageColumns"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/customers/components/list/CustomersList.js","filenameRelative":"/imports/react-ui/customers/components/list/CustomersList.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/customers/components/list/CustomersList.js.map","sourceFileName":"/imports/react-ui/customers/components/list/CustomersList.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"CustomersList"},"ignored":false,"code":"var React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar Table = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  Table: function (v) {\n    Table = v;\n  }\n}, 2);\nvar Wrapper = void 0;\nmodule.importSync(\"/imports/react-ui/layout/components\", {\n  Wrapper: function (v) {\n    Wrapper = v;\n  }\n}, 3);\nvar Pagination = void 0;\nmodule.importSync(\"/imports/react-ui/common\", {\n  Pagination: function (v) {\n    Pagination = v;\n  }\n}, 4);\nvar Widget = void 0;\nmodule.importSync(\"/imports/react-ui/engage/containers\", {\n  Widget: function (v) {\n    Widget = v;\n  }\n}, 5);\nvar Sidebar = void 0;\nmodule.importSync(\"./sidebar/Sidebar\", {\n  \"default\": function (v) {\n    Sidebar = v;\n  }\n}, 6);\nvar CustomerRow = void 0;\nmodule.importSync(\"./CustomerRow\", {\n  \"default\": function (v) {\n    CustomerRow = v;\n  }\n}, 7);\nvar ManageColumns = void 0;\nmodule.importSync(\"../../containers\", {\n  ManageColumns: function (v) {\n    ManageColumns = v;\n  }\n}, 8);\nvar propTypes = {\n  customers: PropTypes.array.isRequired,\n  counts: PropTypes.object.isRequired,\n  customerFields: PropTypes.array.isRequired,\n  segments: PropTypes.array.isRequired,\n  brands: PropTypes.array.isRequired,\n  integrations: PropTypes.array.isRequired,\n  tags: PropTypes.array.isRequired,\n  loadMore: PropTypes.func.isRequired,\n  hasMore: PropTypes.bool.isRequired,\n  bulk: PropTypes.array.isRequired,\n  toggleBulk: PropTypes.func.isRequired\n};\n\nfunction CustomersList(_ref) {\n  var customers = _ref.customers,\n      counts = _ref.counts,\n      customerFields = _ref.customerFields,\n      segments = _ref.segments,\n      brands = _ref.brands,\n      integrations = _ref.integrations,\n      tags = _ref.tags,\n      loadMore = _ref.loadMore,\n      hasMore = _ref.hasMore,\n      bulk = _ref.bulk,\n      toggleBulk = _ref.toggleBulk;\n  var content = React.createElement(\n    Pagination,\n    {\n      hasMore: hasMore,\n      loadMore: loadMore\n    },\n    React.createElement(\n      Table,\n      {\n        className: \"no-wrap\"\n      },\n      React.createElement(\n        \"thead\",\n        null,\n        React.createElement(\n          \"tr\",\n          null,\n          React.createElement(\"th\", null),\n          React.createElement(\n            \"th\",\n            null,\n            React.createElement(ManageColumns, null)\n          ),\n          customerFields.map(function (_ref2) {\n            var key = _ref2.key,\n                label = _ref2.label;\n            return React.createElement(\n              \"th\",\n              {\n                key: key\n              },\n              label\n            );\n          }),\n          React.createElement(\n            \"th\",\n            null,\n            \"Tags\"\n          )\n        )\n      ),\n      React.createElement(\n        \"tbody\",\n        null,\n        customers.map(function (customer) {\n          return React.createElement(CustomerRow, {\n            customer: customer,\n            customerFields: customerFields,\n            key: customer._id,\n            toggleBulk: toggleBulk\n          });\n        })\n      )\n    )\n  );\n  var actionBar = React.createElement(Wrapper.ActionBar, {\n    left: React.createElement(Widget, {\n      customers: bulk\n    })\n  });\n  var breadcrumb = [{\n    title: \"Customers (\" + counts.all + \")\"\n  }];\n  return React.createElement(\n    \"div\",\n    null,\n    React.createElement(Wrapper, {\n      header: React.createElement(Wrapper.Header, {\n        breadcrumb: breadcrumb\n      }),\n      actionBar: bulk.length > 0 ? actionBar : false,\n      leftSidebar: React.createElement(Sidebar, {\n        counts: counts,\n        segments: segments,\n        brands: brands,\n        integrations: integrations,\n        tags: tags\n      }),\n      content: content\n    })\n  );\n}\n\nCustomersList.propTypes = propTypes;\nmodule.export(\"default\", exports.default = CustomersList);","map":{"version":3,"sources":["/imports/react-ui/customers/components/list/CustomersList.js"],"names":["React","module","importSync","v","PropTypes","Table","Wrapper","Pagination","Widget","Sidebar","CustomerRow","ManageColumns","propTypes","customers","array","isRequired","counts","object","customerFields","segments","brands","integrations","tags","loadMore","func","hasMore","bool","bulk","toggleBulk","CustomersList","content","map","key","label","customer","_id","actionBar","breadcrumb","title","all","length","export","exports","default"],"mappings":"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","file":"/imports/react-ui/customers/components/list/CustomersList.js.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'react-bootstrap';\nimport { Wrapper } from '/imports/react-ui/layout/components';\nimport { Pagination } from '/imports/react-ui/common';\nimport { Widget } from '/imports/react-ui/engage/containers';\nimport Sidebar from './sidebar/Sidebar';\nimport CustomerRow from './CustomerRow';\nimport { ManageColumns } from '../../containers';\n\nconst propTypes = {\n  customers: PropTypes.array.isRequired,\n  counts: PropTypes.object.isRequired,\n  customerFields: PropTypes.array.isRequired,\n  segments: PropTypes.array.isRequired,\n  brands: PropTypes.array.isRequired,\n  integrations: PropTypes.array.isRequired,\n  tags: PropTypes.array.isRequired,\n  loadMore: PropTypes.func.isRequired,\n  hasMore: PropTypes.bool.isRequired,\n  bulk: PropTypes.array.isRequired,\n  toggleBulk: PropTypes.func.isRequired,\n};\n\nfunction CustomersList({\n  customers,\n  counts,\n  customerFields,\n  segments,\n  brands,\n  integrations,\n  tags,\n  loadMore,\n  hasMore,\n  bulk,\n  toggleBulk,\n}) {\n  const content = (\n    <Pagination hasMore={hasMore} loadMore={loadMore}>\n      <Table className=\"no-wrap\">\n        <thead>\n          <tr>\n            <th />\n            <th>\n              <ManageColumns />\n            </th>\n            {customerFields.map(({ key, label }) => (\n              <th key={key}>\n                {label}\n              </th>\n            ))}\n            <th>Tags</th>\n          </tr>\n        </thead>\n        <tbody>\n          {customers.map(customer => (\n            <CustomerRow\n              customer={customer}\n              customerFields={customerFields}\n              key={customer._id}\n              toggleBulk={toggleBulk}\n            />\n          ))}\n        </tbody>\n      </Table>\n    </Pagination>\n  );\n\n  const actionBar = <Wrapper.ActionBar left={<Widget customers={bulk} />} />;\n  const breadcrumb = [{ title: `Customers (${counts.all})` }];\n\n  return (\n    <div>\n      <Wrapper\n        header={<Wrapper.Header breadcrumb={breadcrumb} />}\n        actionBar={bulk.length > 0 ? actionBar : false}\n        leftSidebar={\n          <Sidebar\n            counts={counts}\n            segments={segments}\n            brands={brands}\n            integrations={integrations}\n            tags={tags}\n          />\n        }\n        content={content}\n      />\n    </div>\n  );\n}\n\nCustomersList.propTypes = propTypes;\n\nexport default CustomersList;\n"]},"hash":"6a6db2be39606d045cf15cd2c835178156732e18"}
