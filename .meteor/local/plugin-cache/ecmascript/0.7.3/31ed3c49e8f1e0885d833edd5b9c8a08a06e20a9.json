{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"react-apollo","imported":["ApolloClient","createNetworkInterface"],"specifiers":[{"kind":"named","imported":"ApolloClient","local":"ApolloClient"},{"kind":"named","imported":"createNetworkInterface","local":"createNetworkInterface"}]},{"source":"subscriptions-transport-ws","imported":["SubscriptionClient"],"specifiers":[{"kind":"named","imported":"SubscriptionClient","local":"SubscriptionClient"}]},{"source":"add-graphql-subscriptions","imported":["addGraphQLSubscriptions"],"specifiers":[{"kind":"named","imported":"addGraphQLSubscriptions","local":"addGraphQLSubscriptions"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/apollo-client.js","filenameRelative":"/imports/react-ui/apollo-client.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/apollo-client.js.map","sourceFileName":"/imports/react-ui/apollo-client.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"apollo-client"},"ignored":false,"code":"var Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar ApolloClient = void 0,\n    createNetworkInterface = void 0;\nmodule.importSync(\"react-apollo\", {\n  ApolloClient: function (v) {\n    ApolloClient = v;\n  },\n  createNetworkInterface: function (v) {\n    createNetworkInterface = v;\n  }\n}, 1);\nvar SubscriptionClient = void 0;\nmodule.importSync(\"subscriptions-transport-ws\", {\n  SubscriptionClient: function (v) {\n    SubscriptionClient = v;\n  }\n}, 2);\nvar addGraphQLSubscriptions = void 0;\nmodule.importSync(\"add-graphql-subscriptions\", {\n  addGraphQLSubscriptions: function (v) {\n    addGraphQLSubscriptions = v;\n  }\n}, 3);\nvar _Meteor$settings$publ = Meteor.settings.public,\n    APOLLO_CLIENT_URL = _Meteor$settings$publ.APOLLO_CLIENT_URL,\n    APOLLO_CLIENT_SUBSCRIPTION_URL = _Meteor$settings$publ.APOLLO_CLIENT_SUBSCRIPTION_URL;\nvar wsClient = new SubscriptionClient(APOLLO_CLIENT_SUBSCRIPTION_URL, {\n  reconnect: true,\n  connectionParams: {\n    token: Meteor.userId()\n  }\n}); // Create a normal network interface:\n\nvar networkInterface = createNetworkInterface({\n  uri: APOLLO_CLIENT_URL\n}); // Attach user credentials\n\nnetworkInterface.use([{\n  applyMiddleware: function (req, next) {\n    if (!req.options.headers) {\n      req.options.headers = {};\n    }\n\n    req.options.headers['authorization'] = Meteor.userId() ? \"Bearer \" + Meteor.userId() : null;\n    next();\n  }\n}]); // Extend the network interface with the WebSocket\n\nvar networkInterfaceWithSubscriptions = addGraphQLSubscriptions(networkInterface, wsClient); // Finally, create your ApolloClient instance with the modified network interface\n\nvar client = new ApolloClient({\n  networkInterface: networkInterfaceWithSubscriptions\n});\nmodule.export(\"default\", exports.default = client);","map":{"version":3,"sources":["/imports/react-ui/apollo-client.js"],"names":["Meteor","module","importSync","v","ApolloClient","createNetworkInterface","SubscriptionClient","addGraphQLSubscriptions","settings","public","APOLLO_CLIENT_URL","APOLLO_CLIENT_SUBSCRIPTION_URL","wsClient","reconnect","connectionParams","token","userId","networkInterface","uri","use","applyMiddleware","req","next","options","headers","networkInterfaceWithSubscriptions","client","export","exports","default"],"mappings":"AAAA,IAAIA,eAAJ;AAAWC,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACF,UAAO,UAASG,CAAT,EAAW;AAACH,aAAOG,CAAP;AAAS;AAA7B,CAAlC,EAAiE,CAAjE;AAAoE,IAAIC,qBAAJ;AAAA,IAAiBC,+BAAjB;AAAwCJ,OAAOC,UAAP,CAAkB,cAAlB,EAAiC;AAACE,gBAAa,UAASD,CAAT,EAAW;AAACC,mBAAaD,CAAb;AAAe,GAAzC;AAA0CE,0BAAuB,UAASF,CAAT,EAAW;AAACE,6BAAuBF,CAAvB;AAAyB;AAAtG,CAAjC,EAAyI,CAAzI;AAA4I,IAAIG,2BAAJ;AAAuBL,OAAOC,UAAP,CAAkB,4BAAlB,EAA+C;AAACI,sBAAmB,UAASH,CAAT,EAAW;AAACG,yBAAmBH,CAAnB;AAAqB;AAArD,CAA/C,EAAsG,CAAtG;AAAyG,IAAII,gCAAJ;AAA4BN,OAAOC,UAAP,CAAkB,2BAAlB,EAA8C;AAACK,2BAAwB,UAASJ,CAAT,EAAW;AAACI,8BAAwBJ,CAAxB;AAA0B;AAA/D,CAA9C,EAA+G,CAA/G;4BAKjWH,OAAOQ,QAAP,CAAgBC,M;IAAtEC,iB,yBAAAA,iB;IAAmBC,8B,yBAAAA,8B;AAE3B,IAAMC,WAAW,IAAIN,kBAAJ,CAAuBK,8BAAvB,EAAuD;AACtEE,aAAW,IAD2D;AAEtEC,oBAAkB;AAChBC,WAAOf,OAAOgB,MAAP;AADS;AAFoD,CAAvD,CAAjB,C,CAOA;;AACA,IAAMC,mBAAmBZ,uBAAuB;AAAEa,OAAKR;AAAP,CAAvB,CAAzB,C,CAEA;;AACAO,iBAAiBE,GAAjB,CAAqB,CACnB;AACEC,iBADF,YACkBC,GADlB,EACuBC,IADvB,EAC6B;AACzB,QAAI,CAACD,IAAIE,OAAJ,CAAYC,OAAjB,EAA0B;AACxBH,UAAIE,OAAJ,CAAYC,OAAZ,GAAsB,EAAtB;AACD;;AACDH,QAAIE,OAAJ,CAAYC,OAAZ,CAAoB,eAApB,IAAuCxB,OAAOgB,MAAP,iBAA4BhB,OAAOgB,MAAP,EAA5B,GAAgD,IAAvF;AACAM;AACD;AAPH,CADmB,CAArB,E,CAYA;;AACA,IAAMG,oCAAoClB,wBAAwBU,gBAAxB,EAA0CL,QAA1C,CAA1C,C,CAEA;;AACA,IAAMc,SAAS,IAAItB,YAAJ,CAAiB;AAC9Ba,oBAAkBQ;AADY,CAAjB,CAAf;AAlCAxB,OAAO0B,MAAP,CAAc,SAAd,EAAwBC,QAAQC,OAAR,GAsCTH,MAtCf","file":"/imports/react-ui/apollo-client.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ApolloClient, createNetworkInterface } from 'react-apollo';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { addGraphQLSubscriptions } from 'add-graphql-subscriptions';\n\nconst { APOLLO_CLIENT_URL, APOLLO_CLIENT_SUBSCRIPTION_URL } = Meteor.settings.public;\n\nconst wsClient = new SubscriptionClient(APOLLO_CLIENT_SUBSCRIPTION_URL, {\n  reconnect: true,\n  connectionParams: {\n    token: Meteor.userId(),\n  },\n});\n\n// Create a normal network interface:\nconst networkInterface = createNetworkInterface({ uri: APOLLO_CLIENT_URL });\n\n// Attach user credentials\nnetworkInterface.use([\n  {\n    applyMiddleware(req, next) {\n      if (!req.options.headers) {\n        req.options.headers = {};\n      }\n      req.options.headers['authorization'] = Meteor.userId() ? `Bearer ${Meteor.userId()}` : null;\n      next();\n    },\n  },\n]);\n\n// Extend the network interface with the WebSocket\nconst networkInterfaceWithSubscriptions = addGraphQLSubscriptions(networkInterface, wsClient);\n\n// Finally, create your ApolloClient instance with the modified network interface\nconst client = new ApolloClient({\n  networkInterface: networkInterfaceWithSubscriptions,\n});\n\nexport default client;\n"]},"hash":"31ed3c49e8f1e0885d833edd5b9c8a08a06e20a9"}
