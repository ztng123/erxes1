{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-bootstrap","imported":["Table","Button"],"specifiers":[{"kind":"named","imported":"Table","local":"Table"},{"kind":"named","imported":"Button","local":"Button"}]},{"source":"/imports/react-ui/layout/components","imported":["Wrapper"],"specifiers":[{"kind":"named","imported":"Wrapper","local":"Wrapper"}]},{"source":"/imports/react-ui/common","imported":["TaggerPopover"],"specifiers":[{"kind":"named","imported":"TaggerPopover","local":"TaggerPopover"}]},{"source":"../containers","imported":["MessageListRow","Sidebar"],"specifiers":[{"kind":"named","imported":"MessageListRow","local":"MessageListRow"},{"kind":"named","imported":"Sidebar","local":"SidebarContainers"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/engage/components/MessageList.js","filenameRelative":"/imports/react-ui/engage/components/MessageList.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/engage/components/MessageList.js.map","sourceFileName":"/imports/react-ui/engage/components/MessageList.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"MessageList"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar Table = void 0,\n    Button = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  Table: function (v) {\n    Table = v;\n  },\n  Button: function (v) {\n    Button = v;\n  }\n}, 2);\nvar Wrapper = void 0;\nmodule.importSync(\"/imports/react-ui/layout/components\", {\n  Wrapper: function (v) {\n    Wrapper = v;\n  }\n}, 3);\nvar TaggerPopover = void 0;\nmodule.importSync(\"/imports/react-ui/common\", {\n  TaggerPopover: function (v) {\n    TaggerPopover = v;\n  }\n}, 4);\nvar MessageListRow = void 0,\n    SidebarContainers = void 0;\nmodule.importSync(\"../containers\", {\n  MessageListRow: function (v) {\n    MessageListRow = v;\n  },\n  Sidebar: function (v) {\n    SidebarContainers = v;\n  }\n}, 5);\nvar propTypes = {\n  messages: PropTypes.array.isRequired,\n  tags: PropTypes.array.isRequired,\n  bulk: PropTypes.array.isRequired,\n  refetch: PropTypes.func.isRequired,\n  emptyBulk: PropTypes.func.isRequired,\n  toggleBulk: PropTypes.func.isRequired\n};\n\nvar List = function (_React$Component) {\n  (0, _inherits3.default)(List, _React$Component);\n\n  function List() {\n    (0, _classCallCheck3.default)(this, List);\n    return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));\n  }\n\n  List.prototype.renderTagger = function () {\n    function renderTagger() {\n      var _props = this.props,\n          bulk = _props.bulk,\n          emptyBulk = _props.emptyBulk;\n\n      if (bulk.length) {\n        var targets = bulk.map(function (b) {\n          return b._id;\n        });\n        return React.createElement(TaggerPopover, {\n          type: \"engageMessage\",\n          targets: targets,\n          trigger: React.createElement(\n            Button,\n            {\n              bsStyle: \"link\"\n            },\n            React.createElement(\"i\", {\n              className: \"ion-pricetags\"\n            }),\n            \" Tag \",\n            React.createElement(\"span\", {\n              className: \"caret\"\n            })\n          ),\n          afterSave: emptyBulk\n        });\n      }\n    }\n\n    return renderTagger;\n  }();\n\n  List.prototype.render = function () {\n    function render() {\n      var _props2 = this.props,\n          messages = _props2.messages,\n          tags = _props2.tags,\n          toggleBulk = _props2.toggleBulk,\n          refetch = _props2.refetch;\n      var actionBarLeft = React.createElement(\n        \"div\",\n        null,\n        React.createElement(\n          Button,\n          {\n            bsStyle: \"link\",\n            href: '/engage/messages/create?kind=auto'\n          },\n          React.createElement(\"i\", {\n            className: \"ion-plus-circled\"\n          }),\n          \" New auto message\"\n        ),\n        React.createElement(\n          Button,\n          {\n            bsStyle: \"link\",\n            href: '/engage/messages/create?kind=visitorAuto'\n          },\n          React.createElement(\"i\", {\n            className: \"ion-plus-circled\"\n          }),\n          \" New visitor auto message\"\n        ),\n        React.createElement(\n          Button,\n          {\n            bsStyle: \"link\",\n            href: '/engage/messages/create?kind=manual'\n          },\n          React.createElement(\"i\", {\n            className: \"ion-plus-circled\"\n          }),\n          \" New manual message\"\n        ),\n        this.renderTagger()\n      );\n      var actionBar = React.createElement(Wrapper.ActionBar, {\n        left: actionBarLeft\n      });\n      var content = React.createElement(\n        Table,\n        {\n          className: \"no-wrap\"\n        },\n        React.createElement(\n          \"thead\",\n          null,\n          React.createElement(\n            \"tr\",\n            null,\n            React.createElement(\"th\", null),\n            React.createElement(\n              \"th\",\n              null,\n              \"Title\"\n            ),\n            React.createElement(\n              \"th\",\n              null,\n              \"Segment\"\n            ),\n            React.createElement(\n              \"th\",\n              null,\n              \"From\"\n            ),\n            React.createElement(\n              \"th\",\n              null,\n              \"Status\"\n            ),\n            React.createElement(\n              \"th\",\n              null,\n              \"Total\"\n            ),\n            React.createElement(\n              \"th\",\n              null,\n              \"Sent\"\n            ),\n            React.createElement(\n              \"th\",\n              null,\n              \"Failed\"\n            ),\n            React.createElement(\n              \"th\",\n              null,\n              \"Created date\"\n            ),\n            React.createElement(\n              \"th\",\n              {\n                className: \"text-right\"\n              },\n              \"Actions\"\n            )\n          )\n        ),\n        React.createElement(\n          \"tbody\",\n          null,\n          messages.map(function (message) {\n            return React.createElement(MessageListRow, {\n              toggleBulk: toggleBulk,\n              refetch: refetch,\n              key: message._id,\n              message: message\n            });\n          })\n        )\n      );\n      var sidebar = React.createElement(\n        Wrapper.Sidebar,\n        null,\n        React.createElement(SidebarContainers.Main, null),\n        React.createElement(SidebarContainers.Status, null),\n        React.createElement(SidebarContainers.Tag, {\n          tags: tags,\n          manageUrl: \"tags/engageMessage\"\n        })\n      );\n      return React.createElement(\n        \"div\",\n        null,\n        React.createElement(Wrapper, {\n          header: React.createElement(Wrapper.Header, {\n            breadcrumb: [{\n              title: 'Engage'\n            }]\n          }),\n          leftSidebar: sidebar,\n          actionBar: actionBar,\n          content: content\n        })\n      );\n    }\n\n    return render;\n  }();\n\n  return List;\n}(React.Component);\n\nList.propTypes = propTypes;\nmodule.export(\"default\", exports.default = List);","map":{"version":3,"sources":["/imports/react-ui/engage/components/MessageList.js"],"names":["React","module","importSync","v","PropTypes","Table","Button","Wrapper","TaggerPopover","MessageListRow","SidebarContainers","Sidebar","propTypes","messages","array","isRequired","tags","bulk","refetch","func","emptyBulk","toggleBulk","List","renderTagger","props","length","targets","map","b","_id","render","actionBarLeft","actionBar","content","message","sidebar","title","Component","export","exports","default"],"mappings":"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","file":"/imports/react-ui/engage/components/MessageList.js.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Button } from 'react-bootstrap';\nimport { Wrapper } from '/imports/react-ui/layout/components';\nimport { TaggerPopover } from '/imports/react-ui/common';\nimport { MessageListRow, Sidebar as SidebarContainers } from '../containers';\n\nconst propTypes = {\n  messages: PropTypes.array.isRequired,\n  tags: PropTypes.array.isRequired,\n  bulk: PropTypes.array.isRequired,\n  refetch: PropTypes.func.isRequired,\n  emptyBulk: PropTypes.func.isRequired,\n  toggleBulk: PropTypes.func.isRequired,\n};\n\nclass List extends React.Component {\n  renderTagger() {\n    const { bulk, emptyBulk } = this.props;\n\n    if (bulk.length) {\n      const targets = bulk.map(b => b._id);\n\n      return (\n        <TaggerPopover\n          type=\"engageMessage\"\n          targets={targets}\n          trigger={\n            <Button bsStyle=\"link\">\n              <i className=\"ion-pricetags\" /> Tag <span className=\"caret\" />\n            </Button>\n          }\n          afterSave={emptyBulk}\n        />\n      );\n    }\n  }\n\n  render() {\n    const { messages, tags, toggleBulk, refetch } = this.props;\n    const actionBarLeft = (\n      <div>\n        <Button bsStyle=\"link\" href={'/engage/messages/create?kind=auto'}>\n          <i className=\"ion-plus-circled\" /> New auto message\n        </Button>\n\n        <Button bsStyle=\"link\" href={'/engage/messages/create?kind=visitorAuto'}>\n          <i className=\"ion-plus-circled\" /> New visitor auto message\n        </Button>\n\n        <Button bsStyle=\"link\" href={'/engage/messages/create?kind=manual'}>\n          <i className=\"ion-plus-circled\" /> New manual message\n        </Button>\n        {this.renderTagger()}\n      </div>\n    );\n\n    const actionBar = <Wrapper.ActionBar left={actionBarLeft} />;\n\n    const content = (\n      <Table className=\"no-wrap\">\n        <thead>\n          <tr>\n            <th />\n            <th>Title</th>\n            <th>Segment</th>\n            <th>From</th>\n            <th>Status</th>\n            <th>Total</th>\n            <th>Sent</th>\n            <th>Failed</th>\n            <th>Created date</th>\n            <th className=\"text-right\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {messages.map(message => (\n            <MessageListRow\n              toggleBulk={toggleBulk}\n              refetch={refetch}\n              key={message._id}\n              message={message}\n            />\n          ))}\n        </tbody>\n      </Table>\n    );\n\n    const sidebar = (\n      <Wrapper.Sidebar>\n        <SidebarContainers.Main />\n        <SidebarContainers.Status />\n        <SidebarContainers.Tag tags={tags} manageUrl=\"tags/engageMessage\" />\n      </Wrapper.Sidebar>\n    );\n\n    return (\n      <div>\n        <Wrapper\n          header={<Wrapper.Header breadcrumb={[{ title: 'Engage' }]} />}\n          leftSidebar={sidebar}\n          actionBar={actionBar}\n          content={content}\n        />\n      </div>\n    );\n  }\n}\n\nList.propTypes = propTypes;\n\nexport default List;\n"]},"hash":"03f6e6cca302481f937da2f39de71dde118098bf"}
