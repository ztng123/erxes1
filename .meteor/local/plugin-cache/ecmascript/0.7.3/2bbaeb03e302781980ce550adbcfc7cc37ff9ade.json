{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"./messages.js","imported":["Messages"],"specifiers":[{"kind":"named","imported":"Messages","local":"Messages"}]},{"source":"./conversations.js","imported":["Conversations"],"specifiers":[{"kind":"named","imported":"Conversations","local":"Conversations"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/api/conversations/messageCountDenormalizer.js","filenameRelative":"/imports/api/conversations/messageCountDenormalizer.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/api/conversations/messageCountDenormalizer.js.map","sourceFileName":"/imports/api/conversations/messageCountDenormalizer.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"messageCountDenormalizer"},"ignored":false,"code":"var Messages = void 0;\nmodule.importSync(\"./messages.js\", {\n  Messages: function (v) {\n    Messages = v;\n  }\n}, 0);\nvar Conversations = void 0;\nmodule.importSync(\"./conversations.js\", {\n  Conversations: function (v) {\n    Conversations = v;\n  }\n}, 1);\nvar messageCountDenormalizer = {\n  _updateConversation: function (conversationId) {\n    // Recalculate the correct message count direct from MongoDB\n    var messageCount = Messages.find({\n      conversationId: conversationId\n    }).count();\n    Conversations.update(conversationId, {\n      $set: {\n        messageCount: messageCount\n      }\n    });\n  },\n  afterInsertMessage: function (message) {\n    this._updateConversation(message.conversationId);\n  },\n  // Here we need to take the list of messages being removed,\n  // selected *before* the update because otherwise we can't figure out\n  // the relevant message id(s) (if the message has been deleted)\n  afterRemoveMessages: function (messages) {\n    var _this = this;\n\n    messages.forEach(function (message) {\n      return _this._updateConversation(message.conversationId);\n    });\n  }\n};\nmodule.export(\"default\", exports.default = messageCountDenormalizer);","map":{"version":3,"sources":["/imports/api/conversations/messageCountDenormalizer.js"],"names":["Messages","module","importSync","v","Conversations","messageCountDenormalizer","_updateConversation","conversationId","messageCount","find","count","update","$set","afterInsertMessage","message","afterRemoveMessages","messages","forEach","export","exports","default"],"mappings":"AAAA,IAAIA,iBAAJ;AAAaC,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACF,YAAS,UAASG,CAAT,EAAW;AAACH,eAASG,CAAT;AAAW;AAAjC,CAAlC,EAAqE,CAArE;AAAwE,IAAIC,sBAAJ;AAAkBH,OAAOC,UAAP,CAAkB,oBAAlB,EAAuC;AAACE,iBAAc,UAASD,CAAT,EAAW;AAACC,oBAAcD,CAAd;AAAgB;AAA3C,CAAvC,EAAoF,CAApF;AAGvG,IAAME,2BAA2B;AAC/BC,qBAD+B,YACXC,cADW,EACK;AAClC;AACA,QAAMC,eAAeR,SAASS,IAAT,CAAc;AACjCF;AADiC,KAAd,EAElBG,KAFkB,EAArB;AAIAN,kBAAcO,MAAd,CAAqBJ,cAArB,EAAqC;AAAEK,YAAM;AAAEJ;AAAF;AAAR,KAArC;AACD,GAR8B;AAU/BK,oBAV+B,YAUZC,OAVY,EAUH;AAC1B,SAAKR,mBAAL,CAAyBQ,QAAQP,cAAjC;AACD,GAZ8B;AAc/B;AACA;AACA;AACAQ,qBAjB+B,YAiBXC,QAjBW,EAiBD;AAAA;;AAC5BA,aAASC,OAAT,CAAiB;AAAA,aAAW,MAAKX,mBAAL,CAAyBQ,QAAQP,cAAjC,CAAX;AAAA,KAAjB;AACD;AAnB8B,CAAjC;AAHAN,OAAOiB,MAAP,CAAc,SAAd,EAAwBC,QAAQC,OAAR,GAyBTf,wBAzBf","file":"/imports/api/conversations/messageCountDenormalizer.js.map","sourcesContent":["import { Messages } from './messages.js';\nimport { Conversations } from './conversations.js';\n\nconst messageCountDenormalizer = {\n  _updateConversation(conversationId) {\n    // Recalculate the correct message count direct from MongoDB\n    const messageCount = Messages.find({\n      conversationId,\n    }).count();\n\n    Conversations.update(conversationId, { $set: { messageCount } });\n  },\n\n  afterInsertMessage(message) {\n    this._updateConversation(message.conversationId);\n  },\n\n  // Here we need to take the list of messages being removed,\n  // selected *before* the update because otherwise we can't figure out\n  // the relevant message id(s) (if the message has been deleted)\n  afterRemoveMessages(messages) {\n    messages.forEach(message => this._updateConversation(message.conversationId));\n  },\n};\n\nexport default messageCountDenormalizer;\n"]},"hash":"2bbaeb03e302781980ce550adbcfc7cc37ff9ade"}
