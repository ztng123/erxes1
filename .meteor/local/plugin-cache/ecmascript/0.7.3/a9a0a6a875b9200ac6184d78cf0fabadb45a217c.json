{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react-komposer","imported":["compose"],"specifiers":[{"kind":"named","imported":"compose","local":"compose"}]},{"source":"/imports/react-ui/utils","imported":["getTrackerLoader"],"specifiers":[{"kind":"named","imported":"getTrackerLoader","local":"getTrackerLoader"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/accounts-base","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]},{"source":"meteor/erxes-notifier","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Alert"}]},{"source":"../components","imported":["ChangePassword"],"specifiers":[{"kind":"named","imported":"ChangePassword","local":"ChangePassword"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/settings/profile/containers/ChangePassword.js","filenameRelative":"/imports/react-ui/settings/profile/containers/ChangePassword.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/settings/profile/containers/ChangePassword.js.map","sourceFileName":"/imports/react-ui/settings/profile/containers/ChangePassword.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"ChangePassword"},"ignored":false,"code":"var compose = void 0;\nmodule.importSync(\"react-komposer\", {\n  compose: function (v) {\n    compose = v;\n  }\n}, 0);\nvar getTrackerLoader = void 0;\nmodule.importSync(\"/imports/react-ui/utils\", {\n  getTrackerLoader: function (v) {\n    getTrackerLoader = v;\n  }\n}, 1);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 2);\nvar Accounts = void 0;\nmodule.importSync(\"meteor/accounts-base\", {\n  Accounts: function (v) {\n    Accounts = v;\n  }\n}, 3);\nvar Alert = void 0;\nmodule.importSync(\"meteor/erxes-notifier\", {\n  \"default\": function (v) {\n    Alert = v;\n  }\n}, 4);\nvar ChangePassword = void 0;\nmodule.importSync(\"../components\", {\n  ChangePassword: function (v) {\n    ChangePassword = v;\n  }\n}, 5);\n\nfunction composer(props, onData) {\n  // save function\n  var save = function (_ref) {\n    var currentPassword = _ref.currentPassword,\n        newPassword = _ref.newPassword,\n        confirmation = _ref.confirmation;\n\n    if (newPassword !== confirmation) {\n      return Alert.error(\"Password didn't match\");\n    }\n\n    return Accounts.changePassword(currentPassword, newPassword, function (error) {\n      if (error) {\n        return Alert.error(error.reason);\n      }\n\n      return Alert.success('Success');\n    });\n  };\n\n  onData(null, {\n    user: Meteor.user(),\n    save: save\n  });\n}\n\nmodule.export(\"default\", exports.default = compose(getTrackerLoader(composer))(ChangePassword));","map":{"version":3,"sources":["/imports/react-ui/settings/profile/containers/ChangePassword.js"],"names":["compose","module","importSync","v","getTrackerLoader","Meteor","Accounts","Alert","ChangePassword","composer","props","onData","save","currentPassword","newPassword","confirmation","error","changePassword","reason","success","user","export","exports","default"],"mappings":"AAAA,IAAIA,gBAAJ;AAAYC,OAAOC,UAAP,CAAkB,gBAAlB,EAAmC;AAACF,WAAQ,UAASG,CAAT,EAAW;AAACH,cAAQG,CAAR;AAAU;AAA/B,CAAnC,EAAoE,CAApE;AAAuE,IAAIC,yBAAJ;AAAqBH,OAAOC,UAAP,CAAkB,yBAAlB,EAA4C;AAACE,oBAAiB,UAASD,CAAT,EAAW;AAACC,uBAAiBD,CAAjB;AAAmB;AAAjD,CAA5C,EAA+F,CAA/F;AAAkG,IAAIE,eAAJ;AAAWJ,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACG,UAAO,UAASF,CAAT,EAAW;AAACE,aAAOF,CAAP;AAAS;AAA7B,CAAlC,EAAiE,CAAjE;AAAoE,IAAIG,iBAAJ;AAAaL,OAAOC,UAAP,CAAkB,sBAAlB,EAAyC;AAACI,YAAS,UAASH,CAAT,EAAW;AAACG,eAASH,CAAT;AAAW;AAAjC,CAAzC,EAA4E,CAA5E;AAA+E,IAAII,cAAJ;AAAUN,OAAOC,UAAP,CAAkB,uBAAlB,EAA0C;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACI,YAAMJ,CAAN;AAAQ;AAA7B,CAA1C,EAAyE,CAAzE;AAA4E,IAAIK,uBAAJ;AAAmBP,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACM,kBAAe,UAASL,CAAT,EAAW;AAACK,qBAAeL,CAAf;AAAiB;AAA7C,CAAlC,EAAiF,CAAjF;;AAO9d,SAASM,QAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAiC;AAC/B;AACA,MAAMC,OAAO,gBAAoD;AAAA,QAAjDC,eAAiD,QAAjDA,eAAiD;AAAA,QAAhCC,WAAgC,QAAhCA,WAAgC;AAAA,QAAnBC,YAAmB,QAAnBA,YAAmB;;AAC/D,QAAID,gBAAgBC,YAApB,EAAkC;AAChC,aAAOR,MAAMS,KAAN,CAAY,uBAAZ,CAAP;AACD;;AAED,WAAOV,SAASW,cAAT,CAAwBJ,eAAxB,EAAyCC,WAAzC,EAAsD,iBAAS;AACpE,UAAIE,KAAJ,EAAW;AACT,eAAOT,MAAMS,KAAN,CAAYA,MAAME,MAAlB,CAAP;AACD;;AAED,aAAOX,MAAMY,OAAN,CAAc,SAAd,CAAP;AACD,KANM,CAAP;AAOD,GAZD;;AAcAR,SAAO,IAAP,EAAa;AAAES,UAAMf,OAAOe,IAAP,EAAR;AAAuBR;AAAvB,GAAb;AACD;;AAxBDX,OAAOoB,MAAP,CAAc,SAAd,EAAwBC,QAAQC,OAAR,GA0BTvB,QAAQI,iBAAiBK,QAAjB,CAAR,EAAoCD,cAApC,CA1Bf","file":"/imports/react-ui/settings/profile/containers/ChangePassword.js.map","sourcesContent":["import { compose } from 'react-komposer';\nimport { getTrackerLoader } from '/imports/react-ui/utils';\nimport { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\nimport Alert from 'meteor/erxes-notifier';\nimport { ChangePassword } from '../components';\n\nfunction composer(props, onData) {\n  // save function\n  const save = ({ currentPassword, newPassword, confirmation }) => {\n    if (newPassword !== confirmation) {\n      return Alert.error(\"Password didn't match\");\n    }\n\n    return Accounts.changePassword(currentPassword, newPassword, error => {\n      if (error) {\n        return Alert.error(error.reason);\n      }\n\n      return Alert.success('Success');\n    });\n  };\n\n  onData(null, { user: Meteor.user(), save });\n}\n\nexport default compose(getTrackerLoader(composer))(ChangePassword);\n"]},"hash":"a9a0a6a875b9200ac6184d78cf0fabadb45a217c"}
