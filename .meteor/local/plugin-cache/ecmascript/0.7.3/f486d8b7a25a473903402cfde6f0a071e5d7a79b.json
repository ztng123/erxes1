{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/erxes-notifications","imported":["Notifications"],"specifiers":[{"kind":"named","imported":"Notifications","local":"Notifications"}]},{"source":"react-komposer","imported":["compose"],"specifiers":[{"kind":"named","imported":"compose","local":"compose"}]},{"source":"/imports/react-ui/utils","imported":["getTrackerLoader","composerOptions"],"specifiers":[{"kind":"named","imported":"getTrackerLoader","local":"getTrackerLoader"},{"kind":"named","imported":"composerOptions","local":"composerOptions"}]},{"source":"../../components","imported":["NotificationsLatest"],"specifiers":[{"kind":"named","imported":"NotificationsLatest","local":"NotificationsLatest"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/layout/containers/Notifications/NotificationsLatest.js","filenameRelative":"/imports/react-ui/layout/containers/Notifications/NotificationsLatest.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/layout/containers/Notifications/NotificationsLatest.js.map","sourceFileName":"/imports/react-ui/layout/containers/Notifications/NotificationsLatest.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"NotificationsLatest"},"ignored":false,"code":"var Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Notifications = void 0;\nmodule.importSync(\"meteor/erxes-notifications\", {\n  Notifications: function (v) {\n    Notifications = v;\n  }\n}, 1);\nvar compose = void 0;\nmodule.importSync(\"react-komposer\", {\n  compose: function (v) {\n    compose = v;\n  }\n}, 2);\nvar getTrackerLoader = void 0,\n    composerOptions = void 0;\nmodule.importSync(\"/imports/react-ui/utils\", {\n  getTrackerLoader: function (v) {\n    getTrackerLoader = v;\n  },\n  composerOptions: function (v) {\n    composerOptions = v;\n  }\n}, 3);\nvar NotificationsLatest = void 0;\nmodule.importSync(\"../../components\", {\n  NotificationsLatest: function (v) {\n    NotificationsLatest = v;\n  }\n}, 4);\n\nfunction composer(props, onData) {\n  var handler = Meteor.subscribe('notifications.latest', {\n    limit: 10,\n    requireRead: false\n  });\n\n  if (handler.ready()) {\n    var createdUserIds = [];\n    var notifications = Notifications.find({}, {\n      limit: 10,\n      sort: {\n        date: -1\n      }\n    });\n    notifications.forEach(function (notification) {\n      createdUserIds.push(notification.createdUser);\n    });\n    Meteor.subscribe('users.list', {\n      ids: createdUserIds\n    });\n    onData(null, {\n      notifications: notifications.fetch()\n    });\n  }\n}\n\nmodule.export(\"default\", exports.default = compose(getTrackerLoader(composer), composerOptions({\n  spinner: true\n}))(NotificationsLatest));","map":{"version":3,"sources":["/imports/react-ui/layout/containers/Notifications/NotificationsLatest.js"],"names":["Meteor","module","importSync","v","Notifications","compose","getTrackerLoader","composerOptions","NotificationsLatest","composer","props","onData","handler","subscribe","limit","requireRead","ready","createdUserIds","notifications","find","sort","date","forEach","push","notification","createdUser","ids","fetch","export","exports","default","spinner"],"mappings":"AAAA,IAAIA,eAAJ;AAAWC,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACF,UAAO,UAASG,CAAT,EAAW;AAACH,aAAOG,CAAP;AAAS;AAA7B,CAAlC,EAAiE,CAAjE;AAAoE,IAAIC,sBAAJ;AAAkBH,OAAOC,UAAP,CAAkB,4BAAlB,EAA+C;AAACE,iBAAc,UAASD,CAAT,EAAW;AAACC,oBAAcD,CAAd;AAAgB;AAA3C,CAA/C,EAA4F,CAA5F;AAA+F,IAAIE,gBAAJ;AAAYJ,OAAOC,UAAP,CAAkB,gBAAlB,EAAmC;AAACG,WAAQ,UAASF,CAAT,EAAW;AAACE,cAAQF,CAAR;AAAU;AAA/B,CAAnC,EAAoE,CAApE;AAAuE,IAAIG,yBAAJ;AAAA,IAAqBC,wBAArB;AAAqCN,OAAOC,UAAP,CAAkB,yBAAlB,EAA4C;AAACI,oBAAiB,UAASH,CAAT,EAAW;AAACG,uBAAiBH,CAAjB;AAAmB,GAAjD;AAAkDI,mBAAgB,UAASJ,CAAT,EAAW;AAACI,sBAAgBJ,CAAhB;AAAkB;AAAhG,CAA5C,EAA8I,CAA9I;AAAiJ,IAAIK,4BAAJ;AAAwBP,OAAOC,UAAP,CAAkB,kBAAlB,EAAqC;AAACM,uBAAoB,UAASL,CAAT,EAAW;AAACK,0BAAoBL,CAApB;AAAsB;AAAvD,CAArC,EAA8F,CAA9F;;AAMje,SAASM,QAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAiC;AAC/B,MAAMC,UAAUZ,OAAOa,SAAP,CAAiB,sBAAjB,EAAyC;AACvDC,WAAO,EADgD;AAEvDC,iBAAa;AAF0C,GAAzC,CAAhB;;AAKA,MAAIH,QAAQI,KAAR,EAAJ,EAAqB;AACnB,QAAMC,iBAAiB,EAAvB;AAEA,QAAMC,gBAAgBd,cAAce,IAAd,CAAmB,EAAnB,EAAuB;AAAEL,aAAO,EAAT;AAAaM,YAAM;AAAEC,cAAM,CAAC;AAAT;AAAnB,KAAvB,CAAtB;AAEAH,kBAAcI,OAAd,CAAsB,wBAAgB;AACpCL,qBAAeM,IAAf,CAAoBC,aAAaC,WAAjC;AACD,KAFD;AAIAzB,WAAOa,SAAP,CAAiB,YAAjB,EAA+B;AAAEa,WAAKT;AAAP,KAA/B;AAEAN,WAAO,IAAP,EAAa;AAAEO,qBAAeA,cAAcS,KAAd;AAAjB,KAAb;AACD;AACF;;AAzBD1B,OAAO2B,MAAP,CAAc,SAAd,EAAwBC,QAAQC,OAAR,GA2BTzB,QAAQC,iBAAiBG,QAAjB,CAAR,EAAoCF,gBAAgB;AAAEwB,WAAS;AAAX,CAAhB,CAApC,EACbvB,mBADa,CA3Bf","file":"/imports/react-ui/layout/containers/Notifications/NotificationsLatest.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Notifications } from 'meteor/erxes-notifications';\nimport { compose } from 'react-komposer';\nimport { getTrackerLoader, composerOptions } from '/imports/react-ui/utils';\nimport { NotificationsLatest } from '../../components';\n\nfunction composer(props, onData) {\n  const handler = Meteor.subscribe('notifications.latest', {\n    limit: 10,\n    requireRead: false,\n  });\n\n  if (handler.ready()) {\n    const createdUserIds = [];\n\n    const notifications = Notifications.find({}, { limit: 10, sort: { date: -1 } });\n\n    notifications.forEach(notification => {\n      createdUserIds.push(notification.createdUser);\n    });\n\n    Meteor.subscribe('users.list', { ids: createdUserIds });\n\n    onData(null, { notifications: notifications.fetch() });\n  }\n}\n\nexport default compose(getTrackerLoader(composer), composerOptions({ spinner: true }))(\n  NotificationsLatest,\n);\n"]},"hash":"f486d8b7a25a473903402cfde6f0a071e5d7a79b"}
