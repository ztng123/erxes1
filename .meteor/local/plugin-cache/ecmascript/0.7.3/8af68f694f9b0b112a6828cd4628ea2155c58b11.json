{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"moment","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"moment"}]},{"source":"react-bootstrap","imported":["Button","Label"],"specifiers":[{"kind":"named","imported":"Button","local":"Button"},{"kind":"named","imported":"Label","local":"Label"}]},{"source":"/imports/react-ui/common","imported":["Tip","ActionButtons","NameCard"],"specifiers":[{"kind":"named","imported":"Tip","local":"Tip"},{"kind":"named","imported":"ActionButtons","local":"ActionButtons"},{"kind":"named","imported":"NameCard","local":"NameCard"}]},{"source":"/imports/api/engage/constants","imported":["MESSAGE_KINDS"],"specifiers":[{"kind":"named","imported":"MESSAGE_KINDS","local":"MESSAGE_KINDS"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/engage/components/MessageListRow.js","filenameRelative":"/imports/react-ui/engage/components/MessageListRow.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/engage/components/MessageListRow.js.map","sourceFileName":"/imports/react-ui/engage/components/MessageListRow.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"MessageListRow"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar moment = void 0;\nmodule.importSync(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 2);\nvar Button = void 0,\n    Label = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  Button: function (v) {\n    Button = v;\n  },\n  Label: function (v) {\n    Label = v;\n  }\n}, 3);\nvar Tip = void 0,\n    ActionButtons = void 0,\n    NameCard = void 0;\nmodule.importSync(\"/imports/react-ui/common\", {\n  Tip: function (v) {\n    Tip = v;\n  },\n  ActionButtons: function (v) {\n    ActionButtons = v;\n  },\n  NameCard: function (v) {\n    NameCard = v;\n  }\n}, 4);\nvar MESSAGE_KINDS = void 0;\nmodule.importSync(\"/imports/api/engage/constants\", {\n  MESSAGE_KINDS: function (v) {\n    MESSAGE_KINDS = v;\n  }\n}, 5);\nvar propTypes = {\n  message: PropTypes.object.isRequired,\n  edit: PropTypes.func.isRequired,\n  remove: PropTypes.func.isRequired,\n  setLive: PropTypes.func.isRequired,\n  setLiveManual: PropTypes.func.isRequired,\n  setPause: PropTypes.func.isRequired,\n  toggleBulk: PropTypes.func.isRequired\n};\n\nvar Row = function (_React$Component) {\n  (0, _inherits3.default)(Row, _React$Component);\n\n  function Row(props) {\n    (0, _classCallCheck3.default)(this, Row);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));\n\n    _this.toggleBulk = _this.toggleBulk.bind(_this);\n    return _this;\n  }\n\n  Row.prototype.renderLink = function () {\n    function renderLink(text, className, onClick) {\n      return React.createElement(\n        Tip,\n        {\n          text: text,\n          key: text + \"-\" + this.props.message._id\n        },\n        React.createElement(\n          Button,\n          {\n            bsStyle: \"link\",\n            onClick: onClick\n          },\n          React.createElement(\"i\", {\n            className: className\n          })\n        )\n      );\n    }\n\n    return renderLink;\n  }();\n\n  Row.prototype.renderLinks = function () {\n    function renderLinks() {\n      var msg = this.props.message;\n      var edit = this.renderLink('Edit', 'ion-edit', this.props.edit);\n      var pause = this.renderLink('Pause', 'ion-pause', this.props.setPause);\n      var live = this.renderLink('Set live', 'ion-paper-airplane', this.props.setLive);\n\n      if (msg.kind !== MESSAGE_KINDS.MANUAL) {\n        if (msg.isDraft) {\n          return [edit, live];\n        }\n\n        if (msg.isLive) {\n          return [edit, pause];\n        }\n\n        return [edit, live];\n      }\n\n      if (msg.isDraft) {\n        return this.renderLink('Set live', 'ion-paper-airplane', this.setLiveManual);\n      }\n    }\n\n    return renderLinks;\n  }();\n\n  Row.prototype.toggleBulk = function () {\n    function toggleBulk(e) {\n      this.props.toggleBulk(this.props.message, e.target.checked);\n    }\n\n    return toggleBulk;\n  }();\n\n  Row.prototype.render = function () {\n    function render() {\n      var status = React.createElement(\n        Label,\n        {\n          bsStyle: \"info\"\n        },\n        \"Sending\"\n      );\n      var successCount = 0;\n      var failedCount = 0;\n      var _props = this.props,\n          message = _props.message,\n          remove = _props.remove;\n      var deliveryReports = Object.values(message.deliveryReports);\n      var totalCount = deliveryReports.length;\n      var segment = message.segment || {};\n      deliveryReports.forEach(function (report) {\n        if (report.status === 'sent') {\n          successCount++;\n        }\n\n        if (report.status === 'failed') {\n          failedCount++;\n        }\n      });\n\n      if (totalCount === successCount + failedCount) {\n        status = React.createElement(\n          Label,\n          {\n            bsStyle: \"success\"\n          },\n          \"Sent\"\n        );\n      }\n\n      return React.createElement(\n        \"tr\",\n        {\n          key: message._id\n        },\n        React.createElement(\n          \"td\",\n          {\n            className: \"less-space\"\n          },\n          React.createElement(\"input\", {\n            type: \"checkbox\",\n            onChange: this.toggleBulk\n          })\n        ),\n        React.createElement(\n          \"td\",\n          null,\n          message.title\n        ),\n        React.createElement(\n          \"td\",\n          null,\n          React.createElement(\"i\", {\n            className: \"ion-pie-graph\"\n          }),\n          \" \",\n          segment.name\n        ),\n        React.createElement(\n          \"td\",\n          {\n            className: \"text-normal\"\n          },\n          React.createElement(NameCard, {\n            user: message.fromUser,\n            avatarSize: 32,\n            singleLine: true\n          })\n        ),\n        React.createElement(\n          \"td\",\n          null,\n          status\n        ),\n        React.createElement(\n          \"td\",\n          {\n            className: \"cell-icon text-primary\"\n          },\n          React.createElement(\"i\", {\n            className: \"ion-cube\"\n          }),\n          React.createElement(\n            \"b\",\n            null,\n            ' ',\n            totalCount\n          )\n        ),\n        React.createElement(\n          \"td\",\n          {\n            className: \"cell-icon text-success\"\n          },\n          React.createElement(\"i\", {\n            className: \"ion-checkmark-circled\"\n          }),\n          React.createElement(\n            \"b\",\n            null,\n            ' ',\n            successCount\n          )\n        ),\n        React.createElement(\n          \"td\",\n          {\n            className: \"cell-icon text-warning\"\n          },\n          React.createElement(\"i\", {\n            className: \"ion-alert-circled\"\n          }),\n          React.createElement(\n            \"b\",\n            null,\n            ' ',\n            failedCount\n          )\n        ),\n        React.createElement(\n          \"td\",\n          null,\n          React.createElement(\"i\", {\n            className: \"ion-calendar\"\n          }),\n          \" \",\n          moment(message.createdDate).format('DD MMM YYYY')\n        ),\n        React.createElement(\n          \"td\",\n          {\n            className: \"text-right\"\n          },\n          React.createElement(\n            ActionButtons,\n            null,\n            this.renderLinks(),\n            React.createElement(\n              Tip,\n              {\n                text: \"Delete\"\n              },\n              React.createElement(\n                Button,\n                {\n                  bsStyle: \"link\",\n                  onClick: remove\n                },\n                React.createElement(\"i\", {\n                  className: \"ion-close-circled\"\n                })\n              )\n            )\n          )\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return Row;\n}(React.Component);\n\nRow.propTypes = propTypes;\nmodule.export(\"default\", exports.default = Row);","map":{"version":3,"sources":["/imports/react-ui/engage/components/MessageListRow.js"],"names":["React","module","importSync","v","PropTypes","moment","Button","Label","Tip","ActionButtons","NameCard","MESSAGE_KINDS","propTypes","message","object","isRequired","edit","func","remove","setLive","setLiveManual","setPause","toggleBulk","Row","props","bind","renderLink","text","className","onClick","_id","renderLinks","msg","pause","live","kind","MANUAL","isDraft","isLive","e","target","checked","render","status","successCount","failedCount","deliveryReports","Object","values","totalCount","length","segment","forEach","report","title","name","fromUser","createdDate","format","Component","export","exports","default"],"mappings":"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","file":"/imports/react-ui/engage/components/MessageListRow.js.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Button, Label } from 'react-bootstrap';\nimport { Tip, ActionButtons, NameCard } from '/imports/react-ui/common';\nimport { MESSAGE_KINDS } from '/imports/api/engage/constants';\n\nconst propTypes = {\n  message: PropTypes.object.isRequired,\n  edit: PropTypes.func.isRequired,\n  remove: PropTypes.func.isRequired,\n  setLive: PropTypes.func.isRequired,\n  setLiveManual: PropTypes.func.isRequired,\n  setPause: PropTypes.func.isRequired,\n  toggleBulk: PropTypes.func.isRequired,\n};\n\nclass Row extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleBulk = this.toggleBulk.bind(this);\n  }\n\n  renderLink(text, className, onClick) {\n    return (\n      <Tip text={text} key={`${text}-${this.props.message._id}`}>\n        <Button bsStyle=\"link\" onClick={onClick}>\n          <i className={className} />\n        </Button>\n      </Tip>\n    );\n  }\n\n  renderLinks() {\n    const msg = this.props.message;\n    const edit = this.renderLink('Edit', 'ion-edit', this.props.edit);\n    const pause = this.renderLink('Pause', 'ion-pause', this.props.setPause);\n    const live = this.renderLink('Set live', 'ion-paper-airplane', this.props.setLive);\n\n    if (msg.kind !== MESSAGE_KINDS.MANUAL) {\n      if (msg.isDraft) {\n        return [edit, live];\n      }\n\n      if (msg.isLive) {\n        return [edit, pause];\n      }\n\n      return [edit, live];\n    }\n\n    if (msg.isDraft) {\n      return this.renderLink('Set live', 'ion-paper-airplane', this.setLiveManual);\n    }\n  }\n\n  toggleBulk(e) {\n    this.props.toggleBulk(this.props.message, e.target.checked);\n  }\n\n  render() {\n    let status = <Label bsStyle=\"info\">Sending</Label>;\n    let successCount = 0;\n    let failedCount = 0;\n\n    const { message, remove } = this.props;\n\n    const deliveryReports = Object.values(message.deliveryReports);\n    const totalCount = deliveryReports.length;\n    const segment = message.segment || {};\n\n    deliveryReports.forEach(report => {\n      if (report.status === 'sent') {\n        successCount++;\n      }\n\n      if (report.status === 'failed') {\n        failedCount++;\n      }\n    });\n\n    if (totalCount === successCount + failedCount) {\n      status = <Label bsStyle=\"success\">Sent</Label>;\n    }\n\n    return (\n      <tr key={message._id}>\n        <td className=\"less-space\">\n          <input type=\"checkbox\" onChange={this.toggleBulk} />\n        </td>\n        <td>\n          {message.title}\n        </td>\n        <td>\n          <i className=\"ion-pie-graph\" /> {segment.name}\n        </td>\n        <td className=\"text-normal\">\n          <NameCard user={message.fromUser} avatarSize={32} singleLine />\n        </td>\n        <td>\n          {status}\n        </td>\n        <td className=\"cell-icon text-primary\">\n          <i className=\"ion-cube\" />\n          <b>\n            {' '}{totalCount}\n          </b>\n        </td>\n        <td className=\"cell-icon text-success\">\n          <i className=\"ion-checkmark-circled\" />\n          <b>\n            {' '}{successCount}\n          </b>\n        </td>\n        <td className=\"cell-icon text-warning\">\n          <i className=\"ion-alert-circled\" />\n          <b>\n            {' '}{failedCount}\n          </b>\n        </td>\n        <td>\n          <i className=\"ion-calendar\" /> {moment(message.createdDate).format('DD MMM YYYY')}\n        </td>\n\n        <td className=\"text-right\">\n          <ActionButtons>\n            {this.renderLinks()}\n\n            <Tip text=\"Delete\">\n              <Button bsStyle=\"link\" onClick={remove}>\n                <i className=\"ion-close-circled\" />\n              </Button>\n            </Tip>\n          </ActionButtons>\n        </td>\n      </tr>\n    );\n  }\n}\n\nRow.propTypes = propTypes;\n\nexport default Row;\n"]},"hash":"8af68f694f9b0b112a6828cd4628ea2155c58b11"}
