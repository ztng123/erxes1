{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/accounts-base","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]},{"source":"/imports/api/brands/brands","imported":["Brands"],"specifiers":[{"kind":"named","imported":"Brands","local":"Brands"}]},{"source":"/imports/api/channels/channels","imported":["Channels"],"specifiers":[{"kind":"named","imported":"Channels","local":"Channels"}]},{"source":"/imports/api/integrations/integrations","imported":["Integrations"],"specifiers":[{"kind":"named","imported":"Integrations","local":"Integrations"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/startup/server/fixtures.js","filenameRelative":"/imports/startup/server/fixtures.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/startup/server/fixtures.js.map","sourceFileName":"/imports/startup/server/fixtures.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"fixtures"},"ignored":false,"code":"var Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Accounts = void 0;\nmodule.importSync(\"meteor/accounts-base\", {\n  Accounts: function (v) {\n    Accounts = v;\n  }\n}, 1);\nvar Brands = void 0;\nmodule.importSync(\"/imports/api/brands/brands\", {\n  Brands: function (v) {\n    Brands = v;\n  }\n}, 2);\nvar Channels = void 0;\nmodule.importSync(\"/imports/api/channels/channels\", {\n  Channels: function (v) {\n    Channels = v;\n  }\n}, 3);\nvar Integrations = void 0;\nmodule.importSync(\"/imports/api/integrations/integrations\", {\n  Integrations: function (v) {\n    Integrations = v;\n  }\n}, 4);\n// if the database is empty on server start, create some sample data.\nMeteor.startup(function () {\n  if (Meteor.users.find().count() !== 0) {\n    return;\n  }\n\n  var _Meteor$settings$init = Meteor.settings.initialData,\n      user = _Meteor$settings$init.user,\n      brand = _Meteor$settings$init.brand,\n      integration = _Meteor$settings$init.integration,\n      channel = _Meteor$settings$init.channel;\n  var userId = Accounts.createUser(user);\n  var brandId = Brands.insert(Object.assign({\n    userId: userId\n  }, brand));\n  var integrationId = Integrations.insert(Object.assign({\n    brandId: brandId\n  }, integration));\n  Channels.insert(Object.assign({\n    userId: userId,\n    memberIds: [userId],\n    integrationIds: [integrationId]\n  }, channel));\n});","map":{"version":3,"sources":["/imports/startup/server/fixtures.js"],"names":["Meteor","module","importSync","v","Accounts","Brands","Channels","Integrations","startup","users","find","count","settings","initialData","user","brand","integration","channel","userId","createUser","brandId","insert","Object","assign","integrationId","memberIds","integrationIds"],"mappings":"AAAA,IAAIA,eAAJ;AAAWC,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACF,UAAO,UAASG,CAAT,EAAW;AAACH,aAAOG,CAAP;AAAS;AAA7B,CAAlC,EAAiE,CAAjE;AAAoE,IAAIC,iBAAJ;AAAaH,OAAOC,UAAP,CAAkB,sBAAlB,EAAyC;AAACE,YAAS,UAASD,CAAT,EAAW;AAACC,eAASD,CAAT;AAAW;AAAjC,CAAzC,EAA4E,CAA5E;AAA+E,IAAIE,eAAJ;AAAWJ,OAAOC,UAAP,CAAkB,4BAAlB,EAA+C;AAACG,UAAO,UAASF,CAAT,EAAW;AAACE,aAAOF,CAAP;AAAS;AAA7B,CAA/C,EAA8E,CAA9E;AAAiF,IAAIG,iBAAJ;AAAaL,OAAOC,UAAP,CAAkB,gCAAlB,EAAmD;AAACI,YAAS,UAASH,CAAT,EAAW;AAACG,eAASH,CAAT;AAAW;AAAjC,CAAnD,EAAsF,CAAtF;AAAyF,IAAII,qBAAJ;AAAiBN,OAAOC,UAAP,CAAkB,wCAAlB,EAA2D;AAACK,gBAAa,UAASJ,CAAT,EAAW;AAACI,mBAAaJ,CAAb;AAAe;AAAzC,CAA3D,EAAsG,CAAtG;AAO9X;AACAH,OAAOQ,OAAP,CAAe,YAAM;AACnB,MAAIR,OAAOS,KAAP,CAAaC,IAAb,GAAoBC,KAApB,OAAgC,CAApC,EAAuC;AACrC;AACD;;AAHkB,8BAK2BX,OAAOY,QAAP,CAAgBC,WAL3C;AAAA,MAKXC,IALW,yBAKXA,IALW;AAAA,MAKLC,KALK,yBAKLA,KALK;AAAA,MAKEC,WALF,yBAKEA,WALF;AAAA,MAKeC,OALf,yBAKeA,OALf;AAOnB,MAAMC,SAASd,SAASe,UAAT,CAAoBL,IAApB,CAAf;AACA,MAAMM,UAAUf,OAAOgB,MAAP,CAAcC,OAAOC,MAAP,CAAc;AAAEL;AAAF,GAAd,EAA0BH,KAA1B,CAAd,CAAhB;AACA,MAAMS,gBAAgBjB,aAAac,MAAb,CAAoBC,OAAOC,MAAP,CAAc;AAAEH;AAAF,GAAd,EAA2BJ,WAA3B,CAApB,CAAtB;AACAV,WAASe,MAAT,CACEC,OAAOC,MAAP,CACE;AACEL,kBADF;AAEEO,eAAW,CAACP,MAAD,CAFb;AAGEQ,oBAAgB,CAACF,aAAD;AAHlB,GADF,EAMEP,OANF,CADF;AAUD,CApBD","file":"/imports/startup/server/fixtures.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport { Brands } from '/imports/api/brands/brands';\nimport { Channels } from '/imports/api/channels/channels';\nimport { Integrations } from '/imports/api/integrations/integrations';\n\n// if the database is empty on server start, create some sample data.\nMeteor.startup(() => {\n  if (Meteor.users.find().count() !== 0) {\n    return;\n  }\n\n  const { user, brand, integration, channel } = Meteor.settings.initialData;\n\n  const userId = Accounts.createUser(user);\n  const brandId = Brands.insert(Object.assign({ userId }, brand));\n  const integrationId = Integrations.insert(Object.assign({ brandId }, integration));\n  Channels.insert(\n    Object.assign(\n      {\n        userId,\n        memberIds: [userId],\n        integrationIds: [integrationId],\n      },\n      channel,\n    ),\n  );\n});\n"]},"hash":"14e49defbf66c5cdae379fc0fb1a3b46b6dd6bef"}
