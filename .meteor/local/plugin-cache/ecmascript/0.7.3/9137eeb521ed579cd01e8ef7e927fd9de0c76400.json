{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/mdg:validation-error/validation-error.js","filenameRelative":"/packages/mdg:validation-error/validation-error.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/mdg:validation-error/validation-error.js.map","sourceFileName":"/packages/mdg:validation-error/validation-error.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"validation-error"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// The \"details\" property of the ValidationError must be an array of objects\n// containing at least two properties. The \"name\" and \"type\" properties are\n// required.\nvar errorsPattern = [Match.ObjectIncluding({\n  name: String,\n  type: String\n})];\n\nValidationError = function (_Meteor$Error) {\n  (0, _inherits3.default)(_class, _Meteor$Error);\n\n  function _class(errors) {\n    var _this, _ret;\n\n    var message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ValidationError.DEFAULT_MESSAGE;\n    (0, _classCallCheck3.default)(this, _class);\n    check(errors, errorsPattern);\n    check(message, String);\n    return _ret = (_this = (0, _possibleConstructorReturn3.default)(this, _Meteor$Error.call(this, ValidationError.ERROR_CODE, message, errors)), _this), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  } // Static method checking if a given Meteor.Error is an instance of\n  // ValidationError.\n\n\n  _class.is = function () {\n    function is(err) {\n      return err instanceof Meteor.Error && err.error === ValidationError.ERROR_CODE;\n    }\n\n    return is;\n  }();\n\n  return _class;\n}(Meteor.Error); // Universal validation error code to be use in applications and packages.\n\n\nValidationError.ERROR_CODE = 'validation-error'; // Default validation error message that can be changed globally.\n\nValidationError.DEFAULT_MESSAGE = 'Validation failed';","map":{"version":3,"sources":["/packages/mdg:validation-error/validation-error.js"],"names":["errorsPattern","Match","ObjectIncluding","name","String","type","ValidationError","errors","message","DEFAULT_MESSAGE","check","ERROR_CODE","is","err","Meteor","Error","error"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA,IAAMA,gBAAgB,CAACC,MAAMC,eAAN,CAAsB;AAC3CC,QAAMC,MADqC;AAE3CC,QAAMD;AAFqC,CAAtB,CAAD,CAAtB;;AAKAE;AAAA;;AACE,kBAAYC,MAAZ,EAA+D;AAAA;;AAAA,QAA3CC,OAA2C,uEAAjCF,gBAAgBG,eAAiB;AAAA;AAC7DC,UAAMH,MAAN,EAAcP,aAAd;AACAU,UAAMF,OAAN,EAAeJ,MAAf;AAEA,0EAAO,yBAAME,gBAAgBK,UAAtB,EAAkCH,OAAlC,EAA2CD,MAA3C,CAAP;AACD,GANH,CAQE;AACA;;;AATF,SAUSK,EAVT;AAAA,gBAUYC,GAVZ,EAUiB;AACb,aAAOA,eAAeC,OAAOC,KAAtB,IAA+BF,IAAIG,KAAJ,KAAcV,gBAAgBK,UAApE;AACD;;AAZH;AAAA;;AAAA;AAAA,EAAgCG,OAAOC,KAAvC,E,CAeA;;;AACAT,gBAAgBK,UAAhB,GAA6B,kBAA7B,C,CACA;;AACAL,gBAAgBG,eAAhB,GAAkC,mBAAlC","file":"/packages/mdg:validation-error/validation-error.js.map","sourcesContent":["// The \"details\" property of the ValidationError must be an array of objects\n// containing at least two properties. The \"name\" and \"type\" properties are\n// required.\nconst errorsPattern = [Match.ObjectIncluding({\n  name: String,\n  type: String\n})];\n\nValidationError = class extends Meteor.Error {\n  constructor(errors, message = ValidationError.DEFAULT_MESSAGE) {\n    check(errors, errorsPattern);\n    check(message, String);\n\n    return super(ValidationError.ERROR_CODE, message, errors);\n  }\n\n  // Static method checking if a given Meteor.Error is an instance of\n  // ValidationError.\n  static is(err) {\n    return err instanceof Meteor.Error && err.error === ValidationError.ERROR_CODE;\n  };\n};\n\n// Universal validation error code to be use in applications and packages.\nValidationError.ERROR_CODE = 'validation-error';\n// Default validation error message that can be changed globally.\nValidationError.DEFAULT_MESSAGE = 'Validation failed';\n"]},"hash":"9137eeb521ed579cd01e8ef7e927fd9de0c76400"}
