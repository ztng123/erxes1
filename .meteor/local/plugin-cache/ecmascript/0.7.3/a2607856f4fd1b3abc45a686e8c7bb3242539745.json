{"metadata":{"usedHelpers":["extends","taggedTemplateLiteralLoose","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"react","imported":["default","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"react-apollo","imported":["compose","gql","graphql"],"specifiers":[{"kind":"named","imported":"compose","local":"compose"},{"kind":"named","imported":"gql","local":"gql"},{"kind":"named","imported":"graphql","local":"graphql"}]},{"source":"/imports/api/customers/customers","imported":["Customers"],"specifiers":[{"kind":"named","imported":"Customers","local":"Customers"}]},{"source":"../components","imported":["SegmentsForm"],"specifiers":[{"kind":"named","imported":"SegmentsForm","local":"SegmentsForm"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/segments/containers/SegmentsForm.js","filenameRelative":"/imports/react-ui/segments/containers/SegmentsForm.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/segments/containers/SegmentsForm.js.map","sourceFileName":"/imports/react-ui/segments/containers/SegmentsForm.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"SegmentsForm"},"ignored":false,"code":"var _taggedTemplateLiteralLoose2 = require(\"babel-runtime/helpers/taggedTemplateLiteralLoose\");\n\nvar _taggedTemplateLiteralLoose3 = _interopRequireDefault(_taggedTemplateLiteralLoose2);\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _templateObject = (0, _taggedTemplateLiteralLoose3.default)([\"\\n      query segmentDetail($_id: String) {\\n        segmentDetail(_id: $_id) {\\n          \", \"\\n          getSubSegments {\\n            \", \"\\n          }\\n        }\\n      }\\n    \"], [\"\\n      query segmentDetail($_id: String) {\\n        segmentDetail(_id: $_id) {\\n          \", \"\\n          getSubSegments {\\n            \", \"\\n          }\\n        }\\n      }\\n    \"]),\n    _templateObject2 = (0, _taggedTemplateLiteralLoose3.default)([\"\\n      query headSegments {\\n        headSegments {\\n          \", \"\\n          getSubSegments {\\n            \", \"\\n          }\\n        }\\n      }\\n    \"], [\"\\n      query headSegments {\\n        headSegments {\\n          \", \"\\n          getSubSegments {\\n            \", \"\\n          }\\n        }\\n      }\\n    \"]);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar React = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar compose = void 0,\n    gql = void 0,\n    graphql = void 0;\nmodule.importSync(\"react-apollo\", {\n  compose: function (v) {\n    compose = v;\n  },\n  gql: function (v) {\n    gql = v;\n  },\n  graphql: function (v) {\n    graphql = v;\n  }\n}, 2);\nvar Customers = void 0;\nmodule.importSync(\"/imports/api/customers/customers\", {\n  Customers: function (v) {\n    Customers = v;\n  }\n}, 3);\nvar SegmentsForm = void 0;\nmodule.importSync(\"../components\", {\n  SegmentsForm: function (v) {\n    SegmentsForm = v;\n  }\n}, 4);\n\nvar SegmentsFormContainer = function (props) {\n  var segmentDetailQuery = props.segmentDetailQuery,\n      headSegmentsQuery = props.headSegmentsQuery;\n\n  if (segmentDetailQuery.loading || headSegmentsQuery.loading) {\n    return null;\n  }\n\n  var fields = Customers.getPublicFields().map(function (_ref) {\n    var key = _ref.key,\n        label = _ref.label;\n    return {\n      _id: key,\n      title: label,\n      selectedBy: 'none'\n    };\n  });\n  var segment = segmentDetailQuery.segmentDetail;\n  var headSegments = headSegmentsQuery.headSegments;\n  var updatedProps = (0, _extends3.default)({}, props, {\n    fields: fields,\n    segment: segment,\n    headSegments: headSegments,\n    create: function (_ref2, callback) {\n      var doc = _ref2.doc;\n      Meteor.call('customers.createSegment', doc, callback);\n    },\n    edit: function (_ref3, callback) {\n      var id = _ref3.id,\n          doc = _ref3.doc;\n      Meteor.call('customers.editSegment', {\n        id: id,\n        doc: doc\n      }, callback);\n    }\n  });\n  return React.createElement(SegmentsForm, updatedProps);\n};\n\nSegmentsFormContainer.propTypes = {\n  segmentDetailQuery: PropTypes.object,\n  headSegmentsQuery: PropTypes.object\n};\nvar segmentFields = \"\\n  _id\\n  name\\n  description\\n  subOf\\n  color\\n  connector\\n  conditions\\n\";\nmodule.export(\"default\", exports.default = compose(graphql(gql(_templateObject, segmentFields, segmentFields), {\n  name: 'segmentDetailQuery',\n  options: function (_ref4) {\n    var id = _ref4.id;\n    return {\n      variables: {\n        _id: id\n      }\n    };\n  }\n}), graphql(gql(_templateObject2, segmentFields, segmentFields), {\n  name: 'headSegmentsQuery'\n}))(SegmentsFormContainer));","map":{"version":3,"sources":["/imports/react-ui/segments/containers/SegmentsForm.js"],"names":["Meteor","module","importSync","v","React","PropTypes","compose","gql","graphql","Customers","SegmentsForm","SegmentsFormContainer","segmentDetailQuery","props","headSegmentsQuery","loading","fields","getPublicFields","map","key","label","_id","title","selectedBy","segment","segmentDetail","headSegments","updatedProps","create","callback","doc","call","edit","id","propTypes","object","segmentFields","export","exports","default","name","options","variables"],"mappings":"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","file":"/imports/react-ui/segments/containers/SegmentsForm.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport React, { PropTypes } from 'react';\nimport { compose, gql, graphql } from 'react-apollo';\nimport { Customers } from '/imports/api/customers/customers';\nimport { SegmentsForm } from '../components';\n\nconst SegmentsFormContainer = props => {\n  const { segmentDetailQuery, headSegmentsQuery } = props;\n\n  if (segmentDetailQuery.loading || headSegmentsQuery.loading) {\n    return null;\n  }\n\n  const fields = Customers.getPublicFields().map(({ key, label }) => ({\n    _id: key,\n    title: label,\n    selectedBy: 'none',\n  }));\n\n  const segment = segmentDetailQuery.segmentDetail;\n  const headSegments = headSegmentsQuery.headSegments;\n\n  const updatedProps = {\n    ...props,\n    fields,\n    segment,\n    headSegments,\n\n    create({ doc }, callback) {\n      Meteor.call('customers.createSegment', doc, callback);\n    },\n\n    edit({ id, doc }, callback) {\n      Meteor.call('customers.editSegment', { id, doc }, callback);\n    },\n  };\n\n  return <SegmentsForm {...updatedProps} />;\n};\n\nSegmentsFormContainer.propTypes = {\n  segmentDetailQuery: PropTypes.object,\n  headSegmentsQuery: PropTypes.object,\n};\n\nconst segmentFields = `\n  _id\n  name\n  description\n  subOf\n  color\n  connector\n  conditions\n`;\n\nexport default compose(\n  graphql(\n    gql`\n      query segmentDetail($_id: String) {\n        segmentDetail(_id: $_id) {\n          ${segmentFields}\n          getSubSegments {\n            ${segmentFields}\n          }\n        }\n      }\n    `,\n    {\n      name: 'segmentDetailQuery',\n      options: ({ id }) => ({\n        variables: {\n          _id: id,\n        },\n      }),\n    },\n  ),\n  graphql(\n    gql`\n      query headSegments {\n        headSegments {\n          ${segmentFields}\n          getSubSegments {\n            ${segmentFields}\n          }\n        }\n      }\n    `,\n    {\n      name: 'headSegmentsQuery',\n    },\n  ),\n)(SegmentsFormContainer);\n"]},"hash":"a2607856f4fd1b3abc45a686e8c7bb3242539745"}
