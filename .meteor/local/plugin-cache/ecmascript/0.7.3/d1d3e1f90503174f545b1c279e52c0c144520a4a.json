{"metadata":{"usedHelpers":["extends","taggedTemplateLiteralLoose","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-apollo","imported":["compose","gql","graphql"],"specifiers":[{"kind":"named","imported":"compose","local":"compose"},{"kind":"named","imported":"gql","local":"gql"},{"kind":"named","imported":"graphql","local":"graphql"}]},{"source":"/imports/api/integrations/constants","imported":["FORM_LOAD_TYPES","FORM_SUCCESS_ACTIONS"],"specifiers":[{"kind":"named","imported":"FORM_LOAD_TYPES","local":"FORM_LOAD_TYPES"},{"kind":"named","imported":"FORM_SUCCESS_ACTIONS","local":"FORM_SUCCESS_ACTIONS"}]},{"source":"../components","imported":["Form"],"specifiers":[{"kind":"named","imported":"Form","local":"Form"}]},{"source":"/imports/react-ui/common","imported":["Spinner"],"specifiers":[{"kind":"named","imported":"Spinner","local":"Spinner"}]},{"source":"./utils","imported":["saveCallback"],"specifiers":[{"kind":"named","imported":"saveCallback","local":"saveCallback"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/settings/integrations/containers/Form.js","filenameRelative":"/imports/react-ui/settings/integrations/containers/Form.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/settings/integrations/containers/Form.js.map","sourceFileName":"/imports/react-ui/settings/integrations/containers/Form.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Form"},"ignored":false,"code":"var _taggedTemplateLiteralLoose2 = require(\"babel-runtime/helpers/taggedTemplateLiteralLoose\");\n\nvar _taggedTemplateLiteralLoose3 = _interopRequireDefault(_taggedTemplateLiteralLoose2);\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _templateObject = (0, _taggedTemplateLiteralLoose3.default)([\"\\n      query brands {\\n        brands {\\n          _id\\n          name\\n          code\\n        }\\n      }\\n    \"], [\"\\n      query brands {\\n        brands {\\n          _id\\n          name\\n          code\\n        }\\n      }\\n    \"]),\n    _templateObject2 = (0, _taggedTemplateLiteralLoose3.default)([\"\\n      query forms {\\n        forms {\\n          _id\\n          title\\n          code\\n        }\\n      }\\n    \"], [\"\\n      query forms {\\n        forms {\\n          _id\\n          title\\n          code\\n        }\\n      }\\n    \"]);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar compose = void 0,\n    gql = void 0,\n    graphql = void 0;\nmodule.importSync(\"react-apollo\", {\n  compose: function (v) {\n    compose = v;\n  },\n  gql: function (v) {\n    gql = v;\n  },\n  graphql: function (v) {\n    graphql = v;\n  }\n}, 2);\nvar FORM_LOAD_TYPES = void 0,\n    FORM_SUCCESS_ACTIONS = void 0;\nmodule.importSync(\"/imports/api/integrations/constants\", {\n  FORM_LOAD_TYPES: function (v) {\n    FORM_LOAD_TYPES = v;\n  },\n  FORM_SUCCESS_ACTIONS: function (v) {\n    FORM_SUCCESS_ACTIONS = v;\n  }\n}, 3);\nvar Form = void 0;\nmodule.importSync(\"../components\", {\n  Form: function (v) {\n    Form = v;\n  }\n}, 4);\nvar Spinner = void 0;\nmodule.importSync(\"/imports/react-ui/common\", {\n  Spinner: function (v) {\n    Spinner = v;\n  }\n}, 5);\nvar saveCallback = void 0;\nmodule.importSync(\"./utils\", {\n  saveCallback: function (v) {\n    saveCallback = v;\n  }\n}, 6);\n\nvar FormContainer = function (props) {\n  var brandsQuery = props.brandsQuery,\n      formsQuery = props.formsQuery,\n      integration = props.integration,\n      refetch = props.refetch;\n\n  if (brandsQuery.loading || formsQuery.loading) {\n    return React.createElement(Spinner, null);\n  }\n\n  var brands = brandsQuery.brands;\n  var forms = formsQuery.forms;\n\n  var save = function (doc) {\n    return saveCallback(doc, 'addForm', 'editForm', integration, refetch);\n  };\n\n  var loadTypes = Object.values(FORM_LOAD_TYPES);\n  loadTypes.splice(-1, 1);\n  var successActions = Object.values(FORM_SUCCESS_ACTIONS);\n  successActions.splice(-1, 1);\n  var updatedProps = (0, _extends3.default)({}, props, {\n    brands: brands,\n    forms: forms,\n    save: save,\n    loadTypes: loadTypes,\n    successActions: successActions\n  });\n  return React.createElement(Form, updatedProps);\n};\n\nFormContainer.propTypes = {\n  integration: PropTypes.object,\n  brandsQuery: PropTypes.object,\n  formsQuery: PropTypes.object,\n  refetch: PropTypes.func\n};\nmodule.export(\"default\", exports.default = compose(graphql(gql(_templateObject), {\n  name: 'brandsQuery',\n  options: function () {\n    return {\n      fetchPolicy: 'network-only'\n    };\n  }\n}), graphql(gql(_templateObject2), {\n  name: 'formsQuery',\n  options: function () {\n    return {\n      fetchPolicy: 'network-only'\n    };\n  }\n}))(FormContainer));","map":{"version":3,"sources":["/imports/react-ui/settings/integrations/containers/Form.js"],"names":["React","module","importSync","v","PropTypes","compose","gql","graphql","FORM_LOAD_TYPES","FORM_SUCCESS_ACTIONS","Form","Spinner","saveCallback","FormContainer","brandsQuery","props","formsQuery","integration","refetch","loading","brands","forms","save","doc","loadTypes","Object","values","splice","successActions","updatedProps","propTypes","object","func","export","exports","default","name","options","fetchPolicy"],"mappings":"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","file":"/imports/react-ui/settings/integrations/containers/Form.js.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose, gql, graphql } from 'react-apollo';\nimport { FORM_LOAD_TYPES, FORM_SUCCESS_ACTIONS } from '/imports/api/integrations/constants';\nimport { Form } from '../components';\nimport { Spinner } from '/imports/react-ui/common';\nimport { saveCallback } from './utils';\n\nconst FormContainer = props => {\n  const { brandsQuery, formsQuery, integration, refetch } = props;\n\n  if (brandsQuery.loading || formsQuery.loading) {\n    return <Spinner />;\n  }\n\n  const brands = brandsQuery.brands;\n  const forms = formsQuery.forms;\n\n  const save = doc => saveCallback(doc, 'addForm', 'editForm', integration, refetch);\n\n  const loadTypes = Object.values(FORM_LOAD_TYPES);\n  loadTypes.splice(-1, 1);\n\n  const successActions = Object.values(FORM_SUCCESS_ACTIONS);\n  successActions.splice(-1, 1);\n\n  const updatedProps = {\n    ...props,\n    brands,\n    forms,\n    save,\n    loadTypes,\n    successActions,\n  };\n\n  return <Form {...updatedProps} />;\n};\n\nFormContainer.propTypes = {\n  integration: PropTypes.object,\n  brandsQuery: PropTypes.object,\n  formsQuery: PropTypes.object,\n  refetch: PropTypes.func,\n};\n\nexport default compose(\n  graphql(\n    gql`\n      query brands {\n        brands {\n          _id\n          name\n          code\n        }\n      }\n    `,\n    {\n      name: 'brandsQuery',\n      options: () => ({\n        fetchPolicy: 'network-only',\n      }),\n    },\n  ),\n  graphql(\n    gql`\n      query forms {\n        forms {\n          _id\n          title\n          code\n        }\n      }\n    `,\n    {\n      name: 'formsQuery',\n      options: () => ({\n        fetchPolicy: 'network-only',\n      }),\n    },\n  ),\n)(FormContainer);\n"]},"hash":"d1d3e1f90503174f545b1c279e52c0c144520a4a"}
