{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","PropTypes","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"PropTypes","local":"PropTypes"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"moment","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"moment"}]},{"source":"meteor/kadira:flow-router","imported":["FlowRouter"],"specifiers":[{"kind":"named","imported":"FlowRouter","local":"FlowRouter"}]},{"source":"strip","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"strip"}]},{"source":"/imports/react-ui/common","imported":["NameCard","Tags"],"specifiers":[{"kind":"named","imported":"NameCard","local":"NameCard"},{"kind":"named","imported":"Tags","local":"Tags"}]},{"source":"./StarrerContainer","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Starrer"}]},{"source":"./ParticipateContainer","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Participate"}]},{"source":"./Assignees","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Assignees"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/common/conversationsList/Row.js","filenameRelative":"/imports/react-ui/common/conversationsList/Row.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/common/conversationsList/Row.js.map","sourceFileName":"/imports/react-ui/common/conversationsList/Row.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Row"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    PropTypes = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar moment = void 0;\nmodule.importSync(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 1);\nvar FlowRouter = void 0;\nmodule.importSync(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 2);\nvar strip = void 0;\nmodule.importSync(\"strip\", {\n  \"default\": function (v) {\n    strip = v;\n  }\n}, 3);\nvar NameCard = void 0,\n    Tags = void 0;\nmodule.importSync(\"/imports/react-ui/common\", {\n  NameCard: function (v) {\n    NameCard = v;\n  },\n  Tags: function (v) {\n    Tags = v;\n  }\n}, 4);\nvar Starrer = void 0;\nmodule.importSync(\"./StarrerContainer\", {\n  \"default\": function (v) {\n    Starrer = v;\n  }\n}, 5);\nvar Participate = void 0;\nmodule.importSync(\"./ParticipateContainer\", {\n  \"default\": function (v) {\n    Participate = v;\n  }\n}, 6);\nvar Assignees = void 0;\nmodule.importSync(\"./Assignees\", {\n  \"default\": function (v) {\n    Assignees = v;\n  }\n}, 7);\nvar propTypes = {\n  conversation: PropTypes.object.isRequired,\n  toggleBulk: PropTypes.func,\n  starred: PropTypes.bool.isRequired,\n  channelId: PropTypes.string,\n  isRead: PropTypes.bool,\n  isParticipated: PropTypes.bool\n};\n\nvar Row = function (_Component) {\n  (0, _inherits3.default)(Row, _Component);\n\n  function Row(props) {\n    (0, _classCallCheck3.default)(this, Row);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.goDetail = _this.goDetail.bind(_this);\n    _this.toggleBulk = _this.toggleBulk.bind(_this);\n    _this.renderCheckbox = _this.renderCheckbox.bind(_this);\n    return _this;\n  }\n\n  Row.prototype.toggleBulk = function () {\n    function toggleBulk(e) {\n      var _props = this.props,\n          toggleBulk = _props.toggleBulk,\n          conversation = _props.conversation;\n      toggleBulk(conversation, e.target.checked);\n    }\n\n    return toggleBulk;\n  }();\n\n  Row.prototype.goDetail = function () {\n    function goDetail() {\n      var _props2 = this.props,\n          conversation = _props2.conversation,\n          channelId = _props2.channelId;\n      FlowRouter.go('inbox/details', {\n        id: conversation._id\n      }, {\n        channelId: channelId\n      });\n    }\n\n    return goDetail;\n  }();\n\n  Row.prototype.renderCheckbox = function () {\n    function renderCheckbox() {\n      if (!this.props.toggleBulk) {\n        return null;\n      }\n\n      return React.createElement(\n        \"div\",\n        {\n          className: \"column\"\n        },\n        React.createElement(\"input\", {\n          type: \"checkbox\",\n          onChange: this.toggleBulk\n        })\n      );\n    }\n\n    return renderCheckbox;\n  }();\n\n  Row.prototype.render = function () {\n    function render() {\n      var _props3 = this.props,\n          conversation = _props3.conversation,\n          starred = _props3.starred,\n          isRead = _props3.isRead,\n          isParticipated = _props3.isParticipated;\n      var createdAt = conversation.createdAt,\n          content = conversation.content,\n          messageCount = conversation.messageCount,\n          participatorCount = conversation.participatorCount;\n      var customer = conversation.customer || {};\n      var integration = conversation.integration || {};\n      var brand = integration.brand || {};\n      var brandName = brand.name;\n      var isReadClass = !isRead ? 'unread' : null;\n      return React.createElement(\n        \"li\",\n        {\n          className: isReadClass\n        },\n        this.renderCheckbox(),\n        React.createElement(\n          \"div\",\n          {\n            className: \"column\"\n          },\n          React.createElement(NameCard.Avatar, {\n            size: 50,\n            customer: customer\n          })\n        ),\n        React.createElement(\n          \"div\",\n          {\n            className: \"body\"\n          },\n          React.createElement(\n            \"header\",\n            null,\n            React.createElement(\n              \"span\",\n              {\n                className: \"customer-name\"\n              },\n              customer && customer._id && customer.name\n            ),\n            React.createElement(\n              \"span\",\n              null,\n              \" opened about \"\n            ),\n            React.createElement(\n              \"time\",\n              null,\n              moment(createdAt).fromNow()\n            ),\n            React.createElement(Tags, {\n              tags: conversation.tags,\n              size: \"small\"\n            })\n          ),\n          React.createElement(\n            \"div\",\n            {\n              className: \"content\",\n              onClick: this.goDetail\n            },\n            strip(content)\n          ),\n          React.createElement(\n            \"footer\",\n            null,\n            React.createElement(\n              \"div\",\n              {\n                className: \"source\"\n              },\n              React.createElement(\"i\", {\n                className: \"ion-chatbox\"\n              }),\n              React.createElement(\n                \"div\",\n                {\n                  className: \"name\"\n                },\n                \"To \",\n                brandName,\n                \" via \",\n                integration && integration.kind\n              )\n            ),\n            React.createElement(Assignees, {\n              conversation: conversation\n            }),\n            React.createElement(\n              \"div\",\n              {\n                className: \"info\"\n              },\n              React.createElement(\n                \"span\",\n                null,\n                React.createElement(\"i\", {\n                  className: \"ion-reply\"\n                }),\n                \" \",\n                messageCount\n              ),\n              React.createElement(\n                \"span\",\n                null,\n                React.createElement(\"i\", {\n                  className: \"ion-person\"\n                }),\n                \" \",\n                participatorCount\n              )\n            )\n          )\n        ),\n        React.createElement(\n          \"div\",\n          {\n            className: \"column\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"conversation-togglers\"\n            },\n            React.createElement(Starrer, {\n              conversation: conversation,\n              starred: starred\n            }),\n            React.createElement(Participate, {\n              conversation: conversation,\n              participated: isParticipated\n            })\n          )\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return Row;\n}(Component);\n\nRow.propTypes = propTypes;\nmodule.export(\"default\", exports.default = Row);","map":{"version":3,"sources":["/imports/react-ui/common/conversationsList/Row.js"],"names":["React","PropTypes","Component","module","importSync","v","moment","FlowRouter","strip","NameCard","Tags","Starrer","Participate","Assignees","propTypes","conversation","object","isRequired","toggleBulk","func","starred","bool","channelId","string","isRead","isParticipated","Row","props","goDetail","bind","renderCheckbox","e","target","checked","go","id","_id","render","createdAt","content","messageCount","participatorCount","customer","integration","brand","brandName","name","isReadClass","fromNow","tags","kind","export","exports","default"],"mappings":"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","file":"/imports/react-ui/common/conversationsList/Row.js.map","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport moment from 'moment';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport strip from 'strip';\nimport { NameCard, Tags } from '/imports/react-ui/common';\nimport Starrer from './StarrerContainer';\nimport Participate from './ParticipateContainer';\nimport Assignees from './Assignees';\n\nconst propTypes = {\n  conversation: PropTypes.object.isRequired,\n  toggleBulk: PropTypes.func,\n  starred: PropTypes.bool.isRequired,\n  channelId: PropTypes.string,\n  isRead: PropTypes.bool,\n  isParticipated: PropTypes.bool,\n};\n\nclass Row extends Component {\n  constructor(props) {\n    super(props);\n\n    this.goDetail = this.goDetail.bind(this);\n    this.toggleBulk = this.toggleBulk.bind(this);\n    this.renderCheckbox = this.renderCheckbox.bind(this);\n  }\n\n  toggleBulk(e) {\n    const { toggleBulk, conversation } = this.props;\n    toggleBulk(conversation, e.target.checked);\n  }\n\n  goDetail() {\n    const { conversation, channelId } = this.props;\n\n    FlowRouter.go('inbox/details', { id: conversation._id }, { channelId });\n  }\n\n  renderCheckbox() {\n    if (!this.props.toggleBulk) {\n      return null;\n    }\n\n    return (\n      <div className=\"column\">\n        <input type=\"checkbox\" onChange={this.toggleBulk} />\n      </div>\n    );\n  }\n\n  render() {\n    const { conversation, starred, isRead, isParticipated } = this.props;\n    const { createdAt, content, messageCount, participatorCount } = conversation;\n    const customer = conversation.customer || {};\n    const integration = conversation.integration || {};\n    const brand = integration.brand || {};\n    const brandName = brand.name;\n    const isReadClass = !isRead ? 'unread' : null;\n\n    return (\n      <li className={isReadClass}>\n        {this.renderCheckbox()}\n\n        <div className=\"column\">\n          <NameCard.Avatar size={50} customer={customer} />\n        </div>\n\n        <div className=\"body\">\n          <header>\n            <span className=\"customer-name\">\n              {customer && customer._id && customer.name}\n            </span>\n            <span> opened about </span>\n            <time>\n              {moment(createdAt).fromNow()}\n            </time>\n            <Tags tags={conversation.tags} size=\"small\" />\n          </header>\n\n          <div className=\"content\" onClick={this.goDetail}>\n            {strip(content)}\n          </div>\n\n          <footer>\n            <div className=\"source\">\n              <i className=\"ion-chatbox\" />\n              <div className=\"name\">\n                To {brandName} via {integration && integration.kind}\n              </div>\n            </div>\n\n            <Assignees conversation={conversation} />\n\n            <div className=\"info\">\n              <span>\n                <i className=\"ion-reply\" /> {messageCount}\n              </span>\n              <span>\n                <i className=\"ion-person\" /> {participatorCount}\n              </span>\n            </div>\n          </footer>\n        </div>\n\n        <div className=\"column\">\n          <div className=\"conversation-togglers\">\n            <Starrer conversation={conversation} starred={starred} />\n            <Participate conversation={conversation} participated={isParticipated} />\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n\nRow.propTypes = propTypes;\n\nexport default Row;\n"]},"hash":"8758dcba41da13ae9e325f15988e56e4aaf4dbca"}
