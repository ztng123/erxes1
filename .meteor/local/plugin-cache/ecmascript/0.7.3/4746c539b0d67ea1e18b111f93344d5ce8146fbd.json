{"metadata":{"usedHelpers":["toConsumableArray","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-bootstrap","imported":["Button","Table"],"specifiers":[{"kind":"named","imported":"Button","local":"Button"},{"kind":"named","imported":"Table","local":"Table"}]},{"source":"meteor/kadira:flow-router","imported":["FlowRouter"],"specifiers":[{"kind":"named","imported":"FlowRouter","local":"FlowRouter"}]},{"source":"meteor/erxes-notifier","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Alert"}]},{"source":"/imports/react-ui/layout/components","imported":["Wrapper"],"specifiers":[{"kind":"named","imported":"Wrapper","local":"Wrapper"}]},{"source":"/imports/react-ui/common","imported":["Tip","ActionButtons"],"specifiers":[{"kind":"named","imported":"Tip","local":"Tip"},{"kind":"named","imported":"ActionButtons","local":"ActionButtons"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/segments/components/SegmentsList.js","filenameRelative":"/imports/react-ui/segments/components/SegmentsList.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/segments/components/SegmentsList.js.map","sourceFileName":"/imports/react-ui/segments/components/SegmentsList.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"SegmentsList"},"ignored":false,"code":"var _toConsumableArray2 = require(\"babel-runtime/helpers/toConsumableArray\");\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar Button = void 0,\n    Table = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  Button: function (v) {\n    Button = v;\n  },\n  Table: function (v) {\n    Table = v;\n  }\n}, 2);\nvar FlowRouter = void 0;\nmodule.importSync(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 3);\nvar Alert = void 0;\nmodule.importSync(\"meteor/erxes-notifier\", {\n  \"default\": function (v) {\n    Alert = v;\n  }\n}, 4);\nvar Wrapper = void 0;\nmodule.importSync(\"/imports/react-ui/layout/components\", {\n  Wrapper: function (v) {\n    Wrapper = v;\n  }\n}, 5);\nvar Tip = void 0,\n    ActionButtons = void 0;\nmodule.importSync(\"/imports/react-ui/common\", {\n  Tip: function (v) {\n    Tip = v;\n  },\n  ActionButtons: function (v) {\n    ActionButtons = v;\n  }\n}, 6);\nvar propTypes = {\n  segments: PropTypes.array.isRequired,\n  removeSegment: PropTypes.func.isRequired\n};\n\nfunction SegmentsList(_ref) {\n  var segments = _ref.segments,\n      removeSegment = _ref.removeSegment;\n\n  var remove = function (id) {\n    if (confirm('Are you sure?')) {\n      removeSegment({\n        id: id\n      }, function (error) {\n        return error ? Alert.error(error.reason) : Alert.success('Successfully deleted.');\n      });\n    }\n  };\n\n  var parentSegments = [];\n  segments.filter(function (segment) {\n    return !segment.subOf;\n  }).map(function (segment) {\n    parentSegments.push.apply(parentSegments, [segment].concat((0, _toConsumableArray3.default)(segment.getSubSegments)));\n  });\n  var content = React.createElement(\n    Table,\n    null,\n    React.createElement(\n      \"thead\",\n      null,\n      React.createElement(\n        \"tr\",\n        null,\n        React.createElement(\n          \"th\",\n          null,\n          \"Name\"\n        ),\n        React.createElement(\n          \"th\",\n          null,\n          \"Description\"\n        ),\n        React.createElement(\n          \"th\",\n          null,\n          \"Color\"\n        ),\n        React.createElement(\"th\", null)\n      )\n    ),\n    React.createElement(\n      \"tbody\",\n      null,\n      parentSegments.map(function (segment) {\n        return React.createElement(\n          \"tr\",\n          {\n            key: segment._id\n          },\n          React.createElement(\n            \"td\",\n            null,\n            segment.subOf ? \"\\u2014\\u2014\" : null,\n            \" \",\n            segment.name\n          ),\n          React.createElement(\n            \"td\",\n            null,\n            segment.description\n          ),\n          React.createElement(\n            \"td\",\n            null,\n            segment.color\n          ),\n          React.createElement(\n            \"td\",\n            {\n              className: \"text-right\"\n            },\n            React.createElement(\n              ActionButtons,\n              null,\n              React.createElement(\n                Tip,\n                {\n                  text: \"Edit\"\n                },\n                React.createElement(\n                  Button,\n                  {\n                    bsStyle: \"link\",\n                    href: FlowRouter.path('segments/edit', {\n                      id: segment._id\n                    })\n                  },\n                  React.createElement(\"i\", {\n                    className: \"ion-edit\"\n                  })\n                )\n              ),\n              React.createElement(\n                Tip,\n                {\n                  text: \"Delete\"\n                },\n                React.createElement(\n                  Button,\n                  {\n                    bsStyle: \"link\",\n                    onClick: function () {\n                      remove(segment._id);\n                    }\n                  },\n                  React.createElement(\"i\", {\n                    className: \"ion-close-circled\"\n                  })\n                )\n              )\n            )\n          )\n        );\n      })\n    )\n  );\n  var actionBarLeft = React.createElement(\n    Button,\n    {\n      bsStyle: \"link\",\n      href: FlowRouter.path('segments/new')\n    },\n    React.createElement(\"i\", {\n      className: \"ion-plus-circled\"\n    }),\n    \" New segment\"\n  );\n  var actionBar = React.createElement(Wrapper.ActionBar, {\n    left: actionBarLeft\n  });\n  return React.createElement(\n    \"div\",\n    null,\n    React.createElement(Wrapper, {\n      header: React.createElement(Wrapper.Header, {\n        breadcrumb: [{\n          title: 'Segments'\n        }]\n      }),\n      actionBar: actionBar,\n      content: content\n    })\n  );\n}\n\nSegmentsList.propTypes = propTypes;\nmodule.export(\"default\", exports.default = SegmentsList);","map":{"version":3,"sources":["/imports/react-ui/segments/components/SegmentsList.js"],"names":["React","module","importSync","v","PropTypes","Button","Table","FlowRouter","Alert","Wrapper","Tip","ActionButtons","propTypes","segments","array","isRequired","removeSegment","func","SegmentsList","remove","confirm","id","error","reason","success","parentSegments","filter","segment","subOf","map","push","getSubSegments","content","_id","name","description","color","path","actionBarLeft","actionBar","title","export","exports","default"],"mappings":";;;;;;AAAA,IAAIA,cAAJ;AAAUC,OAAOC,UAAP,CAAkB,OAAlB,EAA0B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACH,YAAMG,CAAN;AAAQ;AAA7B,CAA1B,EAAyD,CAAzD;AAA4D,IAAIC,kBAAJ;AAAcH,OAAOC,UAAP,CAAkB,YAAlB,EAA+B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACC,gBAAUD,CAAV;AAAY;AAAjC,CAA/B,EAAkE,CAAlE;AAAqE,IAAIE,eAAJ;AAAA,IAAWC,cAAX;AAAiBL,OAAOC,UAAP,CAAkB,iBAAlB,EAAoC;AAACG,UAAO,UAASF,CAAT,EAAW;AAACE,aAAOF,CAAP;AAAS,GAA7B;AAA8BG,SAAM,UAASH,CAAT,EAAW;AAACG,YAAMH,CAAN;AAAQ;AAAxD,CAApC,EAA8F,CAA9F;AAAiG,IAAII,mBAAJ;AAAeN,OAAOC,UAAP,CAAkB,2BAAlB,EAA8C;AAACK,cAAW,UAASJ,CAAT,EAAW;AAACI,iBAAWJ,CAAX;AAAa;AAArC,CAA9C,EAAqF,CAArF;AAAwF,IAAIK,cAAJ;AAAUP,OAAOC,UAAP,CAAkB,uBAAlB,EAA0C;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACK,YAAML,CAAN;AAAQ;AAA7B,CAA1C,EAAyE,CAAzE;AAA4E,IAAIM,gBAAJ;AAAYR,OAAOC,UAAP,CAAkB,qCAAlB,EAAwD;AAACO,WAAQ,UAASN,CAAT,EAAW;AAACM,cAAQN,CAAR;AAAU;AAA/B,CAAxD,EAAyF,CAAzF;AAA4F,IAAIO,YAAJ;AAAA,IAAQC,sBAAR;AAAsBV,OAAOC,UAAP,CAAkB,0BAAlB,EAA6C;AAACQ,OAAI,UAASP,CAAT,EAAW;AAACO,UAAIP,CAAJ;AAAM,GAAvB;AAAwBQ,iBAAc,UAASR,CAAT,EAAW;AAACQ,oBAAcR,CAAd;AAAgB;AAAlE,CAA7C,EAAiH,CAAjH;AAQtkB,IAAMS,YAAY;AAChBC,YAAUT,UAAUU,KAAV,CAAgBC,UADV;AAEhBC,iBAAeZ,UAAUa,IAAV,CAAeF;AAFd,CAAlB;;AAKA,SAASG,YAAT,OAAmD;AAAA,MAA3BL,QAA2B,QAA3BA,QAA2B;AAAA,MAAjBG,aAAiB,QAAjBA,aAAiB;;AACjD,MAAMG,SAAS,cAAM;AACnB,QAAIC,QAAQ,eAAR,CAAJ,EAA8B;AAC5BJ,oBACE;AAAEK;AAAF,OADF,EAEE;AAAA,eAAUC,QAAQd,MAAMc,KAAN,CAAYA,MAAMC,MAAlB,CAAR,GAAoCf,MAAMgB,OAAN,CAAc,uBAAd,CAA9C;AAAA,OAFF;AAID;AACF,GAPD;;AASA,MAAMC,iBAAiB,EAAvB;AACAZ,WAASa,MAAT,CAAgB;AAAA,WAAW,CAACC,QAAQC,KAApB;AAAA,GAAhB,EAA2CC,GAA3C,CAA+C,mBAAW;AACxDJ,mBAAeK,IAAf,wBAAoBH,OAApB,0CAAgCA,QAAQI,cAAxC;AACD,GAFD;AAIA,MAAMC,UACJ;AAAC,SAAD;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE;AAAA;AAAA;AAAA;AAAA,SAFF;AAGE;AAAA;AAAA;AAAA;AAAA,SAHF;AAIE;AAJF;AADF,KADF;AASE;AAAA;AAAA;AACGP,qBAAeI,GAAf,CAAmB;AAAA,eAClB;AAAA;AAAA;AAAI,iBAAKF,QAAQM;AAAjB;AACE;AAAA;AAAA;AACGN,oBAAQC,KAAR,GAAgB,cAAhB,GAAiC,IADpC;AAAA;AAC2CD,oBAAQO;AADnD,WADF;AAIE;AAAA;AAAA;AACGP,oBAAQQ;AADX,WAJF;AAOE;AAAA;AAAA;AACGR,oBAAQS;AADX,WAPF;AAUE;AAAA;AAAA;AAAI,yBAAU;AAAd;AACE;AAAC,2BAAD;AAAA;AACE;AAAC,mBAAD;AAAA;AAAK,wBAAK;AAAV;AACE;AAAC,wBAAD;AAAA;AACE,6BAAQ,MADV;AAEE,0BAAM7B,WAAW8B,IAAX,CAAgB,eAAhB,EAAiC;AAAEhB,0BAAIM,QAAQM;AAAd,qBAAjC;AAFR;AAIE;AAAG,+BAAU;AAAb;AAJF;AADF,eADF;AASE;AAAC,mBAAD;AAAA;AAAK,wBAAK;AAAV;AACE;AAAC,wBAAD;AAAA;AACE,6BAAQ,MADV;AAEE,6BAAS,YAAM;AACbd,6BAAOQ,QAAQM,GAAf;AACD;AAJH;AAME;AAAG,+BAAU;AAAb;AANF;AADF;AATF;AADF;AAVF,SADkB;AAAA,OAAnB;AADH;AATF,GADF;AAkDA,MAAMK,gBACJ;AAAC,UAAD;AAAA;AAAQ,eAAQ,MAAhB;AAAuB,YAAM/B,WAAW8B,IAAX,CAAgB,cAAhB;AAA7B;AACE;AAAG,iBAAU;AAAb,MADF;AAAA;AAAA,GADF;AAKA,MAAME,YAAY,oBAAC,OAAD,CAAS,SAAT;AAAmB,UAAMD;AAAzB,IAAlB;AAEA,SACE;AAAA;AAAA;AACE,wBAAC,OAAD;AACE,cAAQ,oBAAC,OAAD,CAAS,MAAT;AAAgB,oBAAY,CAAC;AAAEE,iBAAO;AAAT,SAAD;AAA5B,QADV;AAEE,iBAAWD,SAFb;AAGE,eAASP;AAHX;AADF,GADF;AASD;;AAEDd,aAAaN,SAAb,GAAyBA,SAAzB;AAhGAX,OAAOwC,MAAP,CAAc,SAAd,EAAwBC,QAAQC,OAAR,GAkGTzB,YAlGf","file":"/imports/react-ui/segments/components/SegmentsList.js.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Table } from 'react-bootstrap';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport Alert from 'meteor/erxes-notifier';\nimport { Wrapper } from '/imports/react-ui/layout/components';\nimport { Tip, ActionButtons } from '/imports/react-ui/common';\n\nconst propTypes = {\n  segments: PropTypes.array.isRequired,\n  removeSegment: PropTypes.func.isRequired,\n};\n\nfunction SegmentsList({ segments, removeSegment }) {\n  const remove = id => {\n    if (confirm('Are you sure?')) {\n      removeSegment(\n        { id },\n        error => (error ? Alert.error(error.reason) : Alert.success('Successfully deleted.')),\n      );\n    }\n  };\n\n  const parentSegments = [];\n  segments.filter(segment => !segment.subOf).map(segment => {\n    parentSegments.push(segment, ...segment.getSubSegments);\n  });\n\n  const content = (\n    <Table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Description</th>\n          <th>Color</th>\n          <th />\n        </tr>\n      </thead>\n      <tbody>\n        {parentSegments.map(segment => (\n          <tr key={segment._id}>\n            <td>\n              {segment.subOf ? '\\u2014\\u2014' : null} {segment.name}\n            </td>\n            <td>\n              {segment.description}\n            </td>\n            <td>\n              {segment.color}\n            </td>\n            <td className=\"text-right\">\n              <ActionButtons>\n                <Tip text=\"Edit\">\n                  <Button\n                    bsStyle=\"link\"\n                    href={FlowRouter.path('segments/edit', { id: segment._id })}\n                  >\n                    <i className=\"ion-edit\" />\n                  </Button>\n                </Tip>\n                <Tip text=\"Delete\">\n                  <Button\n                    bsStyle=\"link\"\n                    onClick={() => {\n                      remove(segment._id);\n                    }}\n                  >\n                    <i className=\"ion-close-circled\" />\n                  </Button>\n                </Tip>\n              </ActionButtons>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n\n  const actionBarLeft = (\n    <Button bsStyle=\"link\" href={FlowRouter.path('segments/new')}>\n      <i className=\"ion-plus-circled\" /> New segment\n    </Button>\n  );\n  const actionBar = <Wrapper.ActionBar left={actionBarLeft} />;\n\n  return (\n    <div>\n      <Wrapper\n        header={<Wrapper.Header breadcrumb={[{ title: 'Segments' }]} />}\n        actionBar={actionBar}\n        content={content}\n      />\n    </div>\n  );\n}\n\nSegmentsList.propTypes = propTypes;\n\nexport default SegmentsList;\n"]},"hash":"4746c539b0d67ea1e18b111f93344d5ce8146fbd"}
