{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-bootstrap","imported":["FormGroup","ControlLabel","FormControl","Button","ButtonToolbar","Well"],"specifiers":[{"kind":"named","imported":"FormGroup","local":"FormGroup"},{"kind":"named","imported":"ControlLabel","local":"ControlLabel"},{"kind":"named","imported":"FormControl","local":"FormControl"},{"kind":"named","imported":"Button","local":"Button"},{"kind":"named","imported":"ButtonToolbar","local":"ButtonToolbar"},{"kind":"named","imported":"Well","local":"Well"}]},{"source":"meteor/erxes-notifier","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Alert"}]},{"source":"/imports/react-ui/layout/components","imported":["Wrapper"],"specifiers":[{"kind":"named","imported":"Wrapper","local":"Wrapper"}]},{"source":"../../Sidebar","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Sidebar"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/settings/email/components/Signature.js","filenameRelative":"/imports/react-ui/settings/email/components/Signature.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/settings/email/components/Signature.js.map","sourceFileName":"/imports/react-ui/settings/email/components/Signature.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Signature"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar FormGroup = void 0,\n    ControlLabel = void 0,\n    FormControl = void 0,\n    Button = void 0,\n    ButtonToolbar = void 0,\n    Well = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  FormGroup: function (v) {\n    FormGroup = v;\n  },\n  ControlLabel: function (v) {\n    ControlLabel = v;\n  },\n  FormControl: function (v) {\n    FormControl = v;\n  },\n  Button: function (v) {\n    Button = v;\n  },\n  ButtonToolbar: function (v) {\n    ButtonToolbar = v;\n  },\n  Well: function (v) {\n    Well = v;\n  }\n}, 2);\nvar Alert = void 0;\nmodule.importSync(\"meteor/erxes-notifier\", {\n  \"default\": function (v) {\n    Alert = v;\n  }\n}, 3);\nvar Wrapper = void 0;\nmodule.importSync(\"/imports/react-ui/layout/components\", {\n  Wrapper: function (v) {\n    Wrapper = v;\n  }\n}, 4);\nvar Sidebar = void 0;\nmodule.importSync(\"../../Sidebar\", {\n  \"default\": function (v) {\n    Sidebar = v;\n  }\n}, 5);\nvar propTypes = {\n  signatures: PropTypes.array.isRequired,\n  save: PropTypes.func.isRequired\n};\n\nvar Signature = function (_Component) {\n  (0, _inherits3.default)(Signature, _Component);\n\n  function Signature(props) {\n    (0, _classCallCheck3.default)(this, Signature);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.changeCurrent = _this.changeCurrent.bind(_this);\n    _this.changeContent = _this.changeContent.bind(_this);\n    _this.handleSubmit = _this.handleSubmit.bind(_this);\n    _this.state = {\n      signatures: props.signatures,\n      currentId: null\n    };\n    return _this;\n  }\n\n  Signature.prototype.getCurrent = function () {\n    function getCurrent() {\n      var currentId = this.state.currentId;\n\n      if (!currentId) {\n        return {};\n      }\n\n      return this.state.signatures.find(function (signature) {\n        return signature.brandId.toString() === currentId.toString();\n      });\n    }\n\n    return getCurrent;\n  }();\n\n  Signature.prototype.changeCurrent = function () {\n    function changeCurrent(e) {\n      this.setState({\n        currentId: e.target.value\n      });\n    }\n\n    return changeCurrent;\n  }();\n\n  Signature.prototype.changeContent = function () {\n    function changeContent(e) {\n      var current = this.getCurrent();\n      current.content = e.target.value;\n      this.setState({\n        signatures: this.state.signatures\n      });\n    }\n\n    return changeContent;\n  }();\n\n  Signature.prototype.handleSubmit = function () {\n    function handleSubmit(e) {\n      e.preventDefault();\n      this.props.save(this.state.signatures, function (error) {\n        if (error) return Alert.error(error.reason);\n        return Alert.success('Congrats');\n      });\n    }\n\n    return handleSubmit;\n  }();\n\n  Signature.prototype.render = function () {\n    function render() {\n      var current = this.getCurrent();\n      var content = React.createElement(\n        \"div\",\n        {\n          className: \"margined\"\n        },\n        React.createElement(\n          Well,\n          null,\n          \"Signatures are only included in response emails. \",\n          React.createElement(\"br\", null),\n          \"You can use Markdown to format your signature.\"\n        ),\n        React.createElement(\n          \"form\",\n          {\n            id: \"signature-form\",\n            onSubmit: this.handleSubmit\n          },\n          React.createElement(\n            FormGroup,\n            {\n              onChange: this.changeCurrent,\n              controlId: \"selectBrand\"\n            },\n            React.createElement(\n              ControlLabel,\n              null,\n              \"Brand\"\n            ),\n            React.createElement(\n              FormControl,\n              {\n                componentClass: \"select\"\n              },\n              React.createElement(\n                \"option\",\n                null,\n                \"------------\"\n              ),\n              this.props.signatures.map(function (signature) {\n                return React.createElement(\n                  \"option\",\n                  {\n                    key: signature.brandId,\n                    value: signature.brandId\n                  },\n                  signature.brandName\n                );\n              })\n            )\n          ),\n          React.createElement(\n            FormGroup,\n            null,\n            React.createElement(\n              ControlLabel,\n              null,\n              \"Signature\"\n            ),\n            React.createElement(FormControl, {\n              componentClass: \"textarea\",\n              id: \"content\",\n              rows: 6,\n              onChange: this.changeContent,\n              value: current.content\n            })\n          ),\n          React.createElement(\n            ButtonToolbar,\n            {\n              className: \"pull-right\"\n            },\n            React.createElement(\n              Button,\n              {\n                type: \"submit\",\n                bsStyle: \"primary\"\n              },\n              \"Save\"\n            )\n          )\n        )\n      );\n      var breadcrumb = [{\n        title: 'Settings',\n        link: '/settings/channels'\n      }, {\n        title: 'Signature template'\n      }];\n      return React.createElement(\n        \"div\",\n        null,\n        React.createElement(Wrapper, {\n          header: React.createElement(Wrapper.Header, {\n            breadcrumb: breadcrumb\n          }),\n          leftSidebar: React.createElement(Sidebar, null),\n          content: content\n        })\n      );\n    }\n\n    return render;\n  }();\n\n  return Signature;\n}(Component);\n\nSignature.propTypes = propTypes;\nmodule.export(\"default\", exports.default = Signature);","map":{"version":3,"sources":["/imports/react-ui/settings/email/components/Signature.js"],"names":["React","Component","module","importSync","v","PropTypes","FormGroup","ControlLabel","FormControl","Button","ButtonToolbar","Well","Alert","Wrapper","Sidebar","propTypes","signatures","array","isRequired","save","func","Signature","props","changeCurrent","bind","changeContent","handleSubmit","state","currentId","getCurrent","find","signature","brandId","toString","e","setState","target","value","current","content","preventDefault","error","reason","success","render","map","brandName","breadcrumb","title","link","export","exports","default"],"mappings":"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","file":"/imports/react-ui/settings/email/components/Signature.js.map","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup, ControlLabel, FormControl, Button, ButtonToolbar, Well } from 'react-bootstrap';\nimport Alert from 'meteor/erxes-notifier';\nimport { Wrapper } from '/imports/react-ui/layout/components';\nimport Sidebar from '../../Sidebar';\n\nconst propTypes = {\n  signatures: PropTypes.array.isRequired,\n  save: PropTypes.func.isRequired,\n};\n\nclass Signature extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeCurrent = this.changeCurrent.bind(this);\n    this.changeContent = this.changeContent.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      signatures: props.signatures,\n      currentId: null,\n    };\n  }\n\n  getCurrent() {\n    const currentId = this.state.currentId;\n\n    if (!currentId) {\n      return {};\n    }\n\n    return this.state.signatures.find(\n      signature => signature.brandId.toString() === currentId.toString(),\n    );\n  }\n\n  changeCurrent(e) {\n    this.setState({ currentId: e.target.value });\n  }\n\n  changeContent(e) {\n    const current = this.getCurrent();\n    current.content = e.target.value;\n\n    this.setState({ signatures: this.state.signatures });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.props.save(this.state.signatures, error => {\n      if (error) return Alert.error(error.reason);\n\n      return Alert.success('Congrats');\n    });\n  }\n\n  render() {\n    const current = this.getCurrent();\n\n    const content = (\n      <div className=\"margined\">\n        <Well>\n          Signatures are only included in response emails. <br />\n          You can use Markdown to format your signature.\n        </Well>\n\n        <form id=\"signature-form\" onSubmit={this.handleSubmit}>\n          <FormGroup onChange={this.changeCurrent} controlId=\"selectBrand\">\n            <ControlLabel>Brand</ControlLabel>\n\n            <FormControl componentClass=\"select\">\n              <option>------------</option>\n\n              {this.props.signatures.map(signature => (\n                <option key={signature.brandId} value={signature.brandId}>\n                  {signature.brandName}\n                </option>\n              ))}\n            </FormControl>\n          </FormGroup>\n\n          <FormGroup>\n            <ControlLabel>Signature</ControlLabel>\n\n            <FormControl\n              componentClass=\"textarea\"\n              id=\"content\"\n              rows={6}\n              onChange={this.changeContent}\n              value={current.content}\n            />\n          </FormGroup>\n          <ButtonToolbar className=\"pull-right\">\n            <Button type=\"submit\" bsStyle=\"primary\">Save</Button>\n          </ButtonToolbar>\n        </form>\n      </div>\n    );\n\n    const breadcrumb = [\n      { title: 'Settings', link: '/settings/channels' },\n      { title: 'Signature template' },\n    ];\n\n    return (\n      <div>\n        <Wrapper\n          header={<Wrapper.Header breadcrumb={breadcrumb} />}\n          leftSidebar={<Sidebar />}\n          content={content}\n        />\n      </div>\n    );\n  }\n}\n\nSignature.propTypes = propTypes;\n\nexport default Signature;\n"]},"hash":"ad3d44d33d091bebf6e31dcda5ee64e7a43ace8b"}
