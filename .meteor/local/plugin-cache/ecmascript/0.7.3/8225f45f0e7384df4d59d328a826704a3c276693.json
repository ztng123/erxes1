{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/aldeed:simple-schema","imported":["SimpleSchema"],"specifiers":[{"kind":"named","imported":"SimpleSchema","local":"SimpleSchema"}]},{"source":"/imports/api/brands/brands","imported":["Brands"],"specifiers":[{"kind":"named","imported":"Brands","local":"Brands"}]}],"exports":{"exported":["ResponseTemplates"],"specifiers":[{"kind":"local","local":"ResponseTemplates","exported":"ResponseTemplates"}]}}},"options":{"filename":"/imports/api/responseTemplates/responseTemplates.js","filenameRelative":"/imports/api/responseTemplates/responseTemplates.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/api/responseTemplates/responseTemplates.js.map","sourceFileName":"/imports/api/responseTemplates/responseTemplates.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"responseTemplates"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  ResponseTemplates: function () {\n    return ResponseTemplates;\n  }\n});\nvar Mongo = void 0;\nmodule.importSync(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar SimpleSchema = void 0;\nmodule.importSync(\"meteor/aldeed:simple-schema\", {\n  SimpleSchema: function (v) {\n    SimpleSchema = v;\n  }\n}, 1);\nvar Brands = void 0;\nmodule.importSync(\"/imports/api/brands/brands\", {\n  Brands: function (v) {\n    Brands = v;\n  }\n}, 2);\n\n// Response template collection\nvar Collection = function (_Mongo$Collection) {\n  (0, _inherits3.default)(Collection, _Mongo$Collection);\n\n  function Collection() {\n    (0, _classCallCheck3.default)(this, Collection);\n    return (0, _possibleConstructorReturn3.default)(this, _Mongo$Collection.apply(this, arguments));\n  }\n\n  return Collection;\n}(Mongo.Collection);\n\nvar ResponseTemplates = new Collection('response_templates');\n// collection helpers\nResponseTemplates.helpers({\n  brand: function () {\n    return Brands.findOne(this.brandId);\n  }\n});\nResponseTemplates.schema = new SimpleSchema({\n  brandId: {\n    type: String\n  },\n  name: {\n    type: String\n  },\n  content: {\n    type: String\n  },\n  files: {\n    type: [new SimpleSchema({\n      url: {\n        type: String\n      },\n      type: {\n        type: String,\n        optional: true\n      },\n      name: {\n        type: String,\n        optional: true\n      },\n      size: {\n        type: Number,\n        optional: true\n      }\n    })],\n    optional: true\n  }\n});\nResponseTemplates.attachSchema(ResponseTemplates.schema);","map":{"version":3,"sources":["/imports/api/responseTemplates/responseTemplates.js"],"names":["module","export","ResponseTemplates","Mongo","importSync","v","SimpleSchema","Brands","Collection","helpers","brand","findOne","brandId","schema","type","String","name","content","files","url","optional","size","Number","attachSchema"],"mappings":";;;;;;;;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,qBAAkB;AAAA,WAAIA,iBAAJ;AAAA;AAAnB,CAAd;AAAyD,IAAIC,cAAJ;AAAUH,OAAOI,UAAP,CAAkB,cAAlB,EAAiC;AAACD,SAAM,UAASE,CAAT,EAAW;AAACF,YAAME,CAAN;AAAQ;AAA3B,CAAjC,EAA8D,CAA9D;AAAiE,IAAIC,qBAAJ;AAAiBN,OAAOI,UAAP,CAAkB,6BAAlB,EAAgD;AAACE,gBAAa,UAASD,CAAT,EAAW;AAACC,mBAAaD,CAAb;AAAe;AAAzC,CAAhD,EAA2F,CAA3F;AAA8F,IAAIE,eAAJ;AAAWP,OAAOI,UAAP,CAAkB,4BAAlB,EAA+C;AAACG,UAAO,UAASF,CAAT,EAAW;AAACE,aAAOF,CAAP;AAAS;AAA7B,CAA/C,EAA8E,CAA9E;;AAI9P;IACMG,U;;;;;;;;;EAAmBL,MAAMK,U;;AAExB,IAAMN,oBAAoB,IAAIM,UAAJ,CAAe,oBAAf,CAA1B;AAEP;AACAN,kBAAkBO,OAAlB,CAA0B;AACxBC,OADwB,cAChB;AACN,WAAOH,OAAOI,OAAP,CAAe,KAAKC,OAApB,CAAP;AACD;AAHuB,CAA1B;AAMAV,kBAAkBW,MAAlB,GAA2B,IAAIP,YAAJ,CAAiB;AAC1CM,WAAS;AACPE,UAAMC;AADC,GADiC;AAI1CC,QAAM;AACJF,UAAMC;AADF,GAJoC;AAO1CE,WAAS;AACPH,UAAMC;AADC,GAPiC;AAU1CG,SAAO;AACLJ,UAAM,CACJ,IAAIR,YAAJ,CAAiB;AACfa,WAAK;AAAEL,cAAMC;AAAR,OADU;AAEfD,YAAM;AAAEA,cAAMC,MAAR;AAAgBK,kBAAU;AAA1B,OAFS;AAGfJ,YAAM;AAAEF,cAAMC,MAAR;AAAgBK,kBAAU;AAA1B,OAHS;AAIfC,YAAM;AAAEP,cAAMQ,MAAR;AAAgBF,kBAAU;AAA1B;AAJS,KAAjB,CADI,CADD;AASLA,cAAU;AATL;AAVmC,CAAjB,CAA3B;AAuBAlB,kBAAkBqB,YAAlB,CAA+BrB,kBAAkBW,MAAjD","file":"/imports/api/responseTemplates/responseTemplates.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\nimport { Brands } from '/imports/api/brands/brands';\n\n// Response template collection\nclass Collection extends Mongo.Collection {}\n\nexport const ResponseTemplates = new Collection('response_templates');\n\n// collection helpers\nResponseTemplates.helpers({\n  brand() {\n    return Brands.findOne(this.brandId);\n  },\n});\n\nResponseTemplates.schema = new SimpleSchema({\n  brandId: {\n    type: String,\n  },\n  name: {\n    type: String,\n  },\n  content: {\n    type: String,\n  },\n  files: {\n    type: [\n      new SimpleSchema({\n        url: { type: String },\n        type: { type: String, optional: true },\n        name: { type: String, optional: true },\n        size: { type: Number, optional: true },\n      }),\n    ],\n    optional: true,\n  },\n});\n\nResponseTemplates.attachSchema(ResponseTemplates.schema);\n"]},"hash":"8225f45f0e7384df4d59d328a826704a3c276693"}
