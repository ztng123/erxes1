{"metadata":{"usedHelpers":["extends","taggedTemplateLiteralLoose","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-apollo","imported":["compose","gql","graphql"],"specifiers":[{"kind":"named","imported":"compose","local":"compose"},{"kind":"named","imported":"gql","local":"gql"},{"kind":"named","imported":"graphql","local":"graphql"}]},{"source":"/imports/react-ui/common","imported":["pagination","Loading"],"specifiers":[{"kind":"named","imported":"pagination","local":"pagination"},{"kind":"named","imported":"Loading","local":"Loading"}]},{"source":"../components","imported":["List"],"specifiers":[{"kind":"named","imported":"List","local":"List"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/settings/integrations/containers/List.js","filenameRelative":"/imports/react-ui/settings/integrations/containers/List.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/settings/integrations/containers/List.js.map","sourceFileName":"/imports/react-ui/settings/integrations/containers/List.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"List"},"ignored":false,"code":"var _taggedTemplateLiteralLoose2 = require(\"babel-runtime/helpers/taggedTemplateLiteralLoose\");\n\nvar _taggedTemplateLiteralLoose3 = _interopRequireDefault(_taggedTemplateLiteralLoose2);\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _this = this;\n\nvar _templateObject = (0, _taggedTemplateLiteralLoose3.default)([\"\\n      query objects($limit: Int!, $kind: String) {\\n        integrations(limit: $limit, kind: $kind) {\\n          _id\\n          brandId\\n          name\\n          kind\\n          brand {\\n            _id\\n            name\\n            code\\n          }\\n          formData\\n          formId\\n          form {\\n            _id\\n            title\\n            code\\n          }\\n        }\\n      }\\n    \"], [\"\\n      query objects($limit: Int!, $kind: String) {\\n        integrations(limit: $limit, kind: $kind) {\\n          _id\\n          brandId\\n          name\\n          kind\\n          brand {\\n            _id\\n            name\\n            code\\n          }\\n          formData\\n          formId\\n          form {\\n            _id\\n            title\\n            code\\n          }\\n        }\\n      }\\n    \"]),\n    _templateObject2 = (0, _taggedTemplateLiteralLoose3.default)([\"\\n      query totalIntegrationsCount($kind: String) {\\n        integrationsTotalCount(kind: $kind)\\n      }\\n    \"], [\"\\n      query totalIntegrationsCount($kind: String) {\\n        integrationsTotalCount(kind: $kind)\\n      }\\n    \"]);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 1);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 2);\nvar compose = void 0,\n    gql = void 0,\n    graphql = void 0;\nmodule.importSync(\"react-apollo\", {\n  compose: function (v) {\n    compose = v;\n  },\n  gql: function (v) {\n    gql = v;\n  },\n  graphql: function (v) {\n    graphql = v;\n  }\n}, 3);\nvar pagination = void 0,\n    Loading = void 0;\nmodule.importSync(\"/imports/react-ui/common\", {\n  pagination: function (v) {\n    pagination = v;\n  },\n  Loading: function (v) {\n    Loading = v;\n  }\n}, 4);\nvar List = void 0;\nmodule.importSync(\"../components\", {\n  List: function (v) {\n    List = v;\n  }\n}, 5);\n\nvar ListContainer = function (props) {\n  var listQuery = props.listQuery,\n      totalCountQuery = props.totalCountQuery,\n      queryParams = props.queryParams;\n\n  if (totalCountQuery.loading || listQuery.loading) {\n    return React.createElement(Loading, {\n      title: \"Integrations\"\n    });\n  }\n\n  var totalCount = totalCountQuery.totalIntegrationsCount;\n  var integrations = listQuery.integrations;\n\n  var _pagination = pagination(queryParams, totalCount),\n      loadMore = _pagination.loadMore,\n      hasMore = _pagination.hasMore;\n\n  var removeIntegration = function (id, callback) {\n    Meteor.call('integrations.remove', id, function () {\n      // refresh queries\n      listQuery.refetch();\n      totalCountQuery.refetch();\n      callback.apply(undefined, arguments);\n    });\n  };\n\n  var updatedProps = (0, _extends3.default)({}, _this.props, {\n    integrations: integrations,\n    refetch: listQuery.refetch,\n    loadMore: loadMore,\n    hasMore: hasMore,\n    removeIntegration: removeIntegration\n  });\n  return React.createElement(List, updatedProps);\n};\n\nListContainer.propTypes = {\n  totalCountQuery: PropTypes.object,\n  listQuery: PropTypes.object,\n  queryParams: PropTypes.object\n};\nmodule.export(\"default\", exports.default = compose(graphql(gql(_templateObject), {\n  name: 'listQuery',\n  options: function (_ref) {\n    var queryParams = _ref.queryParams;\n    return {\n      variables: {\n        limit: queryParams.limit || 20,\n        kind: queryParams.kind\n      },\n      fetchPolicy: 'network-only'\n    };\n  }\n}), graphql(gql(_templateObject2), {\n  name: 'totalCountQuery',\n  options: function (_ref2) {\n    var queryParams = _ref2.queryParams;\n    return {\n      variables: {\n        kind: queryParams.kind\n      },\n      fetchPolicy: 'network-only'\n    };\n  }\n}))(ListContainer));","map":{"version":3,"sources":["/imports/react-ui/settings/integrations/containers/List.js"],"names":["Meteor","module","importSync","v","React","PropTypes","compose","gql","graphql","pagination","Loading","List","ListContainer","listQuery","props","totalCountQuery","queryParams","loading","totalCount","totalIntegrationsCount","integrations","loadMore","hasMore","removeIntegration","id","callback","call","refetch","updatedProps","propTypes","object","export","exports","default","name","options","variables","limit","kind","fetchPolicy"],"mappings":"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","file":"/imports/react-ui/settings/integrations/containers/List.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose, gql, graphql } from 'react-apollo';\nimport { pagination, Loading } from '/imports/react-ui/common';\nimport { List } from '../components';\n\nconst ListContainer = props => {\n  const { listQuery, totalCountQuery, queryParams } = props;\n\n  if (totalCountQuery.loading || listQuery.loading) {\n    return <Loading title=\"Integrations\" />;\n  }\n\n  const totalCount = totalCountQuery.totalIntegrationsCount;\n  const integrations = listQuery.integrations;\n\n  const { loadMore, hasMore } = pagination(queryParams, totalCount);\n\n  const removeIntegration = (id, callback) => {\n    Meteor.call('integrations.remove', id, (...params) => {\n      // refresh queries\n      listQuery.refetch();\n      totalCountQuery.refetch();\n\n      callback(...params);\n    });\n  };\n\n  const updatedProps = {\n    ...this.props,\n    integrations,\n    refetch: listQuery.refetch,\n    loadMore,\n    hasMore,\n    removeIntegration,\n  };\n\n  return <List {...updatedProps} />;\n};\n\nListContainer.propTypes = {\n  totalCountQuery: PropTypes.object,\n  listQuery: PropTypes.object,\n  queryParams: PropTypes.object,\n};\n\nexport default compose(\n  graphql(\n    gql`\n      query objects($limit: Int!, $kind: String) {\n        integrations(limit: $limit, kind: $kind) {\n          _id\n          brandId\n          name\n          kind\n          brand {\n            _id\n            name\n            code\n          }\n          formData\n          formId\n          form {\n            _id\n            title\n            code\n          }\n        }\n      }\n    `,\n    {\n      name: 'listQuery',\n      options: ({ queryParams }) => {\n        return {\n          variables: {\n            limit: queryParams.limit || 20,\n            kind: queryParams.kind,\n          },\n          fetchPolicy: 'network-only',\n        };\n      },\n    },\n  ),\n  graphql(\n    gql`\n      query totalIntegrationsCount($kind: String) {\n        integrationsTotalCount(kind: $kind)\n      }\n    `,\n    {\n      name: 'totalCountQuery',\n      options: ({ queryParams }) => {\n        return {\n          variables: {\n            kind: queryParams.kind,\n          },\n          fetchPolicy: 'network-only',\n        };\n      },\n    },\n  ),\n)(ListContainer);\n"]},"hash":"529503fe9ee0b2153401bcd90f58f8b82ecd95a4"}
