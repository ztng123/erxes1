{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]},{"source":"meteor/mdg:validated-method","imported":["ValidatedMethod"],"specifiers":[{"kind":"named","imported":"ValidatedMethod","local":"ValidatedMethod"}]},{"source":"/imports/api/utils","imported":["ErxesMixin"],"specifiers":[{"kind":"named","imported":"ErxesMixin","local":"ErxesMixin"}]},{"source":"../responseTemplates","imported":["ResponseTemplates"],"specifiers":[{"kind":"named","imported":"ResponseTemplates","local":"ResponseTemplates"}]}],"exports":{"exported":["add","edit","remove"],"specifiers":[{"kind":"local","local":"add","exported":"add"},{"kind":"local","local":"edit","exported":"edit"},{"kind":"local","local":"remove","exported":"remove"}]}}},"options":{"filename":"/imports/api/responseTemplates/server/methods.js","filenameRelative":"/imports/api/responseTemplates/server/methods.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/api/responseTemplates/server/methods.js.map","sourceFileName":"/imports/api/responseTemplates/server/methods.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"methods"},"ignored":false,"code":"module.export({\n  add: function () {\n    return add;\n  },\n  edit: function () {\n    return edit;\n  },\n  remove: function () {\n    return remove;\n  }\n});\nvar check = void 0;\nmodule.importSync(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  }\n}, 0);\nvar ValidatedMethod = void 0;\nmodule.importSync(\"meteor/mdg:validated-method\", {\n  ValidatedMethod: function (v) {\n    ValidatedMethod = v;\n  }\n}, 1);\nvar ErxesMixin = void 0;\nmodule.importSync(\"/imports/api/utils\", {\n  ErxesMixin: function (v) {\n    ErxesMixin = v;\n  }\n}, 2);\nvar ResponseTemplates = void 0;\nmodule.importSync(\"../responseTemplates\", {\n  ResponseTemplates: function (v) {\n    ResponseTemplates = v;\n  }\n}, 3);\nvar add = new ValidatedMethod({\n  name: 'responseTemplates.add',\n  mixins: [ErxesMixin],\n  validate: function (_ref) {\n    var doc = _ref.doc;\n    check(doc, ResponseTemplates.schema);\n  },\n  run: function (_ref2) {\n    var doc = _ref2.doc;\n    return ResponseTemplates.insert(doc);\n  }\n});\nvar edit = new ValidatedMethod({\n  name: 'responseTemplates.edit',\n  mixins: [ErxesMixin],\n  validate: function (_ref3) {\n    var id = _ref3.id,\n        doc = _ref3.doc;\n    check(id, String);\n    check(doc, ResponseTemplates.schema);\n  },\n  run: function (_ref4) {\n    var id = _ref4.id,\n        doc = _ref4.doc;\n    return ResponseTemplates.update(id, {\n      $set: doc\n    });\n  }\n});\nvar remove = new ValidatedMethod({\n  name: 'responseTemplates.remove',\n  mixins: [ErxesMixin],\n  validate: function (id) {\n    check(id, String);\n  },\n  run: function (id) {\n    return ResponseTemplates.remove({\n      _id: id\n    });\n  }\n});","map":{"version":3,"sources":["/imports/api/responseTemplates/server/methods.js"],"names":["module","export","add","edit","remove","check","importSync","v","ValidatedMethod","ErxesMixin","ResponseTemplates","name","mixins","validate","doc","schema","run","insert","id","String","update","$set","_id"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,OAAI;AAAA,WAAIA,GAAJ;AAAA,GAAL;AAAaC,QAAK;AAAA,WAAIA,IAAJ;AAAA,GAAlB;AAA2BC,UAAO;AAAA,WAAIA,MAAJ;AAAA;AAAlC,CAAd;AAA6D,IAAIC,cAAJ;AAAUL,OAAOM,UAAP,CAAkB,cAAlB,EAAiC;AAACD,SAAM,UAASE,CAAT,EAAW;AAACF,YAAME,CAAN;AAAQ;AAA3B,CAAjC,EAA8D,CAA9D;AAAiE,IAAIC,wBAAJ;AAAoBR,OAAOM,UAAP,CAAkB,6BAAlB,EAAgD;AAACE,mBAAgB,UAASD,CAAT,EAAW;AAACC,sBAAgBD,CAAhB;AAAkB;AAA/C,CAAhD,EAAiG,CAAjG;AAAoG,IAAIE,mBAAJ;AAAeT,OAAOM,UAAP,CAAkB,oBAAlB,EAAuC;AAACG,cAAW,UAASF,CAAT,EAAW;AAACE,iBAAWF,CAAX;AAAa;AAArC,CAAvC,EAA8E,CAA9E;AAAiF,IAAIG,0BAAJ;AAAsBV,OAAOM,UAAP,CAAkB,sBAAlB,EAAyC;AAACI,qBAAkB,UAASH,CAAT,EAAW;AAACG,wBAAkBH,CAAlB;AAAoB;AAAnD,CAAzC,EAA8F,CAA9F;AAM/W,IAAML,MAAM,IAAIM,eAAJ,CAAoB;AACrCG,QAAM,uBAD+B;AAErCC,UAAQ,CAACH,UAAD,CAF6B;AAIrCI,UAJqC,kBAInB;AAAA,QAAPC,GAAO,QAAPA,GAAO;AAChBT,UAAMS,GAAN,EAAWJ,kBAAkBK,MAA7B;AACD,GANoC;AAQrCC,KARqC,mBAQxB;AAAA,QAAPF,GAAO,SAAPA,GAAO;AACX,WAAOJ,kBAAkBO,MAAlB,CAAyBH,GAAzB,CAAP;AACD;AAVoC,CAApB,CAAZ;AAcA,IAAMX,OAAO,IAAIK,eAAJ,CAAoB;AACtCG,QAAM,wBADgC;AAEtCC,UAAQ,CAACH,UAAD,CAF8B;AAItCI,UAJsC,mBAIhB;AAAA,QAAXK,EAAW,SAAXA,EAAW;AAAA,QAAPJ,GAAO,SAAPA,GAAO;AACpBT,UAAMa,EAAN,EAAUC,MAAV;AACAd,UAAMS,GAAN,EAAWJ,kBAAkBK,MAA7B;AACD,GAPqC;AAStCC,KATsC,mBASrB;AAAA,QAAXE,EAAW,SAAXA,EAAW;AAAA,QAAPJ,GAAO,SAAPA,GAAO;AACf,WAAOJ,kBAAkBU,MAAlB,CAAyBF,EAAzB,EAA6B;AAAEG,YAAMP;AAAR,KAA7B,CAAP;AACD;AAXqC,CAApB,CAAb;AAeA,IAAMV,SAAS,IAAII,eAAJ,CAAoB;AACxCG,QAAM,0BADkC;AAExCC,UAAQ,CAACH,UAAD,CAFgC;AAIxCI,UAJwC,YAI/BK,EAJ+B,EAI3B;AACXb,UAAMa,EAAN,EAAUC,MAAV;AACD,GANuC;AAQxCH,KARwC,YAQpCE,EARoC,EAQhC;AACN,WAAOR,kBAAkBN,MAAlB,CAAyB;AAAEkB,WAAKJ;AAAP,KAAzB,CAAP;AACD;AAVuC,CAApB,CAAf","file":"/imports/api/responseTemplates/server/methods.js.map","sourcesContent":["import { check } from 'meteor/check';\nimport { ValidatedMethod } from 'meteor/mdg:validated-method';\nimport { ErxesMixin } from '/imports/api/utils';\nimport { ResponseTemplates } from '../responseTemplates';\n\n// response template add\nexport const add = new ValidatedMethod({\n  name: 'responseTemplates.add',\n  mixins: [ErxesMixin],\n\n  validate({ doc }) {\n    check(doc, ResponseTemplates.schema);\n  },\n\n  run({ doc }) {\n    return ResponseTemplates.insert(doc);\n  },\n});\n\n// response template edit\nexport const edit = new ValidatedMethod({\n  name: 'responseTemplates.edit',\n  mixins: [ErxesMixin],\n\n  validate({ id, doc }) {\n    check(id, String);\n    check(doc, ResponseTemplates.schema);\n  },\n\n  run({ id, doc }) {\n    return ResponseTemplates.update(id, { $set: doc });\n  },\n});\n\n// response template remove\nexport const remove = new ValidatedMethod({\n  name: 'responseTemplates.remove',\n  mixins: [ErxesMixin],\n\n  validate(id) {\n    check(id, String);\n  },\n\n  run(id) {\n    return ResponseTemplates.remove({ _id: id });\n  },\n});\n"]},"hash":"1e93ea640cb2005416d32f623996287a118d0d6e"}
