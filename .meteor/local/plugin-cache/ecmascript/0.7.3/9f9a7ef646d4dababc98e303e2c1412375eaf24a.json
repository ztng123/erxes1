{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"/imports/react-ui/layout/components","imported":["Wrapper"],"specifiers":[{"kind":"named","imported":"Wrapper","local":"Wrapper"}]},{"source":"./FormBase","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"FormBase"}]},{"source":"./EmailForm","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"EmailForm"}]},{"source":"./MessengerForm","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"MessengerForm"}]},{"source":"./Segments","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Segments"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/engage/components/AutoAndManualForm.js","filenameRelative":"/imports/react-ui/engage/components/AutoAndManualForm.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/engage/components/AutoAndManualForm.js.map","sourceFileName":"/imports/react-ui/engage/components/AutoAndManualForm.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"AutoAndManualForm"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar Wrapper = void 0;\nmodule.importSync(\"/imports/react-ui/layout/components\", {\n  Wrapper: function (v) {\n    Wrapper = v;\n  }\n}, 1);\nvar FormBase = void 0;\nmodule.importSync(\"./FormBase\", {\n  \"default\": function (v) {\n    FormBase = v;\n  }\n}, 2);\nvar EmailForm = void 0;\nmodule.importSync(\"./EmailForm\", {\n  \"default\": function (v) {\n    EmailForm = v;\n  }\n}, 3);\nvar MessengerForm = void 0;\nmodule.importSync(\"./MessengerForm\", {\n  \"default\": function (v) {\n    MessengerForm = v;\n  }\n}, 4);\nvar Segments = void 0;\nmodule.importSync(\"./Segments\", {\n  \"default\": function (v) {\n    Segments = v;\n  }\n}, 5);\nvar propTypes = {\n  segments: PropTypes.array.isRequired,\n  templates: PropTypes.array,\n  brands: PropTypes.array,\n  counts: PropTypes.object\n}; /*\n    * Base form for Regular auto & manual\n    */\n\nvar AutoAndManualForm = function (_FormBase) {\n  (0, _inherits3.default)(AutoAndManualForm, _FormBase);\n\n  function AutoAndManualForm(props) {\n    (0, _classCallCheck3.default)(this, AutoAndManualForm);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _FormBase.call(this, props));\n\n    var message = props.message || {};\n    _this.state = {\n      emailContent: '',\n      messengerContent: '',\n      method: message.method || 'email',\n      fromUser: message.fromUserId || '',\n      chosenSegment: message.segmentId || ''\n    }; // binds\n\n    _this.onEmailContentChange = _this.onEmailContentChange.bind(_this);\n    _this.onMessengerContentChange = _this.onMessengerContentChange.bind(_this);\n    _this.onChangeSegment = _this.onChangeSegment.bind(_this);\n    return _this;\n  }\n\n  AutoAndManualForm.prototype.generateDoc = function () {\n    function generateDoc(e) {\n      e.preventDefault();\n      var method = this.state.method;\n      var doc = {\n        segmentId: this.state.chosenSegment,\n        title: document.getElementById('title').value,\n        fromUserId: document.getElementById('fromUserId').value,\n        method: method\n      };\n\n      if (this.state.method === 'email') {\n        doc.email = {\n          templateId: document.getElementById('emailTemplateId').value,\n          subject: document.getElementById('emailSubject').value,\n          content: this.state.emailContent\n        };\n      }\n\n      if (this.state.method === 'messenger') {\n        doc.messenger = {\n          brandId: document.getElementById('brandId').value,\n          kind: document.getElementById('messengerKind').value,\n          sentAs: document.getElementById('messengerSentAs').value,\n          content: this.state.messengerContent\n        };\n      }\n\n      return doc;\n    }\n\n    return generateDoc;\n  }();\n\n  AutoAndManualForm.prototype.onEmailContentChange = function () {\n    function onEmailContentChange(content) {\n      this.setState({\n        emailContent: content\n      });\n    }\n\n    return onEmailContentChange;\n  }();\n\n  AutoAndManualForm.prototype.onMessengerContentChange = function () {\n    function onMessengerContentChange(content) {\n      this.setState({\n        messengerContent: content\n      });\n    }\n\n    return onMessengerContentChange;\n  }();\n\n  AutoAndManualForm.prototype.onClickBox = function () {\n    function onClickBox(method) {\n      this.setState({\n        method: method\n      });\n    }\n\n    return onClickBox;\n  }();\n\n  AutoAndManualForm.prototype.onChangeSegment = function () {\n    function onChangeSegment(value) {\n      this.setState({\n        chosenSegment: value\n      });\n    }\n\n    return onChangeSegment;\n  }();\n\n  AutoAndManualForm.prototype.renderChannelType = function () {\n    function renderChannelType() {\n      var _this2 = this;\n\n      var method = this.state.method;\n      var boxClass = 'button-box text-center';\n      return React.createElement(\n        \"div\",\n        {\n          className: \"box\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: boxClass + \" \" + (method === 'email' ? 'selected' : ''),\n            onClick: function () {\n              return _this2.onClickBox('email');\n            }\n          },\n          React.createElement(\n            \"span\",\n            null,\n            \"Email\"\n          ),\n          React.createElement(\n            \"p\",\n            null,\n            \"Delivered to a user's email inbox \",\n            React.createElement(\"br\", null),\n            \"Customize with your own templates\"\n          )\n        ),\n        React.createElement(\n          \"div\",\n          {\n            className: boxClass + \" \" + (method === 'messenger' ? 'selected' : ''),\n            onClick: function () {\n              return _this2.onClickBox('messenger');\n            }\n          },\n          React.createElement(\n            \"span\",\n            null,\n            \"Messenger\"\n          ),\n          React.createElement(\n            \"p\",\n            null,\n            \"Delivered inside your app\",\n            React.createElement(\"br\", null),\n            \"Reach active users\"\n          )\n        )\n      );\n    }\n\n    return renderChannelType;\n  }();\n\n  AutoAndManualForm.prototype.renderSidebarExtra = function () {\n    function renderSidebarExtra() {\n      var message = this.getMessage();\n      var Section = Wrapper.Sidebar.Section;\n      var Title = Wrapper.Sidebar.Section.Title;\n      return React.createElement(\n        \"div\",\n        null,\n        React.createElement(Segments, {\n          segments: this.props.segments,\n          defaultSegment: message.segmentId,\n          onChangeSegments: this.onChangeSegment,\n          counts: this.props.counts\n        }),\n        React.createElement(\n          Section,\n          null,\n          React.createElement(\n            Title,\n            null,\n            \"Channel\"\n          ),\n          this.renderChannelType()\n        )\n      );\n    }\n\n    return renderSidebarExtra;\n  }();\n\n  AutoAndManualForm.prototype.renderContent = function () {\n    function renderContent() {\n      var message = this.getMessage();\n\n      if (this.state.method === 'email') {\n        return React.createElement(EmailForm, {\n          message: message,\n          templates: this.props.templates,\n          onContentChange: this.onEmailContentChange\n        });\n      }\n\n      return React.createElement(MessengerForm, {\n        showMessengerType: true,\n        message: message,\n        fromUser: this.state.fromUser,\n        onContentChange: this.onMessengerContentChange,\n        brands: this.props.brands\n      });\n    }\n\n    return renderContent;\n  }();\n\n  return AutoAndManualForm;\n}(FormBase);\n\nAutoAndManualForm.propTypes = propTypes;\nmodule.export(\"default\", exports.default = AutoAndManualForm);","map":{"version":3,"sources":["/imports/react-ui/engage/components/AutoAndManualForm.js"],"names":["React","PropTypes","module","importSync","v","Wrapper","FormBase","EmailForm","MessengerForm","Segments","propTypes","segments","array","isRequired","templates","brands","counts","object","AutoAndManualForm","props","message","state","emailContent","messengerContent","method","fromUser","fromUserId","chosenSegment","segmentId","onEmailContentChange","bind","onMessengerContentChange","onChangeSegment","generateDoc","e","preventDefault","doc","title","document","getElementById","value","email","templateId","subject","content","messenger","brandId","kind","sentAs","setState","onClickBox","renderChannelType","boxClass","renderSidebarExtra","getMessage","Section","Sidebar","Title","renderContent","export","exports","default"],"mappings":"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","file":"/imports/react-ui/engage/components/AutoAndManualForm.js.map","sourcesContent":["import React, { PropTypes } from 'react';\nimport { Wrapper } from '/imports/react-ui/layout/components';\n\nimport FormBase from './FormBase';\nimport EmailForm from './EmailForm';\nimport MessengerForm from './MessengerForm';\nimport Segments from './Segments';\n\nconst propTypes = {\n  segments: PropTypes.array.isRequired,\n  templates: PropTypes.array,\n  brands: PropTypes.array,\n  counts: PropTypes.object,\n};\n\n/*\n * Base form for Regular auto & manual\n */\n\nclass AutoAndManualForm extends FormBase {\n  constructor(props) {\n    super(props);\n\n    const message = props.message || {};\n\n    this.state = {\n      emailContent: '',\n      messengerContent: '',\n      method: message.method || 'email',\n      fromUser: message.fromUserId || '',\n      chosenSegment: message.segmentId || '',\n    };\n\n    // binds\n    this.onEmailContentChange = this.onEmailContentChange.bind(this);\n    this.onMessengerContentChange = this.onMessengerContentChange.bind(this);\n    this.onChangeSegment = this.onChangeSegment.bind(this);\n  }\n\n  generateDoc(e) {\n    e.preventDefault();\n\n    const method = this.state.method;\n\n    const doc = {\n      segmentId: this.state.chosenSegment,\n      title: document.getElementById('title').value,\n      fromUserId: document.getElementById('fromUserId').value,\n      method,\n    };\n\n    if (this.state.method === 'email') {\n      doc.email = {\n        templateId: document.getElementById('emailTemplateId').value,\n        subject: document.getElementById('emailSubject').value,\n        content: this.state.emailContent,\n      };\n    }\n\n    if (this.state.method === 'messenger') {\n      doc.messenger = {\n        brandId: document.getElementById('brandId').value,\n        kind: document.getElementById('messengerKind').value,\n        sentAs: document.getElementById('messengerSentAs').value,\n        content: this.state.messengerContent,\n      };\n    }\n\n    return doc;\n  }\n\n  onEmailContentChange(content) {\n    this.setState({ emailContent: content });\n  }\n\n  onMessengerContentChange(content) {\n    this.setState({ messengerContent: content });\n  }\n\n  onClickBox(method) {\n    this.setState({ method });\n  }\n\n  onChangeSegment(value) {\n    this.setState({ chosenSegment: value });\n  }\n\n  renderChannelType() {\n    const method = this.state.method;\n    const boxClass = 'button-box text-center';\n\n    return (\n      <div className=\"box\">\n        <div\n          className={`${boxClass} ${method === 'email' ? 'selected' : ''}`}\n          onClick={() => this.onClickBox('email')}\n        >\n          <span>Email</span>\n          <p>\n            Delivered to a user's email inbox <br />Customize with your own templates\n          </p>\n        </div>\n\n        <div\n          className={`${boxClass} ${method === 'messenger' ? 'selected' : ''}`}\n          onClick={() => this.onClickBox('messenger')}\n        >\n          <span>Messenger</span>\n          <p>\n            Delivered inside your app<br />Reach active users\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  renderSidebarExtra() {\n    const message = this.getMessage();\n\n    const { Section } = Wrapper.Sidebar;\n    const { Title } = Wrapper.Sidebar.Section;\n\n    return (\n      <div>\n        <Segments\n          segments={this.props.segments}\n          defaultSegment={message.segmentId}\n          onChangeSegments={this.onChangeSegment}\n          counts={this.props.counts}\n        />\n\n        <Section>\n          <Title>Channel</Title>\n          {this.renderChannelType()}\n        </Section>\n      </div>\n    );\n  }\n\n  renderContent() {\n    const message = this.getMessage();\n\n    if (this.state.method === 'email') {\n      return (\n        <EmailForm\n          message={message}\n          templates={this.props.templates}\n          onContentChange={this.onEmailContentChange}\n        />\n      );\n    }\n\n    return (\n      <MessengerForm\n        showMessengerType\n        message={message}\n        fromUser={this.state.fromUser}\n        onContentChange={this.onMessengerContentChange}\n        brands={this.props.brands}\n      />\n    );\n  }\n}\n\nAutoAndManualForm.propTypes = propTypes;\n\nexport default AutoAndManualForm;\n"]},"hash":"9f9a7ef646d4dababc98e303e2c1412375eaf24a"}
