{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"react-mounter","imported":["mount"],"specifiers":[{"kind":"named","imported":"mount","local":"mount"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/kadira:flow-router","imported":["FlowRouter"],"specifiers":[{"kind":"named","imported":"FlowRouter","local":"FlowRouter"}]},{"source":"./containers","imported":["AuthLayout","NotificationList","MainLayout"],"specifiers":[{"kind":"named","imported":"AuthLayout","local":"AuthLayout"},{"kind":"named","imported":"NotificationList","local":"NotificationList"},{"kind":"named","imported":"MainLayout","local":"MainLayout"}]},{"source":"./components/NotFound","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"NotFound"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/layout/routes.js","filenameRelative":"/imports/react-ui/layout/routes.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/layout/routes.js.map","sourceFileName":"/imports/react-ui/layout/routes.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"routes"},"ignored":false,"code":"var React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar mount = void 0;\nmodule.importSync(\"react-mounter\", {\n  mount: function (v) {\n    mount = v;\n  }\n}, 1);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 2);\nvar FlowRouter = void 0;\nmodule.importSync(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 3);\nvar AuthLayout = void 0,\n    NotificationList = void 0,\n    MainLayout = void 0;\nmodule.importSync(\"./containers\", {\n  AuthLayout: function (v) {\n    AuthLayout = v;\n  },\n  NotificationList: function (v) {\n    NotificationList = v;\n  },\n  MainLayout: function (v) {\n    MainLayout = v;\n  }\n}, 4);\nvar NotFound = void 0;\nmodule.importSync(\"./components/NotFound\", {\n  \"default\": function (v) {\n    NotFound = v;\n  }\n}, 5);\nvar publicRoutes = ['auth/signUp', 'auth/signIn', 'auth/forgotPassword', 'auth/resetPassword'];\n\nfunction checkAuthentication(context, redirect) {\n  if (!Meteor.userId()) {\n    redirect('auth/signIn');\n  }\n}\n\nFlowRouter.triggers.enter([checkAuthentication], {\n  except: publicRoutes\n});\nFlowRouter.notFound = {\n  action: function () {\n    mount(AuthLayout, {\n      content: React.createElement(NotFound, null)\n    });\n  }\n};\nFlowRouter.route('/notifications', {\n  action: function (params, queryParams) {\n    mount(MainLayout, {\n      content: React.createElement(NotificationList, {\n        queryParams: queryParams\n      })\n    });\n  },\n  name: 'notifications'\n});","map":{"version":3,"sources":["/imports/react-ui/layout/routes.js"],"names":["React","module","importSync","v","mount","Meteor","FlowRouter","AuthLayout","NotificationList","MainLayout","NotFound","publicRoutes","checkAuthentication","context","redirect","userId","triggers","enter","except","notFound","action","content","route","params","queryParams","name"],"mappings":"AAAA,IAAIA,cAAJ;AAAUC,OAAOC,UAAP,CAAkB,OAAlB,EAA0B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACH,YAAMG,CAAN;AAAQ;AAA7B,CAA1B,EAAyD,CAAzD;AAA4D,IAAIC,cAAJ;AAAUH,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACE,SAAM,UAASD,CAAT,EAAW;AAACC,YAAMD,CAAN;AAAQ;AAA3B,CAAlC,EAA+D,CAA/D;AAAkE,IAAIE,eAAJ;AAAWJ,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACG,UAAO,UAASF,CAAT,EAAW;AAACE,aAAOF,CAAP;AAAS;AAA7B,CAAlC,EAAiE,CAAjE;AAAoE,IAAIG,mBAAJ;AAAeL,OAAOC,UAAP,CAAkB,2BAAlB,EAA8C;AAACI,cAAW,UAASH,CAAT,EAAW;AAACG,iBAAWH,CAAX;AAAa;AAArC,CAA9C,EAAqF,CAArF;AAAwF,IAAII,mBAAJ;AAAA,IAAeC,yBAAf;AAAA,IAAgCC,mBAAhC;AAA2CR,OAAOC,UAAP,CAAkB,cAAlB,EAAiC;AAACK,cAAW,UAASJ,CAAT,EAAW;AAACI,iBAAWJ,CAAX;AAAa,GAArC;AAAsCK,oBAAiB,UAASL,CAAT,EAAW;AAACK,uBAAiBL,CAAjB;AAAmB,GAAtF;AAAuFM,cAAW,UAASN,CAAT,EAAW;AAACM,iBAAWN,CAAX;AAAa;AAA3H,CAAjC,EAA8J,CAA9J;AAAiK,IAAIO,iBAAJ;AAAaT,OAAOC,UAAP,CAAkB,uBAAlB,EAA0C;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACO,eAASP,CAAT;AAAW;AAAhC,CAA1C,EAA4E,CAA5E;AAOjiB,IAAMQ,eAAe,CAAC,aAAD,EAAgB,aAAhB,EAA+B,qBAA/B,EAAsD,oBAAtD,CAArB;;AAEA,SAASC,mBAAT,CAA6BC,OAA7B,EAAsCC,QAAtC,EAAgD;AAC9C,MAAI,CAACT,OAAOU,MAAP,EAAL,EAAsB;AACpBD,aAAS,aAAT;AACD;AACF;;AAEDR,WAAWU,QAAX,CAAoBC,KAApB,CAA0B,CAACL,mBAAD,CAA1B,EAAiD;AAAEM,UAAQP;AAAV,CAAjD;AAEAL,WAAWa,QAAX,GAAsB;AACpBC,UAAQ,YAAM;AACZhB,UAAMG,UAAN,EAAkB;AAAEc,eAAS,oBAAC,QAAD;AAAX,KAAlB;AACD;AAHmB,CAAtB;AAMAf,WAAWgB,KAAX,CAAiB,gBAAjB,EAAmC;AACjCF,QADiC,YAC1BG,MAD0B,EAClBC,WADkB,EACL;AAC1BpB,UAAMK,UAAN,EAAkB;AAChBY,eAAS,oBAAC,gBAAD;AAAkB,qBAAaG;AAA/B;AADO,KAAlB;AAGD,GALgC;AAMjCC,QAAM;AAN2B,CAAnC","file":"/imports/react-ui/layout/routes.js.map","sourcesContent":["import React from 'react';\nimport { mount } from 'react-mounter';\nimport { Meteor } from 'meteor/meteor';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { AuthLayout, NotificationList, MainLayout } from './containers';\nimport NotFound from './components/NotFound';\n\nconst publicRoutes = ['auth/signUp', 'auth/signIn', 'auth/forgotPassword', 'auth/resetPassword'];\n\nfunction checkAuthentication(context, redirect) {\n  if (!Meteor.userId()) {\n    redirect('auth/signIn');\n  }\n}\n\nFlowRouter.triggers.enter([checkAuthentication], { except: publicRoutes });\n\nFlowRouter.notFound = {\n  action: () => {\n    mount(AuthLayout, { content: <NotFound /> });\n  },\n};\n\nFlowRouter.route('/notifications', {\n  action(params, queryParams) {\n    mount(MainLayout, {\n      content: <NotificationList queryParams={queryParams} />,\n    });\n  },\n  name: 'notifications',\n});\n"]},"hash":"408394474f23ea9891590e50d3944df7791a5ed7"}
