{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","PropTypes","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"PropTypes","local":"PropTypes"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"meteor/kadira:flow-router","imported":["FlowRouter"],"specifiers":[{"kind":"named","imported":"FlowRouter","local":"FlowRouter"}]},{"source":"react-bootstrap","imported":["FormGroup","ControlLabel","FormControl","Radio","Button","Col","Row","ButtonGroup"],"specifiers":[{"kind":"named","imported":"FormGroup","local":"FormGroup"},{"kind":"named","imported":"ControlLabel","local":"ControlLabel"},{"kind":"named","imported":"FormControl","local":"FormControl"},{"kind":"named","imported":"Radio","local":"Radio"},{"kind":"named","imported":"Button","local":"Button"},{"kind":"named","imported":"Col","local":"Col"},{"kind":"named","imported":"Row","local":"Row"},{"kind":"named","imported":"ButtonGroup","local":"ButtonGroup"}]},{"source":"react-select-plus","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Select"}]},{"source":"react-toggle","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Toggle"}]},{"source":"/imports/react-ui/layout/components","imported":["Wrapper"],"specifiers":[{"kind":"named","imported":"Wrapper","local":"Wrapper"}]},{"source":"../../Sidebar","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Sidebar"}]},{"source":"../constants","imported":["timezones"],"specifiers":[{"kind":"named","imported":"timezones","local":"timezones"}]},{"source":"./OnlineHours","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"OnlineHours"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/settings/integrations/components/MessengerConfigs.js","filenameRelative":"/imports/react-ui/settings/integrations/components/MessengerConfigs.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/settings/integrations/components/MessengerConfigs.js.map","sourceFileName":"/imports/react-ui/settings/integrations/components/MessengerConfigs.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"MessengerConfigs"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    PropTypes = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar FlowRouter = void 0;\nmodule.importSync(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 1);\nvar FormGroup = void 0,\n    ControlLabel = void 0,\n    FormControl = void 0,\n    Radio = void 0,\n    Button = void 0,\n    Col = void 0,\n    Row = void 0,\n    ButtonGroup = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  FormGroup: function (v) {\n    FormGroup = v;\n  },\n  ControlLabel: function (v) {\n    ControlLabel = v;\n  },\n  FormControl: function (v) {\n    FormControl = v;\n  },\n  Radio: function (v) {\n    Radio = v;\n  },\n  Button: function (v) {\n    Button = v;\n  },\n  Col: function (v) {\n    Col = v;\n  },\n  Row: function (v) {\n    Row = v;\n  },\n  ButtonGroup: function (v) {\n    ButtonGroup = v;\n  }\n}, 2);\nvar Select = void 0;\nmodule.importSync(\"react-select-plus\", {\n  \"default\": function (v) {\n    Select = v;\n  }\n}, 3);\nvar Toggle = void 0;\nmodule.importSync(\"react-toggle\", {\n  \"default\": function (v) {\n    Toggle = v;\n  }\n}, 4);\nvar Wrapper = void 0;\nmodule.importSync(\"/imports/react-ui/layout/components\", {\n  Wrapper: function (v) {\n    Wrapper = v;\n  }\n}, 5);\nvar Sidebar = void 0;\nmodule.importSync(\"../../Sidebar\", {\n  \"default\": function (v) {\n    Sidebar = v;\n  }\n}, 6);\nvar timezones = void 0;\nmodule.importSync(\"../constants\", {\n  timezones: function (v) {\n    timezones = v;\n  }\n}, 7);\nvar OnlineHours = void 0;\nmodule.importSync(\"./OnlineHours\", {\n  \"default\": function (v) {\n    OnlineHours = v;\n  }\n}, 8);\n\nvar Configs = function (_Component) {\n  (0, _inherits3.default)(Configs, _Component);\n\n  function Configs(props) {\n    (0, _classCallCheck3.default)(this, Configs);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.state = {\n      notifyCustomer: props.prevOptions.notifyCustomer || false,\n      availabilityMethod: props.prevOptions.availabilityMethod || 'manual',\n      isOnline: props.prevOptions.isOnline || false,\n      timezone: props.prevOptions.timezone || '',\n      onlineHours: props.prevOptions.onlineHours || [],\n      welcomeMessage: props.prevOptions.welcomeMessage || '',\n      awayMessage: props.prevOptions.awayMessage || '',\n      thankYouMessage: props.prevOptions.thankYouMessage || ''\n    };\n    _this.save = _this.save.bind(_this);\n    _this.onMethodChange = _this.onMethodChange.bind(_this);\n    _this.onNotifyCustomerChange = _this.onNotifyCustomerChange.bind(_this);\n    _this.onIsOnlineChange = _this.onIsOnlineChange.bind(_this);\n    _this.onTimezoneChange = _this.onTimezoneChange.bind(_this);\n    _this.onOnlineHoursChange = _this.onOnlineHoursChange.bind(_this);\n    _this.onWelcomeMessageChange = _this.onWelcomeMessageChange.bind(_this);\n    _this.onAwayMessageChange = _this.onAwayMessageChange.bind(_this);\n    _this.onThankYouMessageChange = _this.onThankYouMessageChange.bind(_this);\n    return _this;\n  }\n\n  Configs.prototype.onMethodChange = function () {\n    function onMethodChange(e) {\n      this.setState({\n        availabilityMethod: e.target.value\n      });\n    }\n\n    return onMethodChange;\n  }();\n\n  Configs.prototype.onNotifyCustomerChange = function () {\n    function onNotifyCustomerChange(e) {\n      this.setState({\n        notifyCustomer: e.target.checked\n      });\n    }\n\n    return onNotifyCustomerChange;\n  }();\n\n  Configs.prototype.onIsOnlineChange = function () {\n    function onIsOnlineChange(e) {\n      this.setState({\n        isOnline: e.target.checked\n      });\n    }\n\n    return onIsOnlineChange;\n  }();\n\n  Configs.prototype.onTimezoneChange = function () {\n    function onTimezoneChange(e) {\n      this.setState({\n        timezone: e.value\n      });\n    }\n\n    return onTimezoneChange;\n  }();\n\n  Configs.prototype.onOnlineHoursChange = function () {\n    function onOnlineHoursChange(onlineHours) {\n      this.setState({\n        onlineHours: onlineHours\n      });\n    }\n\n    return onOnlineHoursChange;\n  }();\n\n  Configs.prototype.onWelcomeMessageChange = function () {\n    function onWelcomeMessageChange(e) {\n      this.setState({\n        welcomeMessage: e.target.value\n      });\n    }\n\n    return onWelcomeMessageChange;\n  }();\n\n  Configs.prototype.onAwayMessageChange = function () {\n    function onAwayMessageChange(e) {\n      this.setState({\n        awayMessage: e.target.value\n      });\n    }\n\n    return onAwayMessageChange;\n  }();\n\n  Configs.prototype.onThankYouMessageChange = function () {\n    function onThankYouMessageChange(e) {\n      this.setState({\n        thankYouMessage: e.target.value\n      });\n    }\n\n    return onThankYouMessageChange;\n  }();\n\n  Configs.prototype.save = function () {\n    function save(e) {\n      e.preventDefault();\n      this.props.save(this.state);\n    }\n\n    return save;\n  }();\n\n  Configs.prototype.renderOnlineHours = function () {\n    function renderOnlineHours() {\n      if (this.state.availabilityMethod === 'manual') {\n        return null;\n      }\n\n      return React.createElement(OnlineHours, {\n        prevOptions: this.props.prevOptions.onlineHours,\n        onChange: this.onOnlineHoursChange\n      });\n    }\n\n    return renderOnlineHours;\n  }();\n\n  Configs.prototype.renderIsOnline = function () {\n    function renderIsOnline() {\n      if (this.state.availabilityMethod === 'auto') {\n        return null;\n      }\n\n      return React.createElement(\n        \"div\",\n        {\n          className: \"flex-inline\"\n        },\n        React.createElement(Toggle, {\n          className: \"wide\",\n          checked: this.state.isOnline,\n          onChange: this.onIsOnlineChange,\n          icons: {\n            checked: React.createElement(\n              \"span\",\n              null,\n              \"Yes\"\n            ),\n            unchecked: React.createElement(\n              \"span\",\n              null,\n              \"No\"\n            )\n          }\n        }),\n        React.createElement(\n          \"span\",\n          null,\n          \"Is online\"\n        )\n      );\n    }\n\n    return renderIsOnline;\n  }();\n\n  Configs.prototype.render = function () {\n    function render() {\n      var content = React.createElement(\n        \"div\",\n        {\n          className: \"margined type-box\"\n        },\n        React.createElement(\n          Row,\n          null,\n          React.createElement(\n            Col,\n            {\n              md: 5\n            },\n            React.createElement(\n              \"h2\",\n              null,\n              \"Online messaging\"\n            ),\n            React.createElement(\n              FormGroup,\n              null,\n              React.createElement(\n                ControlLabel,\n                null,\n                \"Welcome message\"\n              ),\n              React.createElement(FormControl, {\n                componentClass: \"textarea\",\n                rows: 3,\n                value: this.state.welcomeMessage,\n                onChange: this.onWelcomeMessageChange\n              })\n            ),\n            React.createElement(\n              \"h2\",\n              null,\n              \"Offline messaging\"\n            ),\n            React.createElement(\n              FormGroup,\n              null,\n              React.createElement(\n                ControlLabel,\n                null,\n                \"Away message\"\n              ),\n              React.createElement(FormControl, {\n                componentClass: \"textarea\",\n                rows: 3,\n                value: this.state.awayMessage,\n                onChange: this.onAwayMessageChange\n              })\n            ),\n            React.createElement(\n              FormGroup,\n              null,\n              React.createElement(\n                ControlLabel,\n                null,\n                \"Thank you message\"\n              ),\n              React.createElement(FormControl, {\n                componentClass: \"textarea\",\n                rows: 3,\n                value: this.state.thankYouMessage,\n                onChange: this.onThankYouMessageChange\n              })\n            )\n          ),\n          React.createElement(\n            Col,\n            {\n              md: 7\n            },\n            React.createElement(\n              \"h2\",\n              null,\n              \"Hours & Availability\"\n            ),\n            React.createElement(\n              FormGroup,\n              null,\n              React.createElement(\n                Radio,\n                {\n                  name: \"method\",\n                  value: \"manual\",\n                  checked: this.state.availabilityMethod === 'manual',\n                  onChange: this.onMethodChange,\n                  inline: true\n                },\n                \"Turn online/offline manually\"\n              ),\n              React.createElement(\n                Radio,\n                {\n                  name: \"method\",\n                  value: \"auto\",\n                  checked: this.state.availabilityMethod === 'auto',\n                  onChange: this.onMethodChange,\n                  inline: true\n                },\n                \"Set to follow your schedule\"\n              )\n            ),\n            this.renderIsOnline(),\n            this.renderOnlineHours(),\n            React.createElement(\n              FormGroup,\n              null,\n              React.createElement(\n                ControlLabel,\n                null,\n                \"Time zone\"\n              ),\n              React.createElement(Select, {\n                value: this.state.timezone,\n                options: timezones,\n                onChange: this.onTimezoneChange,\n                clearable: false\n              })\n            )\n          ),\n          React.createElement(\n            Col,\n            {\n              md: 7\n            },\n            React.createElement(\n              \"h2\",\n              null,\n              \"Other configs\"\n            ),\n            React.createElement(\n              \"div\",\n              {\n                className: \"flex-inline\"\n              },\n              React.createElement(Toggle, {\n                className: \"wide\",\n                checked: this.state.notifyCustomer,\n                onChange: this.onNotifyCustomerChange,\n                icons: {\n                  checked: React.createElement(\n                    \"span\",\n                    null,\n                    \"Yes\"\n                  ),\n                  unchecked: React.createElement(\n                    \"span\",\n                    null,\n                    \"No\"\n                  )\n                }\n              }),\n              React.createElement(\n                \"span\",\n                null,\n                \"Notify customer\"\n              )\n            )\n          )\n        )\n      );\n      var breadcrumb = [{\n        title: 'Settings',\n        link: '/settings/integrations'\n      }, {\n        title: 'Integrations'\n      }];\n      var actionBar = React.createElement(Wrapper.ActionBar, {\n        left: React.createElement(\n          ButtonGroup,\n          null,\n          React.createElement(\n            Button,\n            {\n              bsStyle: \"link\",\n              onClick: this.save\n            },\n            React.createElement(\"i\", {\n              className: \"ion-checkmark-circled\"\n            }),\n            \" Save\"\n          ),\n          React.createElement(\n            Button,\n            {\n              bsStyle: \"link\",\n              href: FlowRouter.path('/settings/integrations')\n            },\n            React.createElement(\"i\", {\n              className: \"ion-close-circled\"\n            }),\n            \" Cancel\"\n          )\n        )\n      });\n      return React.createElement(\n        \"div\",\n        null,\n        React.createElement(Wrapper, {\n          header: React.createElement(Wrapper.Header, {\n            breadcrumb: breadcrumb\n          }),\n          leftSidebar: React.createElement(Sidebar, null),\n          actionBar: actionBar,\n          content: content\n        })\n      );\n    }\n\n    return render;\n  }();\n\n  return Configs;\n}(Component);\n\nConfigs.propTypes = {\n  prevOptions: PropTypes.object.isRequired,\n  // eslint-disable-line\n  save: PropTypes.func.isRequired\n};\nmodule.export(\"default\", exports.default = Configs);","map":{"version":3,"sources":["/imports/react-ui/settings/integrations/components/MessengerConfigs.js"],"names":["React","PropTypes","Component","module","importSync","v","FlowRouter","FormGroup","ControlLabel","FormControl","Radio","Button","Col","Row","ButtonGroup","Select","Toggle","Wrapper","Sidebar","timezones","OnlineHours","Configs","props","state","notifyCustomer","prevOptions","availabilityMethod","isOnline","timezone","onlineHours","welcomeMessage","awayMessage","thankYouMessage","save","bind","onMethodChange","onNotifyCustomerChange","onIsOnlineChange","onTimezoneChange","onOnlineHoursChange","onWelcomeMessageChange","onAwayMessageChange","onThankYouMessageChange","e","setState","target","value","checked","preventDefault","renderOnlineHours","renderIsOnline","unchecked","render","content","breadcrumb","title","link","actionBar","path","propTypes","object","isRequired","func","export","exports","default"],"mappings":";;;;;;;;;;;;;;AAAA,IAAIA,cAAJ;AAAA,IAAUC,kBAAV;AAAA,IAAoBC,kBAApB;AAA8BC,OAAOC,UAAP,CAAkB,OAAlB,EAA0B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACL,YAAMK,CAAN;AAAQ,GAA7B;AAA8BJ,aAAU,UAASI,CAAT,EAAW;AAACJ,gBAAUI,CAAV;AAAY,GAAhE;AAAiEH,aAAU,UAASG,CAAT,EAAW;AAACH,gBAAUG,CAAV;AAAY;AAAnG,CAA1B,EAA+H,CAA/H;AAAkI,IAAIC,mBAAJ;AAAeH,OAAOC,UAAP,CAAkB,2BAAlB,EAA8C;AAACE,cAAW,UAASD,CAAT,EAAW;AAACC,iBAAWD,CAAX;AAAa;AAArC,CAA9C,EAAqF,CAArF;AAAwF,IAAIE,kBAAJ;AAAA,IAAcC,qBAAd;AAAA,IAA2BC,oBAA3B;AAAA,IAAuCC,cAAvC;AAAA,IAA6CC,eAA7C;AAAA,IAAoDC,YAApD;AAAA,IAAwDC,YAAxD;AAAA,IAA4DC,oBAA5D;AAAwEX,OAAOC,UAAP,CAAkB,iBAAlB,EAAoC;AAACG,aAAU,UAASF,CAAT,EAAW;AAACE,gBAAUF,CAAV;AAAY,GAAnC;AAAoCG,gBAAa,UAASH,CAAT,EAAW;AAACG,mBAAaH,CAAb;AAAe,GAA5E;AAA6EI,eAAY,UAASJ,CAAT,EAAW;AAACI,kBAAYJ,CAAZ;AAAc,GAAnH;AAAoHK,SAAM,UAASL,CAAT,EAAW;AAACK,YAAML,CAAN;AAAQ,GAA9I;AAA+IM,UAAO,UAASN,CAAT,EAAW;AAACM,aAAON,CAAP;AAAS,GAA3K;AAA4KO,OAAI,UAASP,CAAT,EAAW;AAACO,UAAIP,CAAJ;AAAM,GAAlM;AAAmMQ,OAAI,UAASR,CAAT,EAAW;AAACQ,UAAIR,CAAJ;AAAM,GAAzN;AAA0NS,eAAY,UAAST,CAAT,EAAW;AAACS,kBAAYT,CAAZ;AAAc;AAAhQ,CAApC,EAAsS,CAAtS;AAAyS,IAAIU,eAAJ;AAAWZ,OAAOC,UAAP,CAAkB,mBAAlB,EAAsC;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACU,aAAOV,CAAP;AAAS;AAA9B,CAAtC,EAAsE,CAAtE;AAAyE,IAAIW,eAAJ;AAAWb,OAAOC,UAAP,CAAkB,cAAlB,EAAiC;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACW,aAAOX,CAAP;AAAS;AAA9B,CAAjC,EAAiE,CAAjE;AAAoE,IAAIY,gBAAJ;AAAYd,OAAOC,UAAP,CAAkB,qCAAlB,EAAwD;AAACa,WAAQ,UAASZ,CAAT,EAAW;AAACY,cAAQZ,CAAR;AAAU;AAA/B,CAAxD,EAAyF,CAAzF;AAA4F,IAAIa,gBAAJ;AAAYf,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACa,cAAQb,CAAR;AAAU;AAA/B,CAAlC,EAAmE,CAAnE;AAAsE,IAAIc,kBAAJ;AAAchB,OAAOC,UAAP,CAAkB,cAAlB,EAAiC;AAACe,aAAU,UAASd,CAAT,EAAW;AAACc,gBAAUd,CAAV;AAAY;AAAnC,CAAjC,EAAsE,CAAtE;AAAyE,IAAIe,oBAAJ;AAAgBjB,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACe,kBAAYf,CAAZ;AAAc;AAAnC,CAAlC,EAAuE,CAAvE;;IAmBtjCgB,O;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA,+DACjB,sBAAMA,KAAN,CADiB;;AAGjB,UAAKC,KAAL,GAAa;AACXC,sBAAgBF,MAAMG,WAAN,CAAkBD,cAAlB,IAAoC,KADzC;AAEXE,0BAAoBJ,MAAMG,WAAN,CAAkBC,kBAAlB,IAAwC,QAFjD;AAGXC,gBAAUL,MAAMG,WAAN,CAAkBE,QAAlB,IAA8B,KAH7B;AAIXC,gBAAUN,MAAMG,WAAN,CAAkBG,QAAlB,IAA8B,EAJ7B;AAKXC,mBAAaP,MAAMG,WAAN,CAAkBI,WAAlB,IAAiC,EALnC;AAMXC,sBAAgBR,MAAMG,WAAN,CAAkBK,cAAlB,IAAoC,EANzC;AAOXC,mBAAaT,MAAMG,WAAN,CAAkBM,WAAlB,IAAiC,EAPnC;AAQXC,uBAAiBV,MAAMG,WAAN,CAAkBO,eAAlB,IAAqC;AAR3C,KAAb;AAWA,UAAKC,IAAL,GAAY,MAAKA,IAAL,CAAUC,IAAV,OAAZ;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,OAAtB;AACA,UAAKE,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BF,IAA5B,OAA9B;AACA,UAAKG,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBH,IAAtB,OAAxB;AACA,UAAKI,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBJ,IAAtB,OAAxB;AACA,UAAKK,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBL,IAAzB,OAA3B;AACA,UAAKM,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BN,IAA5B,OAA9B;AACA,UAAKO,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBP,IAAzB,OAA3B;AACA,UAAKQ,uBAAL,GAA+B,MAAKA,uBAAL,CAA6BR,IAA7B,OAA/B;AAtBiB;AAuBlB;;oBAEDC,c;4BAAeQ,C,EAAG;AAChB,WAAKC,QAAL,CAAc;AAAElB,4BAAoBiB,EAAEE,MAAF,CAASC;AAA/B,OAAd;AACD;;;;;oBAEDV,sB;oCAAuBO,C,EAAG;AACxB,WAAKC,QAAL,CAAc;AAAEpB,wBAAgBmB,EAAEE,MAAF,CAASE;AAA3B,OAAd;AACD;;;;;oBAEDV,gB;8BAAiBM,C,EAAG;AAClB,WAAKC,QAAL,CAAc;AAAEjB,kBAAUgB,EAAEE,MAAF,CAASE;AAArB,OAAd;AACD;;;;;oBAEDT,gB;8BAAiBK,C,EAAG;AAClB,WAAKC,QAAL,CAAc;AAAEhB,kBAAUe,EAAEG;AAAd,OAAd;AACD;;;;;oBAEDP,mB;iCAAoBV,W,EAAa;AAC/B,WAAKe,QAAL,CAAc;AAAEf;AAAF,OAAd;AACD;;;;;oBAEDW,sB;oCAAuBG,C,EAAG;AACxB,WAAKC,QAAL,CAAc;AAAEd,wBAAgBa,EAAEE,MAAF,CAASC;AAA3B,OAAd;AACD;;;;;oBAEDL,mB;iCAAoBE,C,EAAG;AACrB,WAAKC,QAAL,CAAc;AAAEb,qBAAaY,EAAEE,MAAF,CAASC;AAAxB,OAAd;AACD;;;;;oBAEDJ,uB;qCAAwBC,C,EAAG;AACzB,WAAKC,QAAL,CAAc;AAAEZ,yBAAiBW,EAAEE,MAAF,CAASC;AAA5B,OAAd;AACD;;;;;oBAEDb,I;kBAAKU,C,EAAG;AACNA,QAAEK,cAAF;AAEA,WAAK1B,KAAL,CAAWW,IAAX,CAAgB,KAAKV,KAArB;AACD;;;;;oBAED0B,iB;iCAAoB;AAClB,UAAI,KAAK1B,KAAL,CAAWG,kBAAX,KAAkC,QAAtC,EAAgD;AAC9C,eAAO,IAAP;AACD;;AAED,aACE,oBAAC,WAAD;AACE,qBAAa,KAAKJ,KAAL,CAAWG,WAAX,CAAuBI,WADtC;AAEE,kBAAU,KAAKU;AAFjB,QADF;AAMD;;;;;oBAEDW,c;8BAAiB;AACf,UAAI,KAAK3B,KAAL,CAAWG,kBAAX,KAAkC,MAAtC,EAA8C;AAC5C,eAAO,IAAP;AACD;;AAED,aACE;AAAA;AAAA;AAAK,qBAAU;AAAf;AACE,4BAAC,MAAD;AACE,qBAAU,MADZ;AAEE,mBAAS,KAAKH,KAAL,CAAWI,QAFtB;AAGE,oBAAU,KAAKU,gBAHjB;AAIE,iBAAO;AACLU,qBAAS;AAAA;AAAA;AAAA;AAAA,aADJ;AAELI,uBAAW;AAAA;AAAA;AAAA;AAAA;AAFN;AAJT,UADF;AAUE;AAAA;AAAA;AAAA;AAAA;AAVF,OADF;AAcD;;;;;oBAEDC,M;sBAAS;AACP,UAAMC,UACJ;AAAA;AAAA;AAAK,qBAAU;AAAf;AACE;AAAC,aAAD;AAAA;AACE;AAAC,eAAD;AAAA;AAAK,kBAAI;AAAT;AACE;AAAA;AAAA;AAAA;AAAA,aADF;AAGE;AAAC,uBAAD;AAAA;AACE;AAAC,4BAAD;AAAA;AAAA;AAAA,eADF;AAGE,kCAAC,WAAD;AACE,gCAAe,UADjB;AAEE,sBAAM,CAFR;AAGE,uBAAO,KAAK9B,KAAL,CAAWO,cAHpB;AAIE,0BAAU,KAAKU;AAJjB;AAHF,aAHF;AAcE;AAAA;AAAA;AAAA;AAAA,aAdF;AAgBE;AAAC,uBAAD;AAAA;AACE;AAAC,4BAAD;AAAA;AAAA;AAAA,eADF;AAGE,kCAAC,WAAD;AACE,gCAAe,UADjB;AAEE,sBAAM,CAFR;AAGE,uBAAO,KAAKjB,KAAL,CAAWQ,WAHpB;AAIE,0BAAU,KAAKU;AAJjB;AAHF,aAhBF;AA2BE;AAAC,uBAAD;AAAA;AACE;AAAC,4BAAD;AAAA;AAAA;AAAA,eADF;AAGE,kCAAC,WAAD;AACE,gCAAe,UADjB;AAEE,sBAAM,CAFR;AAGE,uBAAO,KAAKlB,KAAL,CAAWS,eAHpB;AAIE,0BAAU,KAAKU;AAJjB;AAHF;AA3BF,WADF;AAuCE;AAAC,eAAD;AAAA;AAAK,kBAAI;AAAT;AACE;AAAA;AAAA;AAAA;AAAA,aADF;AAEE;AAAC,uBAAD;AAAA;AACE;AAAC,qBAAD;AAAA;AACE,wBAAK,QADP;AAEE,yBAAM,QAFR;AAGE,2BAAS,KAAKnB,KAAL,CAAWG,kBAAX,KAAkC,QAH7C;AAIE,4BAAU,KAAKS,cAJjB;AAKE;AALF;AAAA;AAAA,eADF;AAWE;AAAC,qBAAD;AAAA;AACE,wBAAK,QADP;AAEE,yBAAM,MAFR;AAGE,2BAAS,KAAKZ,KAAL,CAAWG,kBAAX,KAAkC,MAH7C;AAIE,4BAAU,KAAKS,cAJjB;AAKE;AALF;AAAA;AAAA;AAXF,aAFF;AAwBG,iBAAKe,cAAL,EAxBH;AAyBG,iBAAKD,iBAAL,EAzBH;AA2BE;AAAC,uBAAD;AAAA;AACE;AAAC,4BAAD;AAAA;AAAA;AAAA,eADF;AAGE,kCAAC,MAAD;AACE,uBAAO,KAAK1B,KAAL,CAAWK,QADpB;AAEE,yBAAST,SAFX;AAGE,0BAAU,KAAKmB,gBAHjB;AAIE,2BAAW;AAJb;AAHF;AA3BF,WAvCF;AA8EE;AAAC,eAAD;AAAA;AAAK,kBAAI;AAAT;AACE;AAAA;AAAA;AAAA;AAAA,aADF;AAGE;AAAA;AAAA;AAAK,2BAAU;AAAf;AACE,kCAAC,MAAD;AACE,2BAAU,MADZ;AAEE,yBAAS,KAAKf,KAAL,CAAWC,cAFtB;AAGE,0BAAU,KAAKY,sBAHjB;AAIE,uBAAO;AACLW,2BAAS;AAAA;AAAA;AAAA;AAAA,mBADJ;AAELI,6BAAW;AAAA;AAAA;AAAA;AAAA;AAFN;AAJT,gBADF;AAUE;AAAA;AAAA;AAAA;AAAA;AAVF;AAHF;AA9EF;AADF,OADF;AAoGA,UAAMG,aAAa,CACjB;AAAEC,eAAO,UAAT;AAAqBC,cAAM;AAA3B,OADiB,EAEjB;AAAED,eAAO;AAAT,OAFiB,CAAnB;AAKA,UAAME,YACJ,oBAAC,OAAD,CAAS,SAAT;AACE,cACE;AAAC,qBAAD;AAAA;AACE;AAAC,kBAAD;AAAA;AAAQ,uBAAQ,MAAhB;AAAuB,uBAAS,KAAKxB;AAArC;AACE;AAAG,yBAAU;AAAb,cADF;AAAA;AAAA,WADF;AAKE;AAAC,kBAAD;AAAA;AAAQ,uBAAQ,MAAhB;AAAuB,oBAAM3B,WAAWoD,IAAX,CAAgB,wBAAhB;AAA7B;AACE;AAAG,yBAAU;AAAb,cADF;AAAA;AAAA;AALF;AAFJ,QADF;AAgBA,aACE;AAAA;AAAA;AACE,4BAAC,OAAD;AACE,kBAAQ,oBAAC,OAAD,CAAS,MAAT;AAAgB,wBAAYJ;AAA5B,YADV;AAEE,uBAAa,oBAAC,OAAD,OAFf;AAGE,qBAAWG,SAHb;AAIE,mBAASJ;AAJX;AADF,OADF;AAUD;;;;;;EAtOmBnD,S;;AAyOtBmB,QAAQsC,SAAR,GAAoB;AAClBlC,eAAaxB,UAAU2D,MAAV,CAAiBC,UADZ;AACwB;AAC1C5B,QAAMhC,UAAU6D,IAAV,CAAeD;AAFH,CAApB;AA5PA1D,OAAO4D,MAAP,CAAc,SAAd,EAAwBC,QAAQC,OAAR,GAiQT5C,OAjQf","file":"/imports/react-ui/settings/integrations/components/MessengerConfigs.js.map","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport {\n  FormGroup,\n  ControlLabel,\n  FormControl,\n  Radio,\n  Button,\n  Col,\n  Row,\n  ButtonGroup,\n} from 'react-bootstrap';\nimport Select from 'react-select-plus';\nimport Toggle from 'react-toggle';\nimport { Wrapper } from '/imports/react-ui/layout/components';\nimport Sidebar from '../../Sidebar';\nimport { timezones } from '../constants';\nimport OnlineHours from './OnlineHours';\n\nclass Configs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      notifyCustomer: props.prevOptions.notifyCustomer || false,\n      availabilityMethod: props.prevOptions.availabilityMethod || 'manual',\n      isOnline: props.prevOptions.isOnline || false,\n      timezone: props.prevOptions.timezone || '',\n      onlineHours: props.prevOptions.onlineHours || [],\n      welcomeMessage: props.prevOptions.welcomeMessage || '',\n      awayMessage: props.prevOptions.awayMessage || '',\n      thankYouMessage: props.prevOptions.thankYouMessage || '',\n    };\n\n    this.save = this.save.bind(this);\n    this.onMethodChange = this.onMethodChange.bind(this);\n    this.onNotifyCustomerChange = this.onNotifyCustomerChange.bind(this);\n    this.onIsOnlineChange = this.onIsOnlineChange.bind(this);\n    this.onTimezoneChange = this.onTimezoneChange.bind(this);\n    this.onOnlineHoursChange = this.onOnlineHoursChange.bind(this);\n    this.onWelcomeMessageChange = this.onWelcomeMessageChange.bind(this);\n    this.onAwayMessageChange = this.onAwayMessageChange.bind(this);\n    this.onThankYouMessageChange = this.onThankYouMessageChange.bind(this);\n  }\n\n  onMethodChange(e) {\n    this.setState({ availabilityMethod: e.target.value });\n  }\n\n  onNotifyCustomerChange(e) {\n    this.setState({ notifyCustomer: e.target.checked });\n  }\n\n  onIsOnlineChange(e) {\n    this.setState({ isOnline: e.target.checked });\n  }\n\n  onTimezoneChange(e) {\n    this.setState({ timezone: e.value });\n  }\n\n  onOnlineHoursChange(onlineHours) {\n    this.setState({ onlineHours });\n  }\n\n  onWelcomeMessageChange(e) {\n    this.setState({ welcomeMessage: e.target.value });\n  }\n\n  onAwayMessageChange(e) {\n    this.setState({ awayMessage: e.target.value });\n  }\n\n  onThankYouMessageChange(e) {\n    this.setState({ thankYouMessage: e.target.value });\n  }\n\n  save(e) {\n    e.preventDefault();\n\n    this.props.save(this.state);\n  }\n\n  renderOnlineHours() {\n    if (this.state.availabilityMethod === 'manual') {\n      return null;\n    }\n\n    return (\n      <OnlineHours\n        prevOptions={this.props.prevOptions.onlineHours}\n        onChange={this.onOnlineHoursChange}\n      />\n    );\n  }\n\n  renderIsOnline() {\n    if (this.state.availabilityMethod === 'auto') {\n      return null;\n    }\n\n    return (\n      <div className=\"flex-inline\">\n        <Toggle\n          className=\"wide\"\n          checked={this.state.isOnline}\n          onChange={this.onIsOnlineChange}\n          icons={{\n            checked: <span>Yes</span>,\n            unchecked: <span>No</span>,\n          }}\n        />\n        <span>Is online</span>\n      </div>\n    );\n  }\n\n  render() {\n    const content = (\n      <div className=\"margined type-box\">\n        <Row>\n          <Col md={5}>\n            <h2>Online messaging</h2>\n\n            <FormGroup>\n              <ControlLabel>Welcome message</ControlLabel>\n\n              <FormControl\n                componentClass=\"textarea\"\n                rows={3}\n                value={this.state.welcomeMessage}\n                onChange={this.onWelcomeMessageChange}\n              />\n            </FormGroup>\n\n            <h2>Offline messaging</h2>\n\n            <FormGroup>\n              <ControlLabel>Away message</ControlLabel>\n\n              <FormControl\n                componentClass=\"textarea\"\n                rows={3}\n                value={this.state.awayMessage}\n                onChange={this.onAwayMessageChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <ControlLabel>Thank you message</ControlLabel>\n\n              <FormControl\n                componentClass=\"textarea\"\n                rows={3}\n                value={this.state.thankYouMessage}\n                onChange={this.onThankYouMessageChange}\n              />\n            </FormGroup>\n          </Col>\n          <Col md={7}>\n            <h2>Hours & Availability</h2>\n            <FormGroup>\n              <Radio\n                name=\"method\"\n                value=\"manual\"\n                checked={this.state.availabilityMethod === 'manual'}\n                onChange={this.onMethodChange}\n                inline\n              >\n                Turn online/offline manually\n              </Radio>\n\n              <Radio\n                name=\"method\"\n                value=\"auto\"\n                checked={this.state.availabilityMethod === 'auto'}\n                onChange={this.onMethodChange}\n                inline\n              >\n                Set to follow your schedule\n              </Radio>\n            </FormGroup>\n\n            {this.renderIsOnline()}\n            {this.renderOnlineHours()}\n\n            <FormGroup>\n              <ControlLabel>Time zone</ControlLabel>\n\n              <Select\n                value={this.state.timezone}\n                options={timezones}\n                onChange={this.onTimezoneChange}\n                clearable={false}\n              />\n            </FormGroup>\n          </Col>\n\n          <Col md={7}>\n            <h2>Other configs</h2>\n\n            <div className=\"flex-inline\">\n              <Toggle\n                className=\"wide\"\n                checked={this.state.notifyCustomer}\n                onChange={this.onNotifyCustomerChange}\n                icons={{\n                  checked: <span>Yes</span>,\n                  unchecked: <span>No</span>,\n                }}\n              />\n              <span>Notify customer</span>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n\n    const breadcrumb = [\n      { title: 'Settings', link: '/settings/integrations' },\n      { title: 'Integrations' },\n    ];\n\n    const actionBar = (\n      <Wrapper.ActionBar\n        left={\n          <ButtonGroup>\n            <Button bsStyle=\"link\" onClick={this.save}>\n              <i className=\"ion-checkmark-circled\" /> Save\n            </Button>\n\n            <Button bsStyle=\"link\" href={FlowRouter.path('/settings/integrations')}>\n              <i className=\"ion-close-circled\" /> Cancel\n            </Button>\n          </ButtonGroup>\n        }\n      />\n    );\n\n    return (\n      <div>\n        <Wrapper\n          header={<Wrapper.Header breadcrumb={breadcrumb} />}\n          leftSidebar={<Sidebar />}\n          actionBar={actionBar}\n          content={content}\n        />\n      </div>\n    );\n  }\n}\n\nConfigs.propTypes = {\n  prevOptions: PropTypes.object.isRequired, // eslint-disable-line\n  save: PropTypes.func.isRequired,\n};\n\nexport default Configs;\n"]},"hash":"c94b79c9fe4ec31608146035ab247fd98bfb03a3"}
