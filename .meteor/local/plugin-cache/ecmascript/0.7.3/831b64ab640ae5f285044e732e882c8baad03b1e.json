{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":["customers","customerCounts","customerDetail","segments","brands","tags","totalCustomersCount"],"specifiers":[{"kind":"local","local":"customers","exported":"customers"},{"kind":"local","local":"customerCounts","exported":"customerCounts"},{"kind":"local","local":"customerDetail","exported":"customerDetail"},{"kind":"local","local":"segments","exported":"segments"},{"kind":"local","local":"brands","exported":"brands"},{"kind":"local","local":"tags","exported":"tags"},{"kind":"local","local":"totalCustomersCount","exported":"totalCustomersCount"}]}}},"options":{"filename":"/imports/react-ui/customers/graphql/queries.js","filenameRelative":"/imports/react-ui/customers/graphql/queries.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/customers/graphql/queries.js.map","sourceFileName":"/imports/react-ui/customers/graphql/queries.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"queries"},"ignored":false,"code":"module.export({\n  customers: function () {\n    return customers;\n  },\n  customerCounts: function () {\n    return customerCounts;\n  },\n  customerDetail: function () {\n    return customerDetail;\n  },\n  segments: function () {\n    return segments;\n  },\n  brands: function () {\n    return brands;\n  },\n  tags: function () {\n    return tags;\n  },\n  totalCustomersCount: function () {\n    return totalCustomersCount;\n  }\n});\nvar customerFields = \"\\n    _id\\n    name\\n    email\\n    phone\\n    isUser\\n    integrationId\\n    createdAt\\n    messengerData\\n    twitterData\\n    facebookData\\n    tagIds\\n    internalNotes\\n    getTags {\\n      _id\\n      name\\n    }\\n\";\nvar customers = \"\\n  query customers($params: CustomerListParams) {\\n    customers(params: $params) {\\n      \" + customerFields + \"\\n    }\\n  }\\n\";\nvar customerCounts = \"\\n  query customerCounts($params: CustomerListParams) {\\n    customerCounts(params: $params)\\n  }\\n\";\nvar customerDetail = \"\\n  query customerDetail($_id: String!) {\\n    customerDetail(_id: $_id) {\\n      \" + customerFields + \"\\n      conversations {\\n        _id\\n        content\\n        tags {\\n          _id\\n          name\\n        }\\n      }\\n    }\\n  }\\n\";\nvar segmentFields = \"\\n  _id\\n  name\\n  description\\n  subOf\\n  color\\n  connector\\n  conditions\\n\";\nvar segments = \"\\n  query segments {\\n    segments {\\n      \" + segmentFields + \"\\n\\n      getSubSegments {\\n        \" + segmentFields + \"\\n      }\\n    }\\n  }\\n\";\nvar brands = \"\\n  query brands {\\n    brands {\\n      _id\\n      name\\n    }\\n  }\\n\";\nvar tags = \"\\n  query tags($type: String) {\\n    tags(type: $type) {\\n      _id\\n      name\\n      colorCode\\n    }\\n  }\\n\";\nvar totalCustomersCount = \"\\n  query totalCustomersCount {\\n    customersTotalCount\\n  }\\n\";","map":{"version":3,"sources":["/imports/react-ui/customers/graphql/queries.js"],"names":["module","export","customers","customerCounts","customerDetail","segments","brands","tags","totalCustomersCount","customerFields","segmentFields"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,aAAU;AAAA,WAAIA,SAAJ;AAAA,GAAX;AAAyBC,kBAAe;AAAA,WAAIA,cAAJ;AAAA,GAAxC;AAA2DC,kBAAe;AAAA,WAAIA,cAAJ;AAAA,GAA1E;AAA6FC,YAAS;AAAA,WAAIA,QAAJ;AAAA,GAAtG;AAAmHC,UAAO;AAAA,WAAIA,MAAJ;AAAA,GAA1H;AAAqIC,QAAK;AAAA,WAAIA,IAAJ;AAAA,GAA1I;AAAmJC,uBAAoB;AAAA,WAAIA,mBAAJ;AAAA;AAAvK,CAAd;AAAA,IAAMC,8OAAN;AAmBO,IAAMP,6GAGLO,cAHK,mBAAN;AAQA,IAAMN,sHAAN;AAMA,IAAMC,wGAGLK,cAHK,2IAAN;AAgBP,IAAMC,+FAAN;AAUO,IAAML,4DAGLK,aAHK,4CAMHA,aANG,4BAAN;AAYA,IAAMJ,gFAAN;AASA,IAAMC,uHAAN;AAUA,IAAMC,uFAAN","file":"/imports/react-ui/customers/graphql/queries.js.map","sourcesContent":["const customerFields = `\n    _id\n    name\n    email\n    phone\n    isUser\n    integrationId\n    createdAt\n    messengerData\n    twitterData\n    facebookData\n    tagIds\n    internalNotes\n    getTags {\n      _id\n      name\n    }\n`;\n\nexport const customers = `\n  query customers($params: CustomerListParams) {\n    customers(params: $params) {\n      ${customerFields}\n    }\n  }\n`;\n\nexport const customerCounts = `\n  query customerCounts($params: CustomerListParams) {\n    customerCounts(params: $params)\n  }\n`;\n\nexport const customerDetail = `\n  query customerDetail($_id: String!) {\n    customerDetail(_id: $_id) {\n      ${customerFields}\n      conversations {\n        _id\n        content\n        tags {\n          _id\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst segmentFields = `\n  _id\n  name\n  description\n  subOf\n  color\n  connector\n  conditions\n`;\n\nexport const segments = `\n  query segments {\n    segments {\n      ${segmentFields}\n\n      getSubSegments {\n        ${segmentFields}\n      }\n    }\n  }\n`;\n\nexport const brands = `\n  query brands {\n    brands {\n      _id\n      name\n    }\n  }\n`;\n\nexport const tags = `\n  query tags($type: String) {\n    tags(type: $type) {\n      _id\n      name\n      colorCode\n    }\n  }\n`;\n\nexport const totalCustomersCount = `\n  query totalCustomersCount {\n    customersTotalCount\n  }\n`;\n"]},"hash":"831b64ab640ae5f285044e732e882c8baad03b1e"}
