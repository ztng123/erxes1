{"metadata":{"usedHelpers":["extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"react-apollo","imported":["compose","gql","graphql"],"specifiers":[{"kind":"named","imported":"compose","local":"compose"},{"kind":"named","imported":"gql","local":"gql"},{"kind":"named","imported":"graphql","local":"graphql"}]},{"source":"immutable","imported":["fromJS"],"specifiers":[{"kind":"named","imported":"fromJS","local":"fromJS"}]},{"source":"../graphql","imported":["queries"],"specifiers":[{"kind":"named","imported":"queries","local":"queries"}]},{"source":"../components","imported":["RespondBox"],"specifiers":[{"kind":"named","imported":"RespondBox","local":"RespondBox"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/inbox/containers/RespondBox.js","filenameRelative":"/imports/react-ui/inbox/containers/RespondBox.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/inbox/containers/RespondBox.js.map","sourceFileName":"/imports/react-ui/inbox/containers/RespondBox.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"RespondBox"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 1);\nvar compose = void 0,\n    gql = void 0,\n    graphql = void 0;\nmodule.importSync(\"react-apollo\", {\n  compose: function (v) {\n    compose = v;\n  },\n  gql: function (v) {\n    gql = v;\n  },\n  graphql: function (v) {\n    graphql = v;\n  }\n}, 2);\nvar fromJS = void 0;\nmodule.importSync(\"immutable\", {\n  fromJS: function (v) {\n    fromJS = v;\n  }\n}, 3);\nvar queries = void 0;\nmodule.importSync(\"../graphql\", {\n  queries: function (v) {\n    queries = v;\n  }\n}, 4);\nvar RespondBox = void 0;\nmodule.importSync(\"../components\", {\n  RespondBox: function (v) {\n    RespondBox = v;\n  }\n}, 5);\n\nvar RespondBoxContainer = function (props) {\n  var usersQuery = props.usersQuery;\n\n  var sendMessage = function (message, callback) {\n    Meteor.call('conversations.addMessage', message, callback);\n  };\n\n  var teamMembers = [];\n\n  for (var _iterator = usersQuery.users || [], _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var user = _ref;\n    teamMembers.push({\n      _id: user._id,\n      name: user.username,\n      title: user.details.position,\n      avatar: user.details.avatar\n    });\n  }\n\n  var updatedProps = (0, _extends3.default)({}, props, {\n    sendMessage: sendMessage,\n    teamMembers: fromJS(teamMembers)\n  });\n  return React.createElement(RespondBox, updatedProps);\n};\n\nRespondBoxContainer.propTypes = {\n  object: PropTypes.object,\n  usersQuery: PropTypes.object\n};\nmodule.export(\"default\", exports.default = compose(graphql(gql(queries.userList), {\n  name: 'usersQuery'\n}))(RespondBoxContainer));","map":{"version":3,"sources":["/imports/react-ui/inbox/containers/RespondBox.js"],"names":["Meteor","module","importSync","v","React","compose","gql","graphql","fromJS","queries","RespondBox","RespondBoxContainer","usersQuery","props","sendMessage","message","callback","call","teamMembers","users","user","push","_id","name","username","title","details","position","avatar","updatedProps","propTypes","object","PropTypes","export","exports","default","userList"],"mappings":";;;;;;AAAA,IAAIA,eAAJ;AAAWC,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACF,UAAO,UAASG,CAAT,EAAW;AAACH,aAAOG,CAAP;AAAS;AAA7B,CAAlC,EAAiE,CAAjE;AAAoE,IAAIC,cAAJ;AAAUH,OAAOC,UAAP,CAAkB,OAAlB,EAA0B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACC,YAAMD,CAAN;AAAQ;AAA7B,CAA1B,EAAyD,CAAzD;AAA4D,IAAIE,gBAAJ;AAAA,IAAYC,YAAZ;AAAA,IAAgBC,gBAAhB;AAAwBN,OAAOC,UAAP,CAAkB,cAAlB,EAAiC;AAACG,WAAQ,UAASF,CAAT,EAAW;AAACE,cAAQF,CAAR;AAAU,GAA/B;AAAgCG,OAAI,UAASH,CAAT,EAAW;AAACG,UAAIH,CAAJ;AAAM,GAAtD;AAAuDI,WAAQ,UAASJ,CAAT,EAAW;AAACI,cAAQJ,CAAR;AAAU;AAArF,CAAjC,EAAwH,CAAxH;AAA2H,IAAIK,eAAJ;AAAWP,OAAOC,UAAP,CAAkB,WAAlB,EAA8B;AAACM,UAAO,UAASL,CAAT,EAAW;AAACK,aAAOL,CAAP;AAAS;AAA7B,CAA9B,EAA6D,CAA7D;AAAgE,IAAIM,gBAAJ;AAAYR,OAAOC,UAAP,CAAkB,YAAlB,EAA+B;AAACO,WAAQ,UAASN,CAAT,EAAW;AAACM,cAAQN,CAAR;AAAU;AAA/B,CAA/B,EAAgE,CAAhE;AAAmE,IAAIO,mBAAJ;AAAeT,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACQ,cAAW,UAASP,CAAT,EAAW;AAACO,iBAAWP,CAAX;AAAa;AAArC,CAAlC,EAAyE,CAAzE;;AAQjd,IAAMQ,sBAAsB,iBAAS;AAAA,MAC3BC,UAD2B,GACZC,KADY,CAC3BD,UAD2B;;AAGnC,MAAME,cAAc,UAACC,OAAD,EAAUC,QAAV,EAAuB;AACzChB,WAAOiB,IAAP,CAAY,0BAAZ,EAAwCF,OAAxC,EAAiDC,QAAjD;AACD,GAFD;;AAIA,MAAME,cAAc,EAApB;;AAEA,uBAAiBN,WAAWO,KAAX,IAAoB,EAArC,kHAAyC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,QAAhCC,IAAgC;AACvCF,gBAAYG,IAAZ,CAAiB;AACfC,WAAKF,KAAKE,GADK;AAEfC,YAAMH,KAAKI,QAFI;AAGfC,aAAOL,KAAKM,OAAL,CAAaC,QAHL;AAIfC,cAAQR,KAAKM,OAAL,CAAaE;AAJN,KAAjB;AAMD;;AAED,MAAMC,0CACDhB,KADC;AAEJC,4BAFI;AAGJI,iBAAaV,OAAOU,WAAP;AAHT,IAAN;AAMA,SAAO,oBAAC,UAAD,EAAgBW,YAAhB,CAAP;AACD,CAzBD;;AA2BAlB,oBAAoBmB,SAApB,GAAgC;AAC9BC,UAAQC,UAAUD,MADY;AAE9BnB,cAAYoB,UAAUD;AAFQ,CAAhC;AAnCA9B,OAAOgC,MAAP,CAAc,SAAd,EAAwBC,QAAQC,OAAR,GAwCT9B,QAAQE,QAAQD,IAAIG,QAAQ2B,QAAZ,CAAR,EAA+B;AAAEb,QAAM;AAAR,CAA/B,CAAR,EAAgEZ,mBAAhE,CAxCf","file":"/imports/react-ui/inbox/containers/RespondBox.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport React from 'react';\n\nimport { compose, gql, graphql } from 'react-apollo';\nimport { fromJS } from 'immutable';\nimport { queries } from '../graphql';\nimport { RespondBox } from '../components';\n\nconst RespondBoxContainer = props => {\n  const { usersQuery } = props;\n\n  const sendMessage = (message, callback) => {\n    Meteor.call('conversations.addMessage', message, callback);\n  };\n\n  const teamMembers = [];\n\n  for (let user of usersQuery.users || []) {\n    teamMembers.push({\n      _id: user._id,\n      name: user.username,\n      title: user.details.position,\n      avatar: user.details.avatar,\n    });\n  }\n\n  const updatedProps = {\n    ...props,\n    sendMessage,\n    teamMembers: fromJS(teamMembers),\n  };\n\n  return <RespondBox {...updatedProps} />;\n};\n\nRespondBoxContainer.propTypes = {\n  object: PropTypes.object,\n  usersQuery: PropTypes.object,\n};\n\nexport default compose(graphql(gql(queries.userList), { name: 'usersQuery' }))(RespondBoxContainer);\n"]},"hash":"dc4d52def06ffd5d7fd87fcb371a50116856a6d4"}
