{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"/imports/api/users/constants","imported":["ROLES"],"specifiers":[{"kind":"named","imported":"ROLES","local":"ROLES"}]}],"exports":{"exported":["ErxesMixin","_options","wait"],"specifiers":[{"kind":"local","local":"ErxesMixin","exported":"ErxesMixin"},{"kind":"local","local":"_options","exported":"_options"},{"kind":"local","local":"wait","exported":"wait"}]}}},"options":{"filename":"/imports/api/utils.js","filenameRelative":"/imports/api/utils.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/api/utils.js.map","sourceFileName":"/imports/api/utils.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"utils"},"ignored":false,"code":"module.export({\n  ErxesMixin: function () {\n    return ErxesMixin;\n  },\n  wait: function () {\n    return wait;\n  }\n});\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar ROLES = void 0;\nmodule.importSync(\"/imports/api/users/constants\", {\n  ROLES: function (v) {\n    ROLES = v;\n  }\n}, 1);\nvar RESTRICTED_METHODS = ['users.invite', 'users.updateAccessInfo', 'users.remove', 'brands.add', 'brands.edit', 'brands.remove', 'brands.configEmail', 'channels.add', 'channels.edit', 'channels.remove', 'forms.add', 'forms.edit', 'forms.remove', 'integrations.add', 'integrations.edit', 'integrations.remove', 'integrations.addMessenger', 'integrations.addTwitter', 'integrations.addFacebook']; // all validated methods mixin\n// check login, permissions etc ..\n\nfunction ErxesMixin(_options) {\n  var options = _options; // save real run\n\n  var runFunc = _options.run; // override run\n\n  options.run = function () {\n    function run() {\n      // check login required\n      if (!this.userId) {\n        throw new Meteor.Error('loginRequired', 'Login required.');\n      }\n\n      if (Meteor.isServer) {\n        var user = Meteor.users.findOne(this.userId); // check contributor permissions\n\n        if (user.details && user.details.role === ROLES.CONTRIBUTOR && RESTRICTED_METHODS.includes(_options.name)) {\n          throw new Meteor.Error('permissionDenied', 'Permission denied.');\n        }\n      }\n\n      for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {\n        params[_key] = arguments[_key];\n      }\n\n      return runFunc.call.apply(runFunc, [this].concat(params));\n    }\n\n    return run;\n  }();\n\n  return options;\n}\n\nvar wait = function (ms) {\n  var start = new Date().getTime();\n  var end = start;\n\n  while (end < start + ms) {\n    end = new Date().getTime();\n  }\n};","map":{"version":3,"sources":["/imports/api/utils.js"],"names":["module","export","ErxesMixin","wait","Meteor","importSync","v","ROLES","RESTRICTED_METHODS","_options","options","runFunc","run","userId","Error","isServer","user","users","findOne","details","role","CONTRIBUTOR","includes","name","params","call","start","Date","getTime","end","ms"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,cAAW;AAAA,WAAIA,UAAJ;AAAA,GAAZ;AAA2BC,QAAK;AAAA,WAAIA,IAAJ;AAAA;AAAhC,CAAd;AAAyD,IAAIC,eAAJ;AAAWJ,OAAOK,UAAP,CAAkB,eAAlB,EAAkC;AAACD,UAAO,UAASE,CAAT,EAAW;AAACF,aAAOE,CAAP;AAAS;AAA7B,CAAlC,EAAiE,CAAjE;AAAoE,IAAIC,cAAJ;AAAUP,OAAOK,UAAP,CAAkB,8BAAlB,EAAiD;AAACE,SAAM,UAASD,CAAT,EAAW;AAACC,YAAMD,CAAN;AAAQ;AAA3B,CAAjD,EAA8E,CAA9E;AAGlJ,IAAME,qBAAqB,CACzB,cADyB,EAEzB,wBAFyB,EAGzB,cAHyB,EAIzB,YAJyB,EAKzB,aALyB,EAMzB,eANyB,EAOzB,oBAPyB,EAQzB,cARyB,EASzB,eATyB,EAUzB,iBAVyB,EAWzB,WAXyB,EAYzB,YAZyB,EAazB,cAbyB,EAczB,kBAdyB,EAezB,mBAfyB,EAgBzB,qBAhByB,EAiBzB,2BAjByB,EAkBzB,yBAlByB,EAmBzB,0BAnByB,CAA3B,C,CAsBA;AACA;;AACO,SAASN,UAAT,CAAoBO,QAApB,EAA8B;AACnC,MAAMC,UAAUD,QAAhB,CADmC,CAGnC;;AACA,MAAME,UAAUF,SAASG,GAAzB,CAJmC,CAMnC;;AACAF,UAAQE,GAAR;AAAc,aAASA,GAAT,GAAwB;AACpC;AACA,UAAI,CAAC,KAAKC,MAAV,EAAkB;AAChB,cAAM,IAAIT,OAAOU,KAAX,CAAiB,eAAjB,EAAkC,iBAAlC,CAAN;AACD;;AAED,UAAIV,OAAOW,QAAX,EAAqB;AACnB,YAAMC,OAAOZ,OAAOa,KAAP,CAAaC,OAAb,CAAqB,KAAKL,MAA1B,CAAb,CADmB,CAGnB;;AACA,YACEG,KAAKG,OAAL,IACAH,KAAKG,OAAL,CAAaC,IAAb,KAAsBb,MAAMc,WAD5B,IAEAb,mBAAmBc,QAAnB,CAA4Bb,SAASc,IAArC,CAHF,EAIE;AACA,gBAAM,IAAInB,OAAOU,KAAX,CAAiB,kBAAjB,EAAqC,oBAArC,CAAN;AACD;AACF;;AAjBmC,wCAARU,MAAQ;AAARA,cAAQ;AAAA;;AAmBpC,aAAOb,QAAQc,IAAR,iBAAa,IAAb,SAAsBD,MAAtB,EAAP;AACD;;AApBD,WAAuBZ,GAAvB;AAAA;;AAsBA,SAAOF,OAAP;AACD;;AAEM,IAAMP,OAAO,cAAM;AACxB,MAAMuB,QAAQ,IAAIC,IAAJ,GAAWC,OAAX,EAAd;AACA,MAAIC,MAAMH,KAAV;;AAEA,SAAOG,MAAMH,QAAQI,EAArB,EAAyB;AACvBD,UAAM,IAAIF,IAAJ,GAAWC,OAAX,EAAN;AACD;AACF,CAPM","file":"/imports/api/utils.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ROLES } from '/imports/api/users/constants';\n\nconst RESTRICTED_METHODS = [\n  'users.invite',\n  'users.updateAccessInfo',\n  'users.remove',\n  'brands.add',\n  'brands.edit',\n  'brands.remove',\n  'brands.configEmail',\n  'channels.add',\n  'channels.edit',\n  'channels.remove',\n  'forms.add',\n  'forms.edit',\n  'forms.remove',\n  'integrations.add',\n  'integrations.edit',\n  'integrations.remove',\n  'integrations.addMessenger',\n  'integrations.addTwitter',\n  'integrations.addFacebook',\n];\n\n// all validated methods mixin\n// check login, permissions etc ..\nexport function ErxesMixin(_options) {\n  const options = _options;\n\n  // save real run\n  const runFunc = _options.run;\n\n  // override run\n  options.run = function run(...params) {\n    // check login required\n    if (!this.userId) {\n      throw new Meteor.Error('loginRequired', 'Login required.');\n    }\n\n    if (Meteor.isServer) {\n      const user = Meteor.users.findOne(this.userId);\n\n      // check contributor permissions\n      if (\n        user.details &&\n        user.details.role === ROLES.CONTRIBUTOR &&\n        RESTRICTED_METHODS.includes(_options.name)\n      ) {\n        throw new Meteor.Error('permissionDenied', 'Permission denied.');\n      }\n    }\n\n    return runFunc.call(this, ...params);\n  };\n\n  return options;\n}\n\nexport const wait = ms => {\n  const start = new Date().getTime();\n  let end = start;\n\n  while (end < start + ms) {\n    end = new Date().getTime();\n  }\n};\n"]},"hash":"614b255ef36089f18dd922d4e0415ea515cfddbe"}
