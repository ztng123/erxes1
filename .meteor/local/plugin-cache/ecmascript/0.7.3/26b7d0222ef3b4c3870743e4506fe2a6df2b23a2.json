{"metadata":{"usedHelpers":["extends","taggedTemplateLiteralLoose","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"react","imported":["default","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"react-apollo","imported":["compose","gql","graphql"],"specifiers":[{"kind":"named","imported":"compose","local":"compose"},{"kind":"named","imported":"gql","local":"gql"},{"kind":"named","imported":"graphql","local":"graphql"}]},{"source":"meteor/erxes-notifier","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Alert"}]},{"source":"../components","imported":["List"],"specifiers":[{"kind":"named","imported":"List","local":"List"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/tags/containers/List.js","filenameRelative":"/imports/react-ui/tags/containers/List.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/tags/containers/List.js.map","sourceFileName":"/imports/react-ui/tags/containers/List.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"List"},"ignored":false,"code":"var _taggedTemplateLiteralLoose2 = require(\"babel-runtime/helpers/taggedTemplateLiteralLoose\");\n\nvar _taggedTemplateLiteralLoose3 = _interopRequireDefault(_taggedTemplateLiteralLoose2);\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _templateObject = (0, _taggedTemplateLiteralLoose3.default)([\"\\n      query tagsQuery($type: String) {\\n        tags(type: $type) {\\n          _id\\n          name\\n          type\\n          colorCode\\n          createdAt\\n          objectCount\\n        }\\n      }\\n    \"], [\"\\n      query tagsQuery($type: String) {\\n        tags(type: $type) {\\n          _id\\n          name\\n          type\\n          colorCode\\n          createdAt\\n          objectCount\\n        }\\n      }\\n    \"]);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar React = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar compose = void 0,\n    gql = void 0,\n    graphql = void 0;\nmodule.importSync(\"react-apollo\", {\n  compose: function (v) {\n    compose = v;\n  },\n  gql: function (v) {\n    gql = v;\n  },\n  graphql: function (v) {\n    graphql = v;\n  }\n}, 2);\nvar Alert = void 0;\nmodule.importSync(\"meteor/erxes-notifier\", {\n  \"default\": function (v) {\n    Alert = v;\n  }\n}, 3);\nvar List = void 0;\nmodule.importSync(\"../components\", {\n  List: function (v) {\n    List = v;\n  }\n}, 4);\n\nvar ListContainer = function (props) {\n  var tagsQuery = props.tagsQuery,\n      type = props.type;\n\n  if (tagsQuery.loading) {\n    return null;\n  }\n\n  var remove = function (tag) {\n    if (!confirm('Are you sure you want to delete this tag?')) {\n      // eslint-disable-line no-alert\n      return;\n    }\n\n    Meteor.call('tags.remove', [tag._id], function (error) {\n      if (error) {\n        return Alert.error(error.reason);\n      }\n\n      tagsQuery.refetch();\n      return Alert.success('The tag has been deleted, forever!');\n    });\n  };\n\n  var save = function (_ref) {\n    var tag = _ref.tag,\n        doc = _ref.doc,\n        callback = _ref.callback;\n\n    var cb = function () {\n      callback.apply(undefined, arguments);\n      tagsQuery.refetch();\n    };\n\n    if (tag) {\n      return Meteor.call('tags.edit', {\n        id: tag._id,\n        doc: doc\n      }, cb);\n    }\n\n    return Meteor.call('tags.add', doc, cb);\n  };\n\n  var updatedProps = (0, _extends3.default)({}, props, {\n    tags: tagsQuery.tags,\n    type: type,\n    remove: remove,\n    save: save\n  });\n  return React.createElement(List, updatedProps);\n};\n\nListContainer.propTypes = {\n  type: PropTypes.string,\n  tagsQuery: PropTypes.object\n};\nmodule.export(\"default\", exports.default = compose(graphql(gql(_templateObject), {\n  name: 'tagsQuery',\n  options: function (_ref2) {\n    var type = _ref2.type;\n    return {\n      variables: {\n        type: type\n      },\n      fetchPolicy: 'network-only'\n    };\n  }\n}))(ListContainer));","map":{"version":3,"sources":["/imports/react-ui/tags/containers/List.js"],"names":["Meteor","module","importSync","v","React","PropTypes","compose","gql","graphql","Alert","List","ListContainer","tagsQuery","props","type","loading","remove","confirm","call","tag","_id","error","reason","refetch","success","save","doc","callback","cb","id","updatedProps","tags","propTypes","string","object","export","exports","default","name","options","variables","fetchPolicy"],"mappings":"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","file":"/imports/react-ui/tags/containers/List.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport React, { PropTypes } from 'react';\nimport { compose, gql, graphql } from 'react-apollo';\nimport Alert from 'meteor/erxes-notifier';\nimport { List } from '../components';\n\nconst ListContainer = props => {\n  const { tagsQuery, type } = props;\n\n  if (tagsQuery.loading) {\n    return null;\n  }\n\n  const remove = tag => {\n    if (!confirm('Are you sure you want to delete this tag?')) {\n      // eslint-disable-line no-alert\n      return;\n    }\n\n    Meteor.call('tags.remove', [tag._id], error => {\n      if (error) {\n        return Alert.error(error.reason);\n      }\n\n      tagsQuery.refetch();\n\n      return Alert.success('The tag has been deleted, forever!');\n    });\n  };\n\n  const save = ({ tag, doc, callback }) => {\n    const cb = (...params) => {\n      callback(...params);\n\n      tagsQuery.refetch();\n    };\n\n    if (tag) {\n      return Meteor.call('tags.edit', { id: tag._id, doc }, cb);\n    }\n\n    return Meteor.call('tags.add', doc, cb);\n  };\n\n  const updatedProps = {\n    ...props,\n    tags: tagsQuery.tags,\n    type,\n    remove,\n    save,\n  };\n\n  return <List {...updatedProps} />;\n};\n\nListContainer.propTypes = {\n  type: PropTypes.string,\n  tagsQuery: PropTypes.object,\n};\n\nexport default compose(\n  graphql(\n    gql`\n      query tagsQuery($type: String) {\n        tags(type: $type) {\n          _id\n          name\n          type\n          colorCode\n          createdAt\n          objectCount\n        }\n      }\n    `,\n    {\n      name: 'tagsQuery',\n      options: ({ type }) => ({\n        variables: { type },\n        fetchPolicy: 'network-only',\n      }),\n    },\n  ),\n)(ListContainer);\n"]},"hash":"26b7d0222ef3b4c3870743e4506fe2a6df2b23a2"}
