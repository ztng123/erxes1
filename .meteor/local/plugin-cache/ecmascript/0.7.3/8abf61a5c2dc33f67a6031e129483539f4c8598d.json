{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"draft-js","imported":["EditorState","Modifier"],"specifiers":[{"kind":"named","imported":"EditorState","local":"EditorState"},{"kind":"named","imported":"Modifier","local":"Modifier"}]},{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"/imports/react-ui/common/Editor","imported":["ErxesEditor","toHTML","createStateFromHTML"],"specifiers":[{"kind":"named","imported":"ErxesEditor","local":"ErxesEditor"},{"kind":"named","imported":"toHTML","local":"toHTML"},{"kind":"named","imported":"createStateFromHTML","local":"createStateFromHTML"}]},{"source":"/imports/api/engage/constants","imported":["EMAIL_CONTENT_KEYS_FOR_SELECT"],"specifiers":[{"kind":"named","imported":"EMAIL_CONTENT_KEYS_FOR_SELECT","local":"EMAIL_CONTENT_KEYS_FOR_SELECT"}]}],"exports":{"exported":["Editor"],"specifiers":[{"kind":"local","local":"Editor","exported":"default"}]}}},"options":{"filename":"/imports/react-ui/engage/components/Editor.js","filenameRelative":"/imports/react-ui/engage/components/Editor.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/engage/components/Editor.js.map","sourceFileName":"/imports/react-ui/engage/components/Editor.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Editor"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  \"default\": function () {\n    return Editor;\n  }\n});\nvar EditorState = void 0,\n    Modifier = void 0;\nmodule.importSync(\"draft-js\", {\n  EditorState: function (v) {\n    EditorState = v;\n  },\n  Modifier: function (v) {\n    Modifier = v;\n  }\n}, 0);\nvar React = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 1);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 2);\nvar ErxesEditor = void 0,\n    toHTML = void 0,\n    createStateFromHTML = void 0;\nmodule.importSync(\"/imports/react-ui/common/Editor\", {\n  ErxesEditor: function (v) {\n    ErxesEditor = v;\n  },\n  toHTML: function (v) {\n    toHTML = v;\n  },\n  createStateFromHTML: function (v) {\n    createStateFromHTML = v;\n  }\n}, 3);\nvar EMAIL_CONTENT_KEYS_FOR_SELECT = void 0;\nmodule.importSync(\"/imports/api/engage/constants\", {\n  EMAIL_CONTENT_KEYS_FOR_SELECT: function (v) {\n    EMAIL_CONTENT_KEYS_FOR_SELECT = v;\n  }\n}, 4);\n\nvar DynamicContent = function (_ref) {\n  var onEditorStateChange = _ref.onEditorStateChange,\n      editorState = _ref.editorState;\n\n  var onChange = function (e) {\n    var value = e.target.value;\n    var currentContent = editorState.getCurrentContent();\n    var selection = editorState.getSelection(); // insert new text to content state\n\n    var contentState = Modifier.insertText(currentContent, selection, value); // update editor state\n\n    onEditorStateChange(EditorState.push(editorState, contentState));\n  }; // render options\n\n\n  var renderOptions = function (options, groupValue, groupIndex) {\n    return options.map(function (option, optionIndex) {\n      return React.createElement(\n        \"option\",\n        {\n          value: \"{{ \" + groupValue + \".\" + option.value + \" }}\",\n          key: \"optgroup-\" + groupIndex + \"-\" + optionIndex\n        },\n        option.text\n      );\n    });\n  }; // render opt groups\n\n\n  var renderOptgroups = function (group, options, index) {\n    return React.createElement(\n      \"optgroup\",\n      {\n        label: group.text,\n        key: \"optgroup-\" + index\n      },\n      renderOptions(options, group.value, index)\n    );\n  };\n\n  return React.createElement(\n    \"select\",\n    {\n      onChange: onChange\n    },\n    React.createElement(\n      \"option\",\n      null,\n      \"Attributes\"\n    ),\n    EMAIL_CONTENT_KEYS_FOR_SELECT.map(function (_ref2, index) {\n      var group = _ref2.group,\n          options = _ref2.options;\n      return renderOptgroups(group, options, index);\n    })\n  );\n};\n\nDynamicContent.propTypes = {\n  editorState: PropTypes.object,\n  onEditorStateChange: PropTypes.func\n};\n\nvar Editor = function (_Component) {\n  (0, _inherits3.default)(Editor, _Component);\n\n  function Editor(props) {\n    (0, _classCallCheck3.default)(this, Editor);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.state = {\n      editorState: createStateFromHTML(EditorState.createEmpty(), props.defaultValue || '')\n    };\n    _this.onChange = _this.onChange.bind(_this);\n    _this.getContent = _this.getContent.bind(_this);\n    return _this;\n  }\n\n  Editor.prototype.onChange = function () {\n    function onChange(editorState) {\n      this.setState({\n        editorState: editorState\n      });\n      this.props.onChange(this.getContent(editorState));\n    }\n\n    return onChange;\n  }();\n\n  Editor.prototype.getContent = function () {\n    function getContent(editorState) {\n      return toHTML(editorState);\n    }\n\n    return getContent;\n  }();\n\n  Editor.prototype.render = function () {\n    function render() {\n      var props = (0, _extends3.default)({}, this.props, {\n        editorState: this.state.editorState,\n        controls: [React.createElement(DynamicContent, {\n          key: \"dynamic-content-control\",\n          editorState: this.state.editorState,\n          onEditorStateChange: this.onChange\n        })],\n        onChange: this.onChange\n      });\n      return React.createElement(ErxesEditor, props);\n    }\n\n    return render;\n  }();\n\n  return Editor;\n}(Component);\n\nEditor.propTypes = {\n  onChange: PropTypes.func,\n  defaultValue: PropTypes.string,\n  onShifEnter: PropTypes.func\n};","map":{"version":3,"sources":["/imports/react-ui/engage/components/Editor.js"],"names":["module","export","Editor","EditorState","Modifier","importSync","v","React","Component","PropTypes","ErxesEditor","toHTML","createStateFromHTML","EMAIL_CONTENT_KEYS_FOR_SELECT","DynamicContent","onEditorStateChange","editorState","onChange","value","e","target","currentContent","getCurrentContent","selection","getSelection","contentState","insertText","push","renderOptions","options","groupValue","groupIndex","map","option","optionIndex","text","renderOptgroups","group","index","propTypes","object","func","props","state","createEmpty","defaultValue","bind","getContent","setState","render","controls","string","onShifEnter"],"mappings":"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","file":"/imports/react-ui/engage/components/Editor.js.map","sourcesContent":["import { EditorState, Modifier } from 'draft-js';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ErxesEditor, toHTML, createStateFromHTML } from '/imports/react-ui/common/Editor';\nimport { EMAIL_CONTENT_KEYS_FOR_SELECT } from '/imports/api/engage/constants';\n\nconst DynamicContent = ({ onEditorStateChange, editorState }) => {\n  const onChange = e => {\n    const value = e.target.value;\n\n    const currentContent = editorState.getCurrentContent();\n    const selection = editorState.getSelection();\n\n    // insert new text to content state\n    const contentState = Modifier.insertText(currentContent, selection, value);\n\n    // update editor state\n    onEditorStateChange(EditorState.push(editorState, contentState));\n  };\n\n  // render options\n  const renderOptions = (options, groupValue, groupIndex) => {\n    return options.map((option, optionIndex) => {\n      return (\n        <option\n          value={`{{ ${groupValue}.${option.value} }}`}\n          key={`optgroup-${groupIndex}-${optionIndex}`}\n        >\n          {option.text}\n        </option>\n      );\n    });\n  };\n\n  // render opt groups\n  const renderOptgroups = (group, options, index) => {\n    return (\n      <optgroup label={group.text} key={`optgroup-${index}`}>\n        {renderOptions(options, group.value, index)}\n      </optgroup>\n    );\n  };\n\n  return (\n    <select onChange={onChange}>\n      <option>Attributes</option>\n\n      {EMAIL_CONTENT_KEYS_FOR_SELECT.map(({ group, options }, index) => {\n        return renderOptgroups(group, options, index);\n      })}\n    </select>\n  );\n};\n\nDynamicContent.propTypes = {\n  editorState: PropTypes.object,\n  onEditorStateChange: PropTypes.func,\n};\n\nexport default class Editor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editorState: createStateFromHTML(EditorState.createEmpty(), props.defaultValue || ''),\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.getContent = this.getContent.bind(this);\n  }\n\n  onChange(editorState) {\n    this.setState({ editorState });\n\n    this.props.onChange(this.getContent(editorState));\n  }\n\n  getContent(editorState) {\n    return toHTML(editorState);\n  }\n\n  render() {\n    const props = {\n      ...this.props,\n      editorState: this.state.editorState,\n      controls: [\n        <DynamicContent\n          key=\"dynamic-content-control\"\n          editorState={this.state.editorState}\n          onEditorStateChange={this.onChange}\n        />,\n      ],\n\n      onChange: this.onChange,\n    };\n\n    return <ErxesEditor {...props} />;\n  }\n}\n\nEditor.propTypes = {\n  onChange: PropTypes.func,\n  defaultValue: PropTypes.string,\n  onShifEnter: PropTypes.func,\n};\n"]},"hash":"8abf61a5c2dc33f67a6031e129483539f4c8598d"}
