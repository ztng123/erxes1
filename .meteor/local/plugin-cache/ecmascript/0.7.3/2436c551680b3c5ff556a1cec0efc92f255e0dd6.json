{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/underscore","imported":["_"],"specifiers":[{"kind":"named","imported":"_","local":"_"}]},{"source":"meteor/aldeed:simple-schema","imported":["SimpleSchema"],"specifiers":[{"kind":"named","imported":"SimpleSchema","local":"SimpleSchema"}]},{"source":"./tags","imported":["Tags"],"specifiers":[{"kind":"named","imported":"Tags","local":"Tags"}]}],"exports":{"exported":["TagsCollection","tagsHelper","tagSchemaOptions"],"specifiers":[{"kind":"local","local":"TagsCollection","exported":"TagsCollection"},{"kind":"local","local":"tagsHelper","exported":"tagsHelper"},{"kind":"local","local":"tagSchemaOptions","exported":"tagSchemaOptions"}]}}},"options":{"filename":"/imports/api/tags/utils.js","filenameRelative":"/imports/api/tags/utils.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/api/tags/utils.js.map","sourceFileName":"/imports/api/tags/utils.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"utils"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  TagsCollection: function () {\n    return TagsCollection;\n  },\n  tagsHelper: function () {\n    return tagsHelper;\n  },\n  tagSchemaOptions: function () {\n    return tagSchemaOptions;\n  }\n});\nvar Mongo = void 0;\nmodule.importSync(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\n\nvar _ = void 0;\n\nmodule.importSync(\"meteor/underscore\", {\n  _: function (v) {\n    _ = v;\n  }\n}, 1);\nvar SimpleSchema = void 0;\nmodule.importSync(\"meteor/aldeed:simple-schema\", {\n  SimpleSchema: function (v) {\n    SimpleSchema = v;\n  }\n}, 2);\nvar Tags = void 0;\nmodule.importSync(\"./tags\", {\n  Tags: function (v) {\n    Tags = v;\n  }\n}, 3);\n\nvar TagsCollection = function (_Mongo$Collection) {\n  (0, _inherits3.default)(TagsCollection, _Mongo$Collection);\n\n  function TagsCollection() {\n    (0, _classCallCheck3.default)(this, TagsCollection);\n    return (0, _possibleConstructorReturn3.default)(this, _Mongo$Collection.apply(this, arguments));\n  }\n\n  TagsCollection.prototype.remove = function () {\n    function remove(selector, callback) {\n      var objects = this.find(selector).fetch();\n\n      var result = _Mongo$Collection.prototype.remove.call(this, selector, callback); // remove tag items that using removing objects\n\n\n      var removeIds = [];\n      objects.forEach(function (obj) {\n        removeIds.push(obj.tagIds || []);\n      });\n      removeIds = _.uniq(_.flatten(removeIds));\n      Tags.update({\n        _id: {\n          $in: removeIds\n        }\n      }, {\n        $inc: {\n          objectCount: -1\n        }\n      });\n      return result;\n    }\n\n    return remove;\n  }();\n\n  return TagsCollection;\n}(Mongo.Collection);\n\nvar tagsHelper = {\n  tags: function () {\n    return Tags.find({\n      _id: {\n        $in: this.tagIds || []\n      }\n    }).fetch();\n  }\n};\n\nvar tagSchemaOptions = function () {\n  return {\n    tagIds: {\n      type: [String],\n      regEx: SimpleSchema.RegEx.Id,\n      optional: true\n    }\n  };\n};","map":{"version":3,"sources":["/imports/api/tags/utils.js"],"names":["module","export","TagsCollection","tagsHelper","tagSchemaOptions","Mongo","importSync","v","_","SimpleSchema","Tags","remove","selector","callback","objects","find","fetch","result","removeIds","forEach","push","obj","tagIds","uniq","flatten","update","_id","$in","$inc","objectCount","Collection","tags","type","String","regEx","RegEx","Id","optional"],"mappings":";;;;;;;;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,kBAAe;AAAA,WAAIA,cAAJ;AAAA,GAAhB;AAAmCC,cAAW;AAAA,WAAIA,UAAJ;AAAA,GAA9C;AAA6DC,oBAAiB;AAAA,WAAIA,gBAAJ;AAAA;AAA9E,CAAd;AAAmH,IAAIC,cAAJ;AAAUL,OAAOM,UAAP,CAAkB,cAAlB,EAAiC;AAACD,SAAM,UAASE,CAAT,EAAW;AAACF,YAAME,CAAN;AAAQ;AAA3B,CAAjC,EAA8D,CAA9D;;AAAiE,IAAIC,UAAJ;;AAAMR,OAAOM,UAAP,CAAkB,mBAAlB,EAAsC;AAACE,KAAE,UAASD,CAAT,EAAW;AAACC,QAAED,CAAF;AAAI;AAAnB,CAAtC,EAA2D,CAA3D;AAA8D,IAAIE,qBAAJ;AAAiBT,OAAOM,UAAP,CAAkB,6BAAlB,EAAgD;AAACG,gBAAa,UAASF,CAAT,EAAW;AAACE,mBAAaF,CAAb;AAAe;AAAzC,CAAhD,EAA2F,CAA3F;AAA8F,IAAIG,aAAJ;AAASV,OAAOM,UAAP,CAAkB,QAAlB,EAA2B;AAACI,QAAK,UAASH,CAAT,EAAW;AAACG,WAAKH,CAAL;AAAO;AAAzB,CAA3B,EAAsD,CAAtD;;IAK7WL,c;;;;;;;;2BACXS,M;oBAAOC,Q,EAAUC,Q,EAAU;AACzB,UAAMC,UAAU,KAAKC,IAAL,CAAUH,QAAV,EAAoBI,KAApB,EAAhB;;AACA,UAAMC,SAAS,4BAAMN,MAAN,YAAaC,QAAb,EAAuBC,QAAvB,CAAf,CAFyB,CAIzB;;;AACA,UAAIK,YAAY,EAAhB;AAEAJ,cAAQK,OAAR,CAAgB,eAAO;AACrBD,kBAAUE,IAAV,CAAeC,IAAIC,MAAJ,IAAc,EAA7B;AACD,OAFD;AAIAJ,kBAAYV,EAAEe,IAAF,CAAOf,EAAEgB,OAAF,CAAUN,SAAV,CAAP,CAAZ;AACAR,WAAKe,MAAL,CAAY;AAAEC,aAAK;AAAEC,eAAKT;AAAP;AAAP,OAAZ,EAAyC;AAAEU,cAAM;AAAEC,uBAAa,CAAC;AAAhB;AAAR,OAAzC;AAEA,aAAOZ,MAAP;AACD;;;;;;EAhBiCZ,MAAMyB,U;;AAmBnC,IAAM3B,aAAa;AACxB4B,MADwB,cACjB;AACL,WAAOrB,KAAKK,IAAL,CAAU;AAAEW,WAAK;AAAEC,aAAK,KAAKL,MAAL,IAAe;AAAtB;AAAP,KAAV,EAA+CN,KAA/C,EAAP;AACD;AAHuB,CAAnB;;AAMA,IAAMZ,mBAAmB;AAAA,SAAO;AACrCkB,YAAQ;AACNU,YAAM,CAACC,MAAD,CADA;AAENC,aAAOzB,aAAa0B,KAAb,CAAmBC,EAFpB;AAGNC,gBAAU;AAHJ;AAD6B,GAAP;AAAA,CAAzB","file":"/imports/api/tags/utils.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { _ } from 'meteor/underscore';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\nimport { Tags } from './tags';\n\nexport class TagsCollection extends Mongo.Collection {\n  remove(selector, callback) {\n    const objects = this.find(selector).fetch();\n    const result = super.remove(selector, callback);\n\n    // remove tag items that using removing objects\n    let removeIds = [];\n\n    objects.forEach(obj => {\n      removeIds.push(obj.tagIds || []);\n    });\n\n    removeIds = _.uniq(_.flatten(removeIds));\n    Tags.update({ _id: { $in: removeIds } }, { $inc: { objectCount: -1 } });\n\n    return result;\n  }\n}\n\nexport const tagsHelper = {\n  tags() {\n    return Tags.find({ _id: { $in: this.tagIds || [] } }).fetch();\n  },\n};\n\nexport const tagSchemaOptions = () => ({\n  tagIds: {\n    type: [String],\n    regEx: SimpleSchema.RegEx.Id,\n    optional: true,\n  },\n});\n"]},"hash":"2436c551680b3c5ff556a1cec0efc92f255e0dd6"}
