{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"/imports/react-ui/layout/components","imported":["Wrapper"],"specifiers":[{"kind":"named","imported":"Wrapper","local":"Wrapper"}]},{"source":"/imports/react-ui/common","imported":["Loader","LoadingContent","LoadingSidebar","Spinner"],"specifiers":[{"kind":"named","imported":"Loader","local":"Loader"},{"kind":"named","imported":"LoadingContent","local":"LoadingContent"},{"kind":"named","imported":"LoadingSidebar","local":"LoadingSidebar"},{"kind":"named","imported":"Spinner","local":"Spinner"}]},{"source":"react-bootstrap","imported":["Table"],"specifiers":[{"kind":"named","imported":"Table","local":"Table"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/common/loading/Loading.js","filenameRelative":"/imports/react-ui/common/loading/Loading.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/common/loading/Loading.js.map","sourceFileName":"/imports/react-ui/common/loading/Loading.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Loading"},"ignored":false,"code":"var React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar Wrapper = void 0;\nmodule.importSync(\"/imports/react-ui/layout/components\", {\n  Wrapper: function (v) {\n    Wrapper = v;\n  }\n}, 2);\nvar Loader = void 0,\n    LoadingContent = void 0,\n    LoadingSidebar = void 0,\n    Spinner = void 0;\nmodule.importSync(\"/imports/react-ui/common\", {\n  Loader: function (v) {\n    Loader = v;\n  },\n  LoadingContent: function (v) {\n    LoadingContent = v;\n  },\n  LoadingSidebar: function (v) {\n    LoadingSidebar = v;\n  },\n  Spinner: function (v) {\n    Spinner = v;\n  }\n}, 3);\nvar Table = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  Table: function (v) {\n    Table = v;\n  }\n}, 4);\nvar propTypes = {\n  sidebarSize: PropTypes.string,\n  spin: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  hasRightSidebar: PropTypes.bool\n};\n\nfunction Loading(_ref) {\n  var sidebarSize = _ref.sidebarSize,\n      _ref$spin = _ref.spin,\n      spin = _ref$spin === undefined ? false : _ref$spin,\n      title = _ref.title,\n      _ref$hasRightSidebar = _ref.hasRightSidebar,\n      hasRightSidebar = _ref$hasRightSidebar === undefined ? false : _ref$hasRightSidebar;\n  var content = React.createElement(\n    Table,\n    {\n      className: \"no-wrap loading-table\"\n    },\n    React.createElement(\n      \"thead\",\n      null,\n      React.createElement(\n        \"tr\",\n        null,\n        React.createElement(\"th\", {\n          width: \"30\",\n          className: \"less-space\"\n        }),\n        React.createElement(\n          \"th\",\n          {\n            width: \"24%\"\n          },\n          React.createElement(\"div\", {\n            className: \"line animate\"\n          })\n        ),\n        React.createElement(\n          \"th\",\n          {\n            width: \"20%\"\n          },\n          React.createElement(\"div\", {\n            className: \"line animate\"\n          })\n        ),\n        React.createElement(\n          \"th\",\n          {\n            width: \"18%\"\n          },\n          React.createElement(\"div\", {\n            className: \"line animate\"\n          })\n        ),\n        React.createElement(\n          \"th\",\n          {\n            width: \"17%\"\n          },\n          React.createElement(\"div\", {\n            className: \"line animate\"\n          })\n        ),\n        React.createElement(\n          \"th\",\n          {\n            width: \"10%\"\n          },\n          React.createElement(\"div\", {\n            className: \"line animate\"\n          })\n        ),\n        React.createElement(\n          \"th\",\n          {\n            width: \"10%\"\n          },\n          React.createElement(\"div\", {\n            className: \"line animate\"\n          })\n        )\n      )\n    ),\n    React.createElement(LoadingContent, {\n      isTable: true,\n      items: 10\n    })\n  );\n\n  if (spin) {\n    content = React.createElement(\n      \"div\",\n      {\n        className: \"full-loader\"\n      },\n      React.createElement(Spinner, null)\n    );\n  }\n\n  return React.createElement(\n    \"div\",\n    null,\n    React.createElement(Loader, null),\n    React.createElement(Wrapper, {\n      header: React.createElement(Wrapper.Header, {\n        breadcrumb: [{\n          title: title\n        }]\n      }),\n      leftSidebar: React.createElement(LoadingSidebar, {\n        size: sidebarSize,\n        items: 4\n      }),\n      content: content,\n      rightSidebar: hasRightSidebar ? React.createElement(LoadingSidebar, {\n        items: 4\n      }) : null,\n      relative: true\n    })\n  );\n}\n\nLoading.propTypes = propTypes;\nmodule.export(\"default\", exports.default = Loading);","map":{"version":3,"sources":["/imports/react-ui/common/loading/Loading.js"],"names":["React","module","importSync","v","PropTypes","Wrapper","Loader","LoadingContent","LoadingSidebar","Spinner","Table","propTypes","sidebarSize","string","spin","bool","title","isRequired","hasRightSidebar","Loading","content","export","exports","default"],"mappings":"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","file":"/imports/react-ui/common/loading/Loading.js.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Wrapper } from '/imports/react-ui/layout/components';\nimport { Loader, LoadingContent, LoadingSidebar, Spinner } from '/imports/react-ui/common';\nimport { Table } from 'react-bootstrap';\n\nconst propTypes = {\n  sidebarSize: PropTypes.string,\n  spin: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  hasRightSidebar: PropTypes.bool,\n};\n\nfunction Loading({ sidebarSize, spin = false, title, hasRightSidebar = false }) {\n  let content = (\n    <Table className=\"no-wrap loading-table\">\n      <thead>\n        <tr>\n          <th width=\"30\" className=\"less-space\" />\n          <th width=\"24%\"><div className=\"line animate\" /></th>\n          <th width=\"20%\"><div className=\"line animate\" /></th>\n          <th width=\"18%\"><div className=\"line animate\" /></th>\n          <th width=\"17%\"><div className=\"line animate\" /></th>\n          <th width=\"10%\"><div className=\"line animate\" /></th>\n          <th width=\"10%\"><div className=\"line animate\" /></th>\n        </tr>\n      </thead>\n      <LoadingContent isTable items={10} />\n    </Table>\n  );\n\n  if (spin) {\n    content = (\n      <div className=\"full-loader\">\n        <Spinner />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Loader />\n      <Wrapper\n        header={<Wrapper.Header breadcrumb={[{ title: title }]} />}\n        leftSidebar={<LoadingSidebar size={sidebarSize} items={4} />}\n        content={content}\n        rightSidebar={hasRightSidebar ? <LoadingSidebar items={4} /> : null}\n        relative\n      />\n    </div>\n  );\n}\n\nLoading.propTypes = propTypes;\n\nexport default Loading;\n"]},"hash":"cb6f71231e50d42a9e3c06d6ad816fb37e59d0a1"}
