{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/aldeed:simple-schema","imported":["SimpleSchema"],"specifiers":[{"kind":"named","imported":"SimpleSchema","local":"SimpleSchema"}]}],"exports":{"exported":["Notifications","Configs"],"specifiers":[{"kind":"local","local":"Notifications","exported":"Notifications"},{"kind":"local","local":"Configs","exported":"Configs"}]}}},"options":{"filename":"/packages/erxes-notifications/notifications.js","filenameRelative":"/packages/erxes-notifications/notifications.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/erxes-notifications/notifications.js.map","sourceFileName":"/packages/erxes-notifications/notifications.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"notifications"},"ignored":false,"code":"module.export({\n  Notifications: function () {\n    return Notifications;\n  },\n  Configs: function () {\n    return Configs;\n  }\n});\nvar Mongo = void 0;\nmodule.importSync(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar SimpleSchema = void 0;\nmodule.importSync(\"meteor/aldeed:simple-schema\", {\n  SimpleSchema: function (v) {\n    SimpleSchema = v;\n  }\n}, 1);\nvar Notifications = new Mongo.Collection('notifications');\nvar Configs = new Mongo.Collection('notifications_configs');\n// schemas\nNotifications.Schema = new SimpleSchema({\n  notifType: {\n    type: String,\n    optional: true\n  },\n  title: {\n    type: String\n  },\n  link: {\n    type: String,\n    optional: true\n  },\n  content: {\n    type: String\n  },\n  createdUser: {\n    type: String,\n    optional: true\n  },\n  receiver: {\n    type: String\n  }\n});\nvar BaseExtra = new SimpleSchema({\n  date: {\n    type: 'date'\n  },\n  isRead: {\n    type: Boolean\n  }\n});\nConfigs.Schema = new SimpleSchema({\n  // to whom this config is related\n  user: {\n    type: String\n  },\n  // which module's type it is. For example: indocuments\n  notifType: {\n    type: String\n  },\n  isAllowed: {\n    type: Boolean\n  }\n}); // attach schemas\n\nNotifications.attachSchema(Notifications.Schema);\nNotifications.attachSchema(BaseExtra);\nConfigs.attachSchema(Configs.Schema);","map":{"version":3,"sources":["/packages/erxes-notifications/notifications.js"],"names":["module","export","Notifications","Configs","Mongo","importSync","v","SimpleSchema","Collection","Schema","notifType","type","String","optional","title","link","content","createdUser","receiver","BaseExtra","date","isRead","Boolean","user","isAllowed","attachSchema"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,iBAAc;AAAA,WAAIA,aAAJ;AAAA,GAAf;AAAiCC,WAAQ;AAAA,WAAIA,OAAJ;AAAA;AAAzC,CAAd;AAAqE,IAAIC,cAAJ;AAAUJ,OAAOK,UAAP,CAAkB,cAAlB,EAAiC;AAACD,SAAM,UAASE,CAAT,EAAW;AAACF,YAAME,CAAN;AAAQ;AAA3B,CAAjC,EAA8D,CAA9D;AAAiE,IAAIC,qBAAJ;AAAiBP,OAAOK,UAAP,CAAkB,6BAAlB,EAAgD;AAACE,gBAAa,UAASD,CAAT,EAAW;AAACC,mBAAaD,CAAb;AAAe;AAAzC,CAAhD,EAA2F,CAA3F;AAK1J,IAAMJ,gBAAgB,IAAIE,MAAMI,UAAV,CAAqB,eAArB,CAAtB;AACA,IAAML,UAAU,IAAIC,MAAMI,UAAV,CAAqB,uBAArB,CAAhB;AAEP;AACAN,cAAcO,MAAd,GAAuB,IAAIF,YAAJ,CAAiB;AACtCG,aAAW;AACTC,UAAMC,MADG;AAETC,cAAU;AAFD,GAD2B;AAMtCC,SAAO;AACLH,UAAMC;AADD,GAN+B;AAUtCG,QAAM;AACJJ,UAAMC,MADF;AAEJC,cAAU;AAFN,GAVgC;AAetCG,WAAS;AACPL,UAAMC;AADC,GAf6B;AAmBtCK,eAAa;AACXN,UAAMC,MADK;AAEXC,cAAU;AAFC,GAnByB;AAwBtCK,YAAU;AACRP,UAAMC;AADE;AAxB4B,CAAjB,CAAvB;AA8BA,IAAMO,YAAY,IAAIZ,YAAJ,CAAiB;AACjCa,QAAM;AACJT,UAAM;AADF,GAD2B;AAKjCU,UAAQ;AACNV,UAAMW;AADA;AALyB,CAAjB,CAAlB;AAWAnB,QAAQM,MAAR,GAAiB,IAAIF,YAAJ,CAAiB;AAChC;AACAgB,QAAM;AACJZ,UAAMC;AADF,GAF0B;AAMhC;AACAF,aAAW;AACTC,UAAMC;AADG,GAPqB;AAWhCY,aAAW;AACTb,UAAMW;AADG;AAXqB,CAAjB,CAAjB,C,CAiBA;;AACApB,cAAcuB,YAAd,CAA2BvB,cAAcO,MAAzC;AACAP,cAAcuB,YAAd,CAA2BN,SAA3B;AACAhB,QAAQsB,YAAR,CAAqBtB,QAAQM,MAA7B","file":"/packages/erxes-notifications/notifications.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n// collections\nexport const Notifications = new Mongo.Collection('notifications');\nexport const Configs = new Mongo.Collection('notifications_configs');\n\n// schemas\nNotifications.Schema = new SimpleSchema({\n  notifType: {\n    type: String,\n    optional: true,\n  },\n\n  title: {\n    type: String,\n  },\n\n  link: {\n    type: String,\n    optional: true,\n  },\n\n  content: {\n    type: String,\n  },\n\n  createdUser: {\n    type: String,\n    optional: true,\n  },\n\n  receiver: {\n    type: String,\n  },\n});\n\n\nconst BaseExtra = new SimpleSchema({\n  date: {\n    type: 'date',\n  },\n\n  isRead: {\n    type: Boolean,\n  },\n});\n\n\nConfigs.Schema = new SimpleSchema({\n  // to whom this config is related\n  user: {\n    type: String,\n  },\n\n  // which module's type it is. For example: indocuments\n  notifType: {\n    type: String,\n  },\n\n  isAllowed: {\n    type: Boolean,\n  },\n});\n\n\n// attach schemas\nNotifications.attachSchema(Notifications.Schema);\nNotifications.attachSchema(BaseExtra);\nConfigs.attachSchema(Configs.Schema);\n"]},"hash":"2b697e679ea4c5cedf172a07d3cd9f84040a01a7"}
