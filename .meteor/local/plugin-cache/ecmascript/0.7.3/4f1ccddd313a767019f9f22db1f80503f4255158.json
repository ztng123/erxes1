{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"faker","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"faker"}]},{"source":"meteor/random","imported":["Random"],"specifiers":[{"kind":"named","imported":"Random","local":"Random"}]},{"source":"meteor/dburles:factory","imported":["Factory"],"specifiers":[{"kind":"named","imported":"Factory","local":"Factory"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/aldeed:simple-schema","imported":["SimpleSchema"],"specifiers":[{"kind":"named","imported":"SimpleSchema","local":"SimpleSchema"}]}],"exports":{"exported":["Forms","Fields"],"specifiers":[{"kind":"local","local":"Forms","exported":"Forms"},{"kind":"local","local":"Fields","exported":"Fields"}]}}},"options":{"filename":"/imports/api/forms/forms.js","filenameRelative":"/imports/api/forms/forms.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/api/forms/forms.js.map","sourceFileName":"/imports/api/forms/forms.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"forms"},"ignored":false,"code":"module.export({\n  Forms: function () {\n    return Forms;\n  },\n  Fields: function () {\n    return Fields;\n  }\n});\nvar faker = void 0;\nmodule.importSync(\"faker\", {\n  \"default\": function (v) {\n    faker = v;\n  }\n}, 0);\nvar Random = void 0;\nmodule.importSync(\"meteor/random\", {\n  Random: function (v) {\n    Random = v;\n  }\n}, 1);\nvar Factory = void 0;\nmodule.importSync(\"meteor/dburles:factory\", {\n  Factory: function (v) {\n    Factory = v;\n  }\n}, 2);\nvar Mongo = void 0;\nmodule.importSync(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 3);\nvar SimpleSchema = void 0;\nmodule.importSync(\"meteor/aldeed:simple-schema\", {\n  SimpleSchema: function (v) {\n    SimpleSchema = v;\n  }\n}, 4);\nvar Forms = new Mongo.Collection('forms');\nvar Fields = new Mongo.Collection('form_fields');\n/* ----------------------- Schemas ----------------------- */ // forms\nForms.schema = new SimpleSchema({\n  title: {\n    type: String\n  },\n  description: {\n    type: String,\n    optional: true\n  }\n});\nvar FormSchemaExtra = new SimpleSchema({\n  code: {\n    type: String\n  },\n  createdUserId: {\n    type: String\n  },\n  createdDate: {\n    type: Date\n  }\n}); // fields\n\nFields.schema = new SimpleSchema({\n  type: {\n    type: String,\n    allowedValues: ['input', 'textarea', 'radio', 'check', 'select', 'divider', 'email', 'firstName', 'lastName']\n  },\n  validation: {\n    type: String,\n    optional: true,\n    allowedValues: ['', 'number', 'date', 'email']\n  },\n  text: {\n    type: String,\n    optional: true\n  },\n  description: {\n    type: String,\n    optional: true\n  },\n  // for radio, check, select, choices\n  options: {\n    type: [String],\n    optional: true\n  },\n  isRequired: {\n    type: Boolean\n  }\n});\nvar FieldSchemaExtra = new SimpleSchema({\n  formId: {\n    type: String\n  },\n  order: {\n    type: Number,\n    optional: true\n  }\n}); /* ----------------------- Collections ----------------------- */\nForms.attachSchema(Forms.schema);\nForms.attachSchema(FormSchemaExtra);\nFields.attachSchema(Fields.schema);\nFields.attachSchema(FieldSchemaExtra);\nFactory.define('form', Forms, {\n  title: function () {\n    return faker.random.word();\n  },\n  code: function () {\n    return Random.id();\n  },\n  description: function () {\n    return faker.random.word();\n  },\n  createdUserId: function () {\n    return Random.id();\n  },\n  createdDate: function () {\n    return faker.date.recent();\n  }\n});\nFactory.define('formField', Fields, {\n  formId: function () {\n    return Random.id();\n  },\n  type: 'input',\n  isRequired: false,\n  order: function () {\n    return faker.random.number();\n  }\n});","map":{"version":3,"sources":["/imports/api/forms/forms.js"],"names":["module","export","Forms","Fields","faker","importSync","v","Random","Factory","Mongo","SimpleSchema","Collection","schema","title","type","String","description","optional","FormSchemaExtra","code","createdUserId","createdDate","Date","allowedValues","validation","text","options","isRequired","Boolean","FieldSchemaExtra","formId","order","Number","attachSchema","define","random","word","id","date","recent","number"],"mappings":"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","file":"/imports/api/forms/forms.js.map","sourcesContent":["import faker from 'faker';\nimport { Random } from 'meteor/random';\nimport { Factory } from 'meteor/dburles:factory';\nimport { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\nexport const Forms = new Mongo.Collection('forms');\nexport const Fields = new Mongo.Collection('form_fields');\n\n/* ----------------------- Schemas ----------------------- */\n\n// forms\nForms.schema = new SimpleSchema({\n  title: {\n    type: String,\n  },\n  description: {\n    type: String,\n    optional: true,\n  },\n});\n\nconst FormSchemaExtra = new SimpleSchema({\n  code: {\n    type: String,\n  },\n  createdUserId: {\n    type: String,\n  },\n  createdDate: {\n    type: Date,\n  },\n});\n\n// fields\nFields.schema = new SimpleSchema({\n  type: {\n    type: String,\n    allowedValues: [\n      'input',\n      'textarea',\n      'radio',\n      'check',\n      'select',\n      'divider',\n      'email',\n      'firstName',\n      'lastName',\n    ],\n  },\n  validation: {\n    type: String,\n    optional: true,\n    allowedValues: ['', 'number', 'date', 'email'],\n  },\n  text: {\n    type: String,\n    optional: true,\n  },\n  description: {\n    type: String,\n    optional: true,\n  },\n\n  // for radio, check, select, choices\n  options: {\n    type: [String],\n    optional: true,\n  },\n\n  isRequired: {\n    type: Boolean,\n  },\n});\n\nconst FieldSchemaExtra = new SimpleSchema({\n  formId: {\n    type: String,\n  },\n  order: {\n    type: Number,\n    optional: true,\n  },\n});\n\n/* ----------------------- Collections ----------------------- */\n\nForms.attachSchema(Forms.schema);\nForms.attachSchema(FormSchemaExtra);\n\nFields.attachSchema(Fields.schema);\nFields.attachSchema(FieldSchemaExtra);\n\nFactory.define('form', Forms, {\n  title: () => faker.random.word(),\n  code: () => Random.id(),\n  description: () => faker.random.word(),\n  createdUserId: () => Random.id(),\n  createdDate: () => faker.date.recent(),\n});\n\nFactory.define('formField', Fields, {\n  formId: () => Random.id(),\n  type: 'input',\n  isRequired: false,\n  order: () => faker.random.number(),\n});\n"]},"hash":"4f1ccddd313a767019f9f22db1f80503f4255158"}
