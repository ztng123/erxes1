{"metadata":{"usedHelpers":["extends","taggedTemplateLiteralLoose","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-apollo","imported":["compose","gql","graphql"],"specifiers":[{"kind":"named","imported":"compose","local":"compose"},{"kind":"named","imported":"gql","local":"gql"},{"kind":"named","imported":"graphql","local":"graphql"}]},{"source":"/imports/react-ui/engage/utils","imported":["methodCallback"],"specifiers":[{"kind":"named","imported":"methodCallback","local":"methodCallback"}]},{"source":"/imports/react-ui/common","imported":["Loading"],"specifiers":[{"kind":"named","imported":"Loading","local":"Loading"}]},{"source":"../components","imported":["VisitorForm"],"specifiers":[{"kind":"named","imported":"VisitorForm","local":"VisitorForm"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/engage/containers/VisitorForm.js","filenameRelative":"/imports/react-ui/engage/containers/VisitorForm.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/engage/containers/VisitorForm.js.map","sourceFileName":"/imports/react-ui/engage/containers/VisitorForm.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"VisitorForm"},"ignored":false,"code":"var _taggedTemplateLiteralLoose2 = require(\"babel-runtime/helpers/taggedTemplateLiteralLoose\");\n\nvar _taggedTemplateLiteralLoose3 = _interopRequireDefault(_taggedTemplateLiteralLoose2);\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _templateObject = (0, _taggedTemplateLiteralLoose3.default)([\"\\n      query engageMessageDetail($_id: String) {\\n        engageMessageDetail(_id: $_id) {\\n          _id\\n          kind\\n          segmentId\\n          customerIds\\n          title\\n          fromUserId\\n          method\\n          email\\n          isDraft\\n          isLive\\n          stopDate\\n          createdDate\\n\\n          messenger\\n        }\\n      }\\n    \"], [\"\\n      query engageMessageDetail($_id: String) {\\n        engageMessageDetail(_id: $_id) {\\n          _id\\n          kind\\n          segmentId\\n          customerIds\\n          title\\n          fromUserId\\n          method\\n          email\\n          isDraft\\n          isLive\\n          stopDate\\n          createdDate\\n\\n          messenger\\n        }\\n      }\\n    \"]),\n    _templateObject2 = (0, _taggedTemplateLiteralLoose3.default)([\"\\n      query users {\\n        users {\\n          _id\\n          username\\n          details\\n        }\\n      }\\n    \"], [\"\\n      query users {\\n        users {\\n          _id\\n          username\\n          details\\n        }\\n      }\\n    \"]);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 1);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 2);\nvar compose = void 0,\n    gql = void 0,\n    graphql = void 0;\nmodule.importSync(\"react-apollo\", {\n  compose: function (v) {\n    compose = v;\n  },\n  gql: function (v) {\n    gql = v;\n  },\n  graphql: function (v) {\n    graphql = v;\n  }\n}, 3);\nvar methodCallback = void 0;\nmodule.importSync(\"/imports/react-ui/engage/utils\", {\n  methodCallback: function (v) {\n    methodCallback = v;\n  }\n}, 4);\nvar Loading = void 0;\nmodule.importSync(\"/imports/react-ui/common\", {\n  Loading: function (v) {\n    Loading = v;\n  }\n}, 5);\nvar VisitorForm = void 0;\nmodule.importSync(\"../components\", {\n  VisitorForm: function (v) {\n    VisitorForm = v;\n  }\n}, 6);\n\nvar VisitorFormContainer = function (props) {\n  var engageMessageDetailQuery = props.engageMessageDetailQuery,\n      usersQuery = props.usersQuery,\n      messageId = props.messageId;\n\n  if (engageMessageDetailQuery.loading || usersQuery.loading) {\n    return React.createElement(Loading, {\n      title: \"Visitor auto message\",\n      spin: true,\n      sidebarSize: \"wide\"\n    });\n  } // save\n\n\n  var save = function (doc) {\n    if (messageId) {\n      return Meteor.call('engage.messages.edit', {\n        id: messageId,\n        doc: doc\n      }, methodCallback);\n    }\n\n    return Meteor.call('engage.messages.add', {\n      doc: doc\n    }, methodCallback);\n  }; // props\n\n\n  var message = engageMessageDetailQuery.engageMessageDetail;\n  var users = usersQuery.users;\n  var updatedProps = (0, _extends3.default)({}, props, {\n    save: save,\n    message: message,\n    users: users\n  });\n  return React.createElement(VisitorForm, updatedProps);\n};\n\nVisitorFormContainer.propTypes = {\n  messageId: PropTypes.string,\n  engageMessageDetailQuery: PropTypes.object,\n  usersQuery: PropTypes.object\n};\nmodule.export(\"default\", exports.default = compose(graphql(gql(_templateObject), {\n  name: 'engageMessageDetailQuery',\n  options: function (_ref) {\n    var messageId = _ref.messageId;\n    return {\n      fetchPolicy: 'network-only',\n      variables: {\n        _id: messageId\n      }\n    };\n  }\n}), graphql(gql(_templateObject2), {\n  name: 'usersQuery'\n}))(VisitorFormContainer));","map":{"version":3,"sources":["/imports/react-ui/engage/containers/VisitorForm.js"],"names":["Meteor","module","importSync","v","React","PropTypes","compose","gql","graphql","methodCallback","Loading","VisitorForm","VisitorFormContainer","engageMessageDetailQuery","props","usersQuery","messageId","loading","save","call","id","doc","message","engageMessageDetail","users","updatedProps","propTypes","string","object","export","exports","default","name","options","fetchPolicy","variables","_id"],"mappings":"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","file":"/imports/react-ui/engage/containers/VisitorForm.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose, gql, graphql } from 'react-apollo';\nimport { methodCallback } from '/imports/react-ui/engage/utils';\nimport { Loading } from '/imports/react-ui/common';\nimport { VisitorForm } from '../components';\n\nconst VisitorFormContainer = props => {\n  const { engageMessageDetailQuery, usersQuery, messageId } = props;\n\n  if (engageMessageDetailQuery.loading || usersQuery.loading) {\n    return <Loading title=\"Visitor auto message\" spin sidebarSize=\"wide\" />;\n  }\n\n  // save\n  const save = doc => {\n    if (messageId) {\n      return Meteor.call('engage.messages.edit', { id: messageId, doc }, methodCallback);\n    }\n\n    return Meteor.call('engage.messages.add', { doc }, methodCallback);\n  };\n\n  // props\n  const message = engageMessageDetailQuery.engageMessageDetail;\n  const users = usersQuery.users;\n\n  const updatedProps = {\n    ...props,\n    save,\n    message,\n    users,\n  };\n\n  return <VisitorForm {...updatedProps} />;\n};\n\nVisitorFormContainer.propTypes = {\n  messageId: PropTypes.string,\n  engageMessageDetailQuery: PropTypes.object,\n  usersQuery: PropTypes.object,\n};\n\nexport default compose(\n  graphql(\n    gql`\n      query engageMessageDetail($_id: String) {\n        engageMessageDetail(_id: $_id) {\n          _id\n          kind\n          segmentId\n          customerIds\n          title\n          fromUserId\n          method\n          email\n          isDraft\n          isLive\n          stopDate\n          createdDate\n\n          messenger\n        }\n      }\n    `,\n    {\n      name: 'engageMessageDetailQuery',\n      options: ({ messageId }) => ({\n        fetchPolicy: 'network-only',\n        variables: {\n          _id: messageId,\n        },\n      }),\n    },\n  ),\n  graphql(\n    gql`\n      query users {\n        users {\n          _id\n          username\n          details\n        }\n      }\n    `,\n    { name: 'usersQuery' },\n  ),\n)(VisitorFormContainer);\n"]},"hash":"42cfa08cd67f74ca5ccbba920f06775a10092aed"}
