{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","PropTypes","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"PropTypes","local":"PropTypes"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-bootstrap","imported":["Col","Row","FormGroup","ControlLabel","FormControl","Checkbox","ButtonGroup","Button"],"specifiers":[{"kind":"named","imported":"Col","local":"Col"},{"kind":"named","imported":"Row","local":"Row"},{"kind":"named","imported":"FormGroup","local":"FormGroup"},{"kind":"named","imported":"ControlLabel","local":"ControlLabel"},{"kind":"named","imported":"FormControl","local":"FormControl"},{"kind":"named","imported":"Checkbox","local":"Checkbox"},{"kind":"named","imported":"ButtonGroup","local":"ButtonGroup"},{"kind":"named","imported":"Button","local":"Button"}]},{"source":"/imports/react-ui/layout/components","imported":["Wrapper"],"specifiers":[{"kind":"named","imported":"Wrapper","local":"Wrapper"}]},{"source":"../../Sidebar","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Sidebar"}]},{"source":"./FieldsPreview","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"FieldsPreview"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/settings/forms/components/ManageFields.js","filenameRelative":"/imports/react-ui/settings/forms/components/ManageFields.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/settings/forms/components/ManageFields.js.map","sourceFileName":"/imports/react-ui/settings/forms/components/ManageFields.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"ManageFields"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    PropTypes = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar Col = void 0,\n    Row = void 0,\n    FormGroup = void 0,\n    ControlLabel = void 0,\n    FormControl = void 0,\n    Checkbox = void 0,\n    ButtonGroup = void 0,\n    Button = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  Col: function (v) {\n    Col = v;\n  },\n  Row: function (v) {\n    Row = v;\n  },\n  FormGroup: function (v) {\n    FormGroup = v;\n  },\n  ControlLabel: function (v) {\n    ControlLabel = v;\n  },\n  FormControl: function (v) {\n    FormControl = v;\n  },\n  Checkbox: function (v) {\n    Checkbox = v;\n  },\n  ButtonGroup: function (v) {\n    ButtonGroup = v;\n  },\n  Button: function (v) {\n    Button = v;\n  }\n}, 1);\nvar Wrapper = void 0;\nmodule.importSync(\"/imports/react-ui/layout/components\", {\n  Wrapper: function (v) {\n    Wrapper = v;\n  }\n}, 2);\nvar Sidebar = void 0;\nmodule.importSync(\"../../Sidebar\", {\n  \"default\": function (v) {\n    Sidebar = v;\n  }\n}, 3);\nvar FieldsPreview = void 0;\nmodule.importSync(\"./FieldsPreview\", {\n  \"default\": function (v) {\n    FieldsPreview = v;\n  }\n}, 4);\nvar editingFieldDefaultValue = {\n  isRequired: false\n};\n\nvar ManageFields = function (_Component) {\n  (0, _inherits3.default)(ManageFields, _Component);\n\n  function ManageFields(props) {\n    (0, _classCallCheck3.default)(this, ManageFields);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.state = {\n      fields: props.fields,\n      chosenFieldType: null,\n      editingField: editingFieldDefaultValue\n    }; // attribute change events\n\n    _this.onChangeType = _this.onChangeType.bind(_this);\n    _this.onChangeValidation = _this.onChangeValidation.bind(_this);\n    _this.onChangeText = _this.onChangeText.bind(_this);\n    _this.onChangeDescription = _this.onChangeDescription.bind(_this);\n    _this.onChangeOptions = _this.onChangeOptions.bind(_this);\n    _this.onChangeIsRequired = _this.onChangeIsRequired.bind(_this);\n    _this.onSubmit = _this.onSubmit.bind(_this);\n    _this.onFieldEdit = _this.onFieldEdit.bind(_this);\n    return _this;\n  }\n\n  ManageFields.prototype.onSubmit = function () {\n    function onSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var editingField = this.state.editingField;\n      var doc = {\n        type: editingField.type,\n        validation: editingField.validation,\n        text: editingField.text,\n        description: editingField.description,\n        options: editingField.options,\n        isRequired: editingField.isRequired\n      };\n\n      if (editingField._id) {\n        return this.props.editField(editingField._id, doc);\n      }\n\n      return this.props.addField(doc, function (fieldId) {\n        // newly created field to fields state\n        doc._id = fieldId;\n\n        _this2.state.fields.push(doc);\n\n        _this2.setState({\n          fields: _this2.state.fields\n        });\n      });\n    }\n\n    return onSubmit;\n  }();\n\n  ManageFields.prototype.onFieldEdit = function () {\n    function onFieldEdit(field) {\n      this.setState({\n        editingField: field\n      });\n    }\n\n    return onFieldEdit;\n  }();\n\n  ManageFields.prototype.onChangeType = function () {\n    function onChangeType(e) {\n      this.setState({\n        chosenFieldType: e.target.value\n      });\n      this.setChanges('type', e.target.value);\n    }\n\n    return onChangeType;\n  }();\n\n  ManageFields.prototype.onChangeValidation = function () {\n    function onChangeValidation(e) {\n      this.setChanges('validation', e.target.value);\n    }\n\n    return onChangeValidation;\n  }();\n\n  ManageFields.prototype.onChangeText = function () {\n    function onChangeText(e) {\n      this.setChanges('text', e.target.value);\n    }\n\n    return onChangeText;\n  }();\n\n  ManageFields.prototype.onChangeDescription = function () {\n    function onChangeDescription(e) {\n      this.setChanges('description', e.target.value);\n    }\n\n    return onChangeDescription;\n  }();\n\n  ManageFields.prototype.onChangeOptions = function () {\n    function onChangeOptions(e) {\n      this.setChanges('options', e.target.value.split('\\n'));\n    }\n\n    return onChangeOptions;\n  }();\n\n  ManageFields.prototype.onChangeIsRequired = function () {\n    function onChangeIsRequired(e) {\n      this.setChanges('isRequired', e.target.checked);\n    }\n\n    return onChangeIsRequired;\n  }();\n\n  ManageFields.prototype.setChanges = function () {\n    function setChanges(attributeName, value) {\n      var editingField = this.state.editingField;\n      editingField[attributeName] = value;\n      this.setState({\n        editingField: editingField\n      });\n    }\n\n    return setChanges;\n  }();\n\n  ManageFields.prototype.renderButtons = function () {\n    function renderButtons() {\n      var _this3 = this;\n\n      var _id = this.state.editingField._id;\n\n      if (_id) {\n        // reset editing field state\n        var reset = function () {\n          _this3.setState({\n            editingField: editingFieldDefaultValue\n          });\n        };\n\n        var onDelete = function (e) {\n          e.preventDefault(); // remove field from state\n\n          var fields = _this3.state.fields.filter(function (field) {\n            return field._id !== _id;\n          });\n\n          _this3.setState({\n            fields: fields\n          }); // remove field from db\n\n\n          _this3.props.deleteField(_id);\n\n          reset();\n        };\n\n        return React.createElement(\n          ButtonGroup,\n          null,\n          React.createElement(\n            Button,\n            {\n              bsSize: \"small\",\n              bsStyle: \"danger\",\n              onClick: onDelete\n            },\n            \"Delete\"\n          ),\n          React.createElement(\n            Button,\n            {\n              bsSize: \"small\",\n              bsStyle: \"primary\",\n              onClick: reset\n            },\n            \"New\"\n          ),\n          React.createElement(\n            Button,\n            {\n              bsSize: \"small\",\n              type: \"submit\",\n              bsStyle: \"success\"\n            },\n            \"Save\"\n          )\n        );\n      }\n\n      return React.createElement(\n        ButtonGroup,\n        null,\n        React.createElement(\n          Button,\n          {\n            bsSize: \"small\",\n            type: \"submit\",\n            bsStyle: \"success\"\n          },\n          \"Add\"\n        )\n      );\n    }\n\n    return renderButtons;\n  }();\n\n  ManageFields.prototype.renderOptionsTextArea = function () {\n    function renderOptionsTextArea() {\n      var _state = this.state,\n          editingField = _state.editingField,\n          chosenFieldType = _state.chosenFieldType;\n\n      if (!['select', 'check', 'radio'].includes(chosenFieldType || editingField.type)) {\n        return null;\n      }\n\n      return React.createElement(\n        FormGroup,\n        null,\n        React.createElement(\n          ControlLabel,\n          {\n            htmlFor: \"type\"\n          },\n          \"Options:\"\n        ),\n        React.createElement(FormControl, {\n          id: \"options\",\n          componentClass: \"textarea\",\n          value: (editingField.options || []).join('\\n'),\n          onChange: this.onChangeOptions\n        })\n      );\n    }\n\n    return renderOptionsTextArea;\n  }();\n\n  ManageFields.prototype.renderForm = function () {\n    function renderForm() {\n      var editingField = this.state.editingField;\n      return React.createElement(\n        \"form\",\n        {\n          onSubmit: this.onSubmit\n        },\n        React.createElement(\n          FormGroup,\n          null,\n          React.createElement(\n            ControlLabel,\n            {\n              htmlFor: \"type\"\n            },\n            \"Type:\"\n          ),\n          React.createElement(\n            FormControl,\n            {\n              id: \"type\",\n              componentClass: \"select\",\n              value: editingField.type || '',\n              onChange: this.onChangeType\n            },\n            React.createElement(\"option\", null),\n            React.createElement(\n              \"option\",\n              {\n                value: \"input\"\n              },\n              \"Input\"\n            ),\n            React.createElement(\n              \"option\",\n              {\n                value: \"textarea\"\n              },\n              \"Text area\"\n            ),\n            React.createElement(\n              \"option\",\n              {\n                value: \"select\"\n              },\n              \"Select\"\n            ),\n            React.createElement(\n              \"option\",\n              {\n                value: \"check\"\n              },\n              \"Checkbox\"\n            ),\n            React.createElement(\n              \"option\",\n              {\n                value: \"radio\"\n              },\n              \"Radio button\"\n            ),\n            React.createElement(\n              \"option\",\n              {\n                value: \"email\"\n              },\n              \"Email\"\n            ),\n            React.createElement(\n              \"option\",\n              {\n                value: \"firstName\"\n              },\n              \"First name\"\n            ),\n            React.createElement(\n              \"option\",\n              {\n                value: \"lastName\"\n              },\n              \"Last name\"\n            )\n          )\n        ),\n        React.createElement(\n          FormGroup,\n          null,\n          React.createElement(\n            ControlLabel,\n            {\n              htmlFor: \"validation\"\n            },\n            \"Validation:\"\n          ),\n          React.createElement(\n            FormControl,\n            {\n              id: \"validation\",\n              componentClass: \"select\",\n              value: editingField.validation || '',\n              onChange: this.onChangeValidation\n            },\n            React.createElement(\"option\", null),\n            React.createElement(\n              \"option\",\n              {\n                value: \"email\"\n              },\n              \"Email\"\n            ),\n            React.createElement(\n              \"option\",\n              {\n                value: \"number\"\n              },\n              \"Number\"\n            ),\n            React.createElement(\n              \"option\",\n              {\n                value: \"date\"\n              },\n              \"Date\"\n            )\n          )\n        ),\n        React.createElement(\n          FormGroup,\n          null,\n          React.createElement(\n            ControlLabel,\n            {\n              htmlFor: \"text\"\n            },\n            \"Text:\"\n          ),\n          React.createElement(FormControl, {\n            id: \"text\",\n            type: \"text\",\n            value: editingField.text || '',\n            onChange: this.onChangeText\n          })\n        ),\n        React.createElement(\n          FormGroup,\n          null,\n          React.createElement(\n            ControlLabel,\n            {\n              htmlFor: \"description\"\n            },\n            \"Description:\"\n          ),\n          React.createElement(FormControl, {\n            id: \"description\",\n            componentClass: \"textarea\",\n            value: editingField.description || '',\n            onChange: this.onChangeDescription\n          })\n        ),\n        this.renderOptionsTextArea(),\n        React.createElement(\n          \"div\",\n          {\n            className: \"flex-row\"\n          },\n          React.createElement(\n            FormGroup,\n            {\n              className: \"flex-item\"\n            },\n            React.createElement(\n              Checkbox,\n              {\n                id: \"isRequired\",\n                onChange: this.onChangeIsRequired,\n                checked: editingField.isRequired || false\n              },\n              \"Required:\"\n            )\n          ),\n          this.renderButtons()\n        )\n      );\n    }\n\n    return renderForm;\n  }();\n\n  ManageFields.prototype.render = function () {\n    function render() {\n      var content = React.createElement(\n        \"div\",\n        {\n          className: \"form-builder margined\"\n        },\n        React.createElement(\n          Row,\n          null,\n          React.createElement(\n            Col,\n            {\n              sm: 5,\n              className: \"fixed\"\n            },\n            this.renderForm()\n          ),\n          React.createElement(\n            Col,\n            {\n              sm: 7,\n              xsOffset: 5\n            },\n            React.createElement(FieldsPreview, {\n              fields: this.state.fields,\n              onFieldEdit: this.onFieldEdit,\n              onSort: this.props.onSort\n            })\n          )\n        )\n      );\n      var breadcrumb = [{\n        title: 'Settings',\n        link: '/settings/channels'\n      }, {\n        title: 'Forms',\n        link: '/settings/forms'\n      }, {\n        title: this.props.formTitle\n      }];\n      return React.createElement(Wrapper, {\n        header: React.createElement(Wrapper.Header, {\n          breadcrumb: breadcrumb\n        }),\n        leftSidebar: React.createElement(Sidebar, null),\n        content: content\n      });\n    }\n\n    return render;\n  }();\n\n  return ManageFields;\n}(Component);\n\nManageFields.propTypes = {\n  addField: PropTypes.func.isRequired,\n  editField: PropTypes.func.isRequired,\n  deleteField: PropTypes.func.isRequired,\n  onSort: PropTypes.func.isRequired,\n  formTitle: PropTypes.string.isRequired,\n  fields: PropTypes.array.isRequired\n};\nmodule.export(\"default\", exports.default = ManageFields);","map":{"version":3,"sources":["/imports/react-ui/settings/forms/components/ManageFields.js"],"names":["React","PropTypes","Component","module","importSync","v","Col","Row","FormGroup","ControlLabel","FormControl","Checkbox","ButtonGroup","Button","Wrapper","Sidebar","FieldsPreview","editingFieldDefaultValue","isRequired","ManageFields","props","state","fields","chosenFieldType","editingField","onChangeType","bind","onChangeValidation","onChangeText","onChangeDescription","onChangeOptions","onChangeIsRequired","onSubmit","onFieldEdit","e","preventDefault","doc","type","validation","text","description","options","_id","editField","addField","fieldId","push","setState","field","target","value","setChanges","split","checked","attributeName","renderButtons","reset","onDelete","filter","deleteField","renderOptionsTextArea","includes","join","renderForm","render","content","onSort","breadcrumb","title","link","formTitle","propTypes","func","string","array","export","exports","default"],"mappings":"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","file":"/imports/react-ui/settings/forms/components/ManageFields.js.map","sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nimport React, { PropTypes, Component } from 'react';\nimport {\n  Col,\n  Row,\n  FormGroup,\n  ControlLabel,\n  FormControl,\n  Checkbox,\n  ButtonGroup,\n  Button,\n} from 'react-bootstrap';\nimport { Wrapper } from '/imports/react-ui/layout/components';\nimport Sidebar from '../../Sidebar';\nimport FieldsPreview from './FieldsPreview';\n\nconst editingFieldDefaultValue = {\n  isRequired: false,\n};\n\nclass ManageFields extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fields: props.fields,\n      chosenFieldType: null,\n      editingField: editingFieldDefaultValue,\n    };\n\n    // attribute change events\n    this.onChangeType = this.onChangeType.bind(this);\n    this.onChangeValidation = this.onChangeValidation.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeOptions = this.onChangeOptions.bind(this);\n    this.onChangeIsRequired = this.onChangeIsRequired.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onFieldEdit = this.onFieldEdit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const editingField = this.state.editingField;\n\n    const doc = {\n      type: editingField.type,\n      validation: editingField.validation,\n      text: editingField.text,\n      description: editingField.description,\n      options: editingField.options,\n      isRequired: editingField.isRequired,\n    };\n\n    if (editingField._id) {\n      return this.props.editField(editingField._id, doc);\n    }\n\n    return this.props.addField(doc, fieldId => {\n      // newly created field to fields state\n      doc._id = fieldId;\n\n      this.state.fields.push(doc);\n\n      this.setState({ fields: this.state.fields });\n    });\n  }\n\n  onFieldEdit(field) {\n    this.setState({ editingField: field });\n  }\n\n  onChangeType(e) {\n    this.setState({ chosenFieldType: e.target.value });\n    this.setChanges('type', e.target.value);\n  }\n\n  onChangeValidation(e) {\n    this.setChanges('validation', e.target.value);\n  }\n\n  onChangeText(e) {\n    this.setChanges('text', e.target.value);\n  }\n\n  onChangeDescription(e) {\n    this.setChanges('description', e.target.value);\n  }\n\n  onChangeOptions(e) {\n    this.setChanges('options', e.target.value.split('\\n'));\n  }\n\n  onChangeIsRequired(e) {\n    this.setChanges('isRequired', e.target.checked);\n  }\n\n  setChanges(attributeName, value) {\n    const { editingField } = this.state;\n\n    editingField[attributeName] = value;\n\n    this.setState({ editingField });\n  }\n\n  renderButtons() {\n    const _id = this.state.editingField._id;\n\n    if (_id) {\n      // reset editing field state\n      const reset = () => {\n        this.setState({ editingField: editingFieldDefaultValue });\n      };\n\n      const onDelete = e => {\n        e.preventDefault();\n\n        // remove field from state\n        const fields = this.state.fields.filter(field => field._id !== _id);\n\n        this.setState({ fields });\n\n        // remove field from db\n        this.props.deleteField(_id);\n\n        reset();\n      };\n\n      return (\n        <ButtonGroup>\n          <Button bsSize=\"small\" bsStyle=\"danger\" onClick={onDelete}>\n            Delete\n          </Button>\n          <Button bsSize=\"small\" bsStyle=\"primary\" onClick={reset}>New</Button>\n          <Button bsSize=\"small\" type=\"submit\" bsStyle=\"success\">Save</Button>\n        </ButtonGroup>\n      );\n    }\n\n    return (\n      <ButtonGroup>\n        <Button bsSize=\"small\" type=\"submit\" bsStyle=\"success\">Add</Button>\n      </ButtonGroup>\n    );\n  }\n\n  renderOptionsTextArea() {\n    const { editingField, chosenFieldType } = this.state;\n\n    if (!['select', 'check', 'radio'].includes(chosenFieldType || editingField.type)) {\n      return null;\n    }\n\n    return (\n      <FormGroup>\n        <ControlLabel htmlFor=\"type\">Options:</ControlLabel>\n\n        <FormControl\n          id=\"options\"\n          componentClass=\"textarea\"\n          value={(editingField.options || []).join('\\n')}\n          onChange={this.onChangeOptions}\n        />\n      </FormGroup>\n    );\n  }\n\n  renderForm() {\n    const editingField = this.state.editingField;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <FormGroup>\n          <ControlLabel htmlFor=\"type\">Type:</ControlLabel>\n\n          <FormControl\n            id=\"type\"\n            componentClass=\"select\"\n            value={editingField.type || ''}\n            onChange={this.onChangeType}\n          >\n\n            <option />\n            <option value=\"input\">Input</option>\n            <option value=\"textarea\">Text area</option>\n            <option value=\"select\">Select</option>\n            <option value=\"check\">Checkbox</option>\n            <option value=\"radio\">Radio button</option>\n            <option value=\"email\">Email</option>\n            <option value=\"firstName\">First name</option>\n            <option value=\"lastName\">Last name</option>\n          </FormControl>\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel htmlFor=\"validation\">Validation:</ControlLabel>\n\n          <FormControl\n            id=\"validation\"\n            componentClass=\"select\"\n            value={editingField.validation || ''}\n            onChange={this.onChangeValidation}\n          >\n\n            <option />\n            <option value=\"email\">Email</option>\n            <option value=\"number\">Number</option>\n            <option value=\"date\">Date</option>\n          </FormControl>\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel htmlFor=\"text\">Text:</ControlLabel>\n          <FormControl\n            id=\"text\"\n            type=\"text\"\n            value={editingField.text || ''}\n            onChange={this.onChangeText}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel htmlFor=\"description\">Description:</ControlLabel>\n          <FormControl\n            id=\"description\"\n            componentClass=\"textarea\"\n            value={editingField.description || ''}\n            onChange={this.onChangeDescription}\n          />\n        </FormGroup>\n\n        {this.renderOptionsTextArea()}\n        <div className=\"flex-row\">\n          <FormGroup className=\"flex-item\">\n            <Checkbox\n              id=\"isRequired\"\n              onChange={this.onChangeIsRequired}\n              checked={editingField.isRequired || false}\n            >\n              Required:\n            </Checkbox>\n          </FormGroup>\n\n          {this.renderButtons()}\n        </div>\n      </form>\n    );\n  }\n\n  render() {\n    const content = (\n      <div className=\"form-builder margined\">\n        <Row>\n          <Col sm={5} className=\"fixed\">\n            {this.renderForm()}\n          </Col>\n\n          <Col sm={7} xsOffset={5}>\n            <FieldsPreview\n              fields={this.state.fields}\n              onFieldEdit={this.onFieldEdit}\n              onSort={this.props.onSort}\n            />\n          </Col>\n        </Row>\n      </div>\n    );\n\n    const breadcrumb = [\n      { title: 'Settings', link: '/settings/channels' },\n      { title: 'Forms', link: '/settings/forms' },\n      { title: this.props.formTitle },\n    ];\n\n    return (\n      <Wrapper\n        header={<Wrapper.Header breadcrumb={breadcrumb} />}\n        leftSidebar={<Sidebar />}\n        content={content}\n      />\n    );\n  }\n}\n\nManageFields.propTypes = {\n  addField: PropTypes.func.isRequired,\n  editField: PropTypes.func.isRequired,\n  deleteField: PropTypes.func.isRequired,\n  onSort: PropTypes.func.isRequired,\n  formTitle: PropTypes.string.isRequired,\n  fields: PropTypes.array.isRequired, // eslint-disable-line\n};\n\nexport default ManageFields;\n"]},"hash":"74660c951e4a2bd47ea57b9fe4bd6a9cc749dce8"}
