{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-bootstrap","imported":["Form","FormControl","Button"],"specifiers":[{"kind":"named","imported":"Form","local":"Form"},{"kind":"named","imported":"FormControl","local":"FormControl"},{"kind":"named","imported":"Button","local":"Button"}]},{"source":"lodash/debounce","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"debounce"}]},{"source":"/imports/api/customers/constants","imported":["types","operators","dateUnits"],"specifiers":[{"kind":"named","imported":"types","local":"types"},{"kind":"named","imported":"operators","local":"operators"},{"kind":"named","imported":"dateUnits","local":"dateUnits"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/segments/components/Condition.js","filenameRelative":"/imports/react-ui/segments/components/Condition.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/segments/components/Condition.js.map","sourceFileName":"/imports/react-ui/segments/components/Condition.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Condition"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar Form = void 0,\n    FormControl = void 0,\n    Button = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  Form: function (v) {\n    Form = v;\n  },\n  FormControl: function (v) {\n    FormControl = v;\n  },\n  Button: function (v) {\n    Button = v;\n  }\n}, 2);\nvar debounce = void 0;\nmodule.importSync(\"lodash/debounce\", {\n  \"default\": function (v) {\n    debounce = v;\n  }\n}, 3);\nvar types = void 0,\n    operators = void 0,\n    dateUnits = void 0;\nmodule.importSync(\"/imports/api/customers/constants\", {\n  types: function (v) {\n    types = v;\n  },\n  operators: function (v) {\n    operators = v;\n  },\n  dateUnits: function (v) {\n    dateUnits = v;\n  }\n}, 4);\nvar propTypes = {\n  condition: PropTypes.object.isRequired,\n  changeCondition: PropTypes.func.isRequired,\n  removeCondition: PropTypes.func.isRequired\n};\n\nvar Condition = function (_Component) {\n  (0, _inherits3.default)(Condition, _Component);\n\n  function Condition(props) {\n    (0, _classCallCheck3.default)(this, Condition);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.state = _this.props.condition;\n    _this.handleInputValue = _this.handleInputValue.bind(_this);\n    _this.handleValue = _this.handleValue.bind(_this);\n    _this.removeCondition = _this.removeCondition.bind(_this);\n    _this.renderValueInput = _this.renderValueInput.bind(_this); // debounce text input\n\n    _this.changeCondition = debounce(_this.props.changeCondition, 350);\n    return _this;\n  }\n\n  Condition.prototype.handleInputValue = function () {\n    function handleInputValue(e) {\n      var _states,\n          _this2 = this;\n\n      e.preventDefault();\n      var states = (_states = {}, _states[e.target.name] = e.target.value, _states); // Changing current operator when the type is changed\n\n      if (e.target.name === 'type') {\n        states.operator = operators[e.target.value][0].value;\n      }\n\n      this.setState(states, function () {\n        var _state = _this2.state,\n            field = _state.field,\n            operator = _state.operator,\n            value = _state.value,\n            dateUnit = _state.dateUnit,\n            type = _state.type;\n\n        _this2.props.changeCondition({\n          field: field,\n          operator: operator,\n          value: value,\n          dateUnit: dateUnit,\n          type: type\n        });\n      });\n    }\n\n    return handleInputValue;\n  }(); // changeCondition will be fired after 350ms\n\n\n  Condition.prototype.handleValue = function () {\n    function handleValue(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n      var val = e.target.value;\n      this.setState({\n        value: val\n      }, function () {\n        var _state2 = _this3.state,\n            field = _state2.field,\n            operator = _state2.operator,\n            value = _state2.value,\n            dateUnit = _state2.dateUnit,\n            type = _state2.type;\n\n        _this3.changeCondition({\n          field: field,\n          operator: operator,\n          value: value,\n          dateUnit: dateUnit,\n          type: type\n        });\n      });\n    }\n\n    return handleValue;\n  }();\n\n  Condition.prototype.removeCondition = function () {\n    function removeCondition() {\n      this.props.removeCondition(this.props.condition.field);\n    }\n\n    return removeCondition;\n  }();\n\n  Condition.prototype.renderValueInput = function () {\n    function renderValueInput() {\n      var _state3 = this.state,\n          type = _state3.type,\n          operator = _state3.operator;\n      var currentOperator = operators[type].find(function (o) {\n        return o.value === operator;\n      });\n\n      if (!currentOperator || currentOperator.noInput) {\n        return null;\n      }\n\n      var valueInput = React.createElement(FormControl, {\n        name: \"value\",\n        type: type === 'number' ? 'number' : 'text',\n        value: this.state.value,\n        onChange: this.handleValue\n      });\n      var dateUnitInput = React.createElement(\n        FormControl,\n        {\n          name: \"dateUnit\",\n          componentClass: \"select\",\n          placeholder: \"select\",\n          value: this.state.dateUnit,\n          onChange: this.handleInputValue\n        },\n        Object.keys(dateUnits).map(function (key) {\n          return React.createElement(\n            \"option\",\n            {\n              value: key,\n              key: key\n            },\n            dateUnits[key]\n          );\n        })\n      );\n      return React.createElement(\n        \"span\",\n        null,\n        valueInput,\n        type === 'date' ? dateUnitInput : null,\n        type === 'date' && (operator === 'wlt' || operator === 'wmt') ? ' ago' : null\n      );\n    }\n\n    return renderValueInput;\n  }();\n\n  Condition.prototype.render = function () {\n    function render() {\n      var condition = this.props.condition;\n      return React.createElement(\n        Form,\n        {\n          inline: true,\n          className: \"clearfix\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"pull-left\"\n          },\n          React.createElement(\n            \"span\",\n            null,\n            condition.field\n          ),\n          ' ',\n          React.createElement(\n            FormControl,\n            {\n              name: \"operator\",\n              componentClass: \"select\",\n              placeholder: \"select\",\n              value: this.state.operator,\n              onChange: this.handleInputValue\n            },\n            operators[this.state.type].map(function (c) {\n              return React.createElement(\n                \"option\",\n                {\n                  value: c.value,\n                  key: c.value\n                },\n                c.name\n              );\n            })\n          ),\n          ' ',\n          this.renderValueInput()\n        ),\n        React.createElement(\n          \"div\",\n          {\n            className: \"pull-right\"\n          },\n          React.createElement(\n            FormControl,\n            {\n              name: \"type\",\n              componentClass: \"select\",\n              placeholder: \"select\",\n              value: this.state.type,\n              onChange: this.handleInputValue\n            },\n            Object.keys(types).map(function (key) {\n              return React.createElement(\n                \"option\",\n                {\n                  value: key,\n                  key: key\n                },\n                types[key]\n              );\n            })\n          ),\n          React.createElement(\n            Button,\n            {\n              bsStyle: \"link\",\n              onClick: this.removeCondition\n            },\n            React.createElement(\"i\", {\n              className: \"ion-close-circled\"\n            })\n          )\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return Condition;\n}(Component);\n\nCondition.propTypes = propTypes;\nmodule.export(\"default\", exports.default = Condition);","map":{"version":3,"sources":["/imports/react-ui/segments/components/Condition.js"],"names":["React","Component","module","importSync","v","PropTypes","Form","FormControl","Button","debounce","types","operators","dateUnits","propTypes","condition","object","isRequired","changeCondition","func","removeCondition","Condition","props","state","handleInputValue","bind","handleValue","renderValueInput","e","preventDefault","states","target","name","value","operator","setState","field","dateUnit","type","val","currentOperator","find","o","noInput","valueInput","dateUnitInput","Object","keys","map","key","render","c","export","exports","default"],"mappings":"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","file":"/imports/react-ui/segments/components/Condition.js.map","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormControl, Button } from 'react-bootstrap';\nimport debounce from 'lodash/debounce';\nimport { types, operators, dateUnits } from '/imports/api/customers/constants';\n\nconst propTypes = {\n  condition: PropTypes.object.isRequired,\n  changeCondition: PropTypes.func.isRequired,\n  removeCondition: PropTypes.func.isRequired,\n};\n\nclass Condition extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.props.condition;\n    this.handleInputValue = this.handleInputValue.bind(this);\n    this.handleValue = this.handleValue.bind(this);\n    this.removeCondition = this.removeCondition.bind(this);\n    this.renderValueInput = this.renderValueInput.bind(this);\n\n    // debounce text input\n    this.changeCondition = debounce(this.props.changeCondition, 350);\n  }\n\n  handleInputValue(e) {\n    e.preventDefault();\n\n    const states = { [e.target.name]: e.target.value };\n\n    // Changing current operator when the type is changed\n    if (e.target.name === 'type') {\n      states.operator = operators[e.target.value][0].value;\n    }\n\n    this.setState(states, () => {\n      const { field, operator, value, dateUnit, type } = this.state;\n      this.props.changeCondition({ field, operator, value, dateUnit, type });\n    });\n  }\n\n  // changeCondition will be fired after 350ms\n  handleValue(e) {\n    e.preventDefault();\n\n    const val = e.target.value;\n\n    this.setState({ value: val }, () => {\n      const { field, operator, value, dateUnit, type } = this.state;\n      this.changeCondition({ field, operator, value, dateUnit, type });\n    });\n  }\n\n  removeCondition() {\n    this.props.removeCondition(this.props.condition.field);\n  }\n\n  renderValueInput() {\n    const { type, operator } = this.state;\n    const currentOperator = operators[type].find(o => o.value === operator);\n\n    if (!currentOperator || currentOperator.noInput) {\n      return null;\n    }\n\n    const valueInput = (\n      <FormControl\n        name=\"value\"\n        type={type === 'number' ? 'number' : 'text'}\n        value={this.state.value}\n        onChange={this.handleValue}\n      />\n    );\n\n    const dateUnitInput = (\n      <FormControl\n        name=\"dateUnit\"\n        componentClass=\"select\"\n        placeholder=\"select\"\n        value={this.state.dateUnit}\n        onChange={this.handleInputValue}\n      >\n        {Object.keys(dateUnits).map(key => <option value={key} key={key}>{dateUnits[key]}</option>)}\n      </FormControl>\n    );\n\n    return (\n      <span>\n        {valueInput}\n        {type === 'date' ? dateUnitInput : null}\n        {type === 'date' && (operator === 'wlt' || operator === 'wmt') ? ' ago' : null}\n      </span>\n    );\n  }\n\n  render() {\n    const { condition } = this.props;\n\n    return (\n      <Form inline className=\"clearfix\">\n        <div className=\"pull-left\">\n          <span>{condition.field}</span>{' '}\n          <FormControl\n            name=\"operator\"\n            componentClass=\"select\"\n            placeholder=\"select\"\n            value={this.state.operator}\n            onChange={this.handleInputValue}\n          >\n            {operators[this.state.type].map(c => (\n              <option value={c.value} key={c.value}>{c.name}</option>\n            ))}\n          </FormControl>{' '}\n          {this.renderValueInput()}\n        </div>\n        <div className=\"pull-right\">\n          <FormControl\n            name=\"type\"\n            componentClass=\"select\"\n            placeholder=\"select\"\n            value={this.state.type}\n            onChange={this.handleInputValue}\n          >\n            {Object.keys(types).map(key => <option value={key} key={key}>{types[key]}</option>)}\n          </FormControl>\n          <Button bsStyle=\"link\" onClick={this.removeCondition}>\n            <i className=\"ion-close-circled\" />\n          </Button>\n        </div>\n      </Form>\n    );\n  }\n}\n\nCondition.propTypes = propTypes;\n\nexport default Condition;\n"]},"hash":"60f4b47af3ff7899493e3715fb5dabde56154e62"}
