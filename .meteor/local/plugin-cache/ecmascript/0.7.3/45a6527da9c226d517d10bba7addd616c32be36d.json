{"metadata":{"usedHelpers":["extends","taggedTemplateLiteralLoose","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-apollo","imported":["compose","gql","graphql"],"specifiers":[{"kind":"named","imported":"compose","local":"compose"},{"kind":"named","imported":"gql","local":"gql"},{"kind":"named","imported":"graphql","local":"graphql"}]},{"source":"../components","imported":["UserForm"],"specifiers":[{"kind":"named","imported":"UserForm","local":"UserForm"}]},{"source":"/imports/react-ui/common","imported":["Spinner"],"specifiers":[{"kind":"named","imported":"Spinner","local":"Spinner"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/settings/team/containers/UserForm.js","filenameRelative":"/imports/react-ui/settings/team/containers/UserForm.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/settings/team/containers/UserForm.js.map","sourceFileName":"/imports/react-ui/settings/team/containers/UserForm.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"UserForm"},"ignored":false,"code":"var _taggedTemplateLiteralLoose2 = require(\"babel-runtime/helpers/taggedTemplateLiteralLoose\");\n\nvar _taggedTemplateLiteralLoose3 = _interopRequireDefault(_taggedTemplateLiteralLoose2);\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _templateObject = (0, _taggedTemplateLiteralLoose3.default)([\"\\n      query channels {\\n        channels {\\n          _id\\n          name\\n          memberIds\\n        }\\n      }\\n    \"], [\"\\n      query channels {\\n        channels {\\n          _id\\n          name\\n          memberIds\\n        }\\n      }\\n    \"]);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar compose = void 0,\n    gql = void 0,\n    graphql = void 0;\nmodule.importSync(\"react-apollo\", {\n  compose: function (v) {\n    compose = v;\n  },\n  gql: function (v) {\n    gql = v;\n  },\n  graphql: function (v) {\n    graphql = v;\n  }\n}, 2);\nvar UserForm = void 0;\nmodule.importSync(\"../components\", {\n  UserForm: function (v) {\n    UserForm = v;\n  }\n}, 3);\nvar Spinner = void 0;\nmodule.importSync(\"/imports/react-ui/common\", {\n  Spinner: function (v) {\n    Spinner = v;\n  }\n}, 4);\n\nvar UserFormContainer = function (props) {\n  var _props$object = props.object,\n      object = _props$object === undefined ? {} : _props$object,\n      channelsQuery = props.channelsQuery;\n\n  if (channelsQuery.loading) {\n    return React.createElement(Spinner, null);\n  }\n\n  var channels = channelsQuery.channels;\n  var selectedChannels = [];\n\n  if (object._id) {\n    selectedChannels = channels.filter(function (c) {\n      return c.memberIds.includes(object._id);\n    });\n  }\n\n  var updatedProps = (0, _extends3.default)({}, props, {\n    selectedChannels: selectedChannels,\n    channels: channels\n  });\n  return React.createElement(UserForm, updatedProps);\n};\n\nUserFormContainer.propTypes = {\n  object: PropTypes.object,\n  channelsQuery: PropTypes.object\n};\nmodule.export(\"default\", exports.default = compose(graphql(gql(_templateObject), {\n  name: 'channelsQuery',\n  options: function () {\n    return {\n      fetchPolicy: 'network-only'\n    };\n  }\n}))(UserFormContainer));","map":{"version":3,"sources":["/imports/react-ui/settings/team/containers/UserForm.js"],"names":["React","module","importSync","v","PropTypes","compose","gql","graphql","UserForm","Spinner","UserFormContainer","props","object","channelsQuery","loading","channels","selectedChannels","_id","filter","c","memberIds","includes","updatedProps","propTypes","export","exports","default","name","options","fetchPolicy"],"mappings":";;;;;;;;;;;;AAAA,IAAIA,cAAJ;AAAUC,OAAOC,UAAP,CAAkB,OAAlB,EAA0B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACH,YAAMG,CAAN;AAAQ;AAA7B,CAA1B,EAAyD,CAAzD;AAA4D,IAAIC,kBAAJ;AAAcH,OAAOC,UAAP,CAAkB,YAAlB,EAA+B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACC,gBAAUD,CAAV;AAAY;AAAjC,CAA/B,EAAkE,CAAlE;AAAqE,IAAIE,gBAAJ;AAAA,IAAYC,YAAZ;AAAA,IAAgBC,gBAAhB;AAAwBN,OAAOC,UAAP,CAAkB,cAAlB,EAAiC;AAACG,WAAQ,UAASF,CAAT,EAAW;AAACE,cAAQF,CAAR;AAAU,GAA/B;AAAgCG,OAAI,UAASH,CAAT,EAAW;AAACG,UAAIH,CAAJ;AAAM,GAAtD;AAAuDI,WAAQ,UAASJ,CAAT,EAAW;AAACI,cAAQJ,CAAR;AAAU;AAArF,CAAjC,EAAwH,CAAxH;AAA2H,IAAIK,iBAAJ;AAAaP,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACM,YAAS,UAASL,CAAT,EAAW;AAACK,eAASL,CAAT;AAAW;AAAjC,CAAlC,EAAqE,CAArE;AAAwE,IAAIM,gBAAJ;AAAYR,OAAOC,UAAP,CAAkB,0BAAlB,EAA6C;AAACO,WAAQ,UAASN,CAAT,EAAW;AAACM,cAAQN,CAAR;AAAU;AAA/B,CAA7C,EAA8E,CAA9E;;AAM7Y,IAAMO,oBAAoB,iBAAS;AAAA,sBACMC,KADN,CACzBC,MADyB;AAAA,MACzBA,MADyB,iCAChB,EADgB;AAAA,MACZC,aADY,GACMF,KADN,CACZE,aADY;;AAGjC,MAAIA,cAAcC,OAAlB,EAA2B;AACzB,WAAO,oBAAC,OAAD,OAAP;AACD;;AAED,MAAMC,WAAWF,cAAcE,QAA/B;AAEA,MAAIC,mBAAmB,EAAvB;;AAEA,MAAIJ,OAAOK,GAAX,EAAgB;AACdD,uBAAmBD,SAASG,MAAT,CAAgB;AAAA,aAAKC,EAAEC,SAAF,CAAYC,QAAZ,CAAqBT,OAAOK,GAA5B,CAAL;AAAA,KAAhB,CAAnB;AACD;;AAED,MAAMK,0CACDX,KADC;AAEJK,sCAFI;AAGJD;AAHI,IAAN;AAMA,SAAO,oBAAC,QAAD,EAAcO,YAAd,CAAP;AACD,CAtBD;;AAwBAZ,kBAAkBa,SAAlB,GAA8B;AAC5BX,UAAQR,UAAUQ,MADU;AAE5BC,iBAAeT,UAAUQ;AAFG,CAA9B;AA9BAX,OAAOuB,MAAP,CAAc,SAAd,EAAwBC,QAAQC,OAAR,GAmCTrB,QACbE,QACED,GADF,mBAUE;AACEqB,QAAM,eADR;AAEEC,WAAS;AAAA,WAAO;AACdC,mBAAa;AADC,KAAP;AAAA;AAFX,CAVF,CADa,EAkBbnB,iBAlBa,CAnCf","file":"/imports/react-ui/settings/team/containers/UserForm.js.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose, gql, graphql } from 'react-apollo';\nimport { UserForm } from '../components';\nimport { Spinner } from '/imports/react-ui/common';\n\nconst UserFormContainer = props => {\n  const { object = {}, channelsQuery } = props;\n\n  if (channelsQuery.loading) {\n    return <Spinner />;\n  }\n\n  const channels = channelsQuery.channels;\n\n  let selectedChannels = [];\n\n  if (object._id) {\n    selectedChannels = channels.filter(c => c.memberIds.includes(object._id));\n  }\n\n  const updatedProps = {\n    ...props,\n    selectedChannels,\n    channels,\n  };\n\n  return <UserForm {...updatedProps} />;\n};\n\nUserFormContainer.propTypes = {\n  object: PropTypes.object,\n  channelsQuery: PropTypes.object,\n};\n\nexport default compose(\n  graphql(\n    gql`\n      query channels {\n        channels {\n          _id\n          name\n          memberIds\n        }\n      }\n    `,\n    {\n      name: 'channelsQuery',\n      options: () => ({\n        fetchPolicy: 'network-only',\n      }),\n    },\n  ),\n)(UserFormContainer);\n"]},"hash":"45a6527da9c226d517d10bba7addd616c32be36d"}
