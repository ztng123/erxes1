{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]}],"exports":{"exported":["FieldPreview"],"specifiers":[{"kind":"local","local":"FieldPreview","exported":"default"}]}}},"options":{"filename":"/imports/react-ui/settings/forms/components/FieldPreview.js","filenameRelative":"/imports/react-ui/settings/forms/components/FieldPreview.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/settings/forms/components/FieldPreview.js.map","sourceFileName":"/imports/react-ui/settings/forms/components/FieldPreview.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"FieldPreview"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  \"default\": function () {\n    return FieldPreview;\n  }\n});\nvar React = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\n\nvar FieldPreview = function (_Component) {\n  (0, _inherits3.default)(FieldPreview, _Component);\n\n  FieldPreview.renderSelect = function () {\n    function renderSelect() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return React.createElement(\n        \"select\",\n        (0, _extends3.default)({}, attrs, {\n          className: \"form-control\"\n        }),\n        options.map(function (option, index) {\n          return React.createElement(\n            \"option\",\n            {\n              key: index,\n              value: option\n            },\n            option\n          );\n        })\n      );\n    }\n\n    return renderSelect;\n  }();\n\n  FieldPreview.renderInput = function () {\n    function renderInput(attrs) {\n      return React.createElement(\"input\", (0, _extends3.default)({}, attrs, {\n        className: \"form-control\"\n      }));\n    }\n\n    return renderInput;\n  }();\n\n  FieldPreview.renderTextarea = function () {\n    function renderTextarea(attrs) {\n      return React.createElement(\"textarea\", (0, _extends3.default)({}, attrs, {\n        className: \"form-control\"\n      }));\n    }\n\n    return renderTextarea;\n  }();\n\n  FieldPreview.renderRadioOrCheckInputs = function () {\n    function renderRadioOrCheckInputs(options, type) {\n      return React.createElement(\n        \"div\",\n        {\n          className: \"check-control\"\n        },\n        options.map(function (option, index) {\n          return React.createElement(\n            \"div\",\n            {\n              key: index\n            },\n            FieldPreview.renderInput({\n              type: type\n            }),\n            React.createElement(\n              \"span\",\n              null,\n              option\n            )\n          );\n        })\n      );\n    }\n\n    return renderRadioOrCheckInputs;\n  }();\n\n  function FieldPreview(props) {\n    (0, _classCallCheck3.default)(this, FieldPreview);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.onEdit = _this.onEdit.bind(_this);\n    return _this;\n  }\n\n  FieldPreview.prototype.onEdit = function () {\n    function onEdit() {\n      this.props.onEdit(this.props.field);\n    }\n\n    return onEdit;\n  }();\n\n  FieldPreview.prototype.renderControl = function () {\n    function renderControl() {\n      var field = this.props.field;\n      var options = field.options || [];\n\n      switch (field.type) {\n        case 'select':\n          return FieldPreview.renderSelect(options);\n\n        case 'check':\n          return FieldPreview.renderRadioOrCheckInputs(options, 'checkbox');\n\n        case 'radio':\n          return FieldPreview.renderRadioOrCheckInputs(options, 'radio');\n\n        case 'textarea':\n          return FieldPreview.renderTextarea({});\n\n        default:\n          return FieldPreview.renderInput({\n            type: 'text'\n          });\n      }\n    }\n\n    return renderControl;\n  }();\n\n  FieldPreview.prototype.render = function () {\n    function render() {\n      var field = this.props.field;\n      return React.createElement(\n        \"div\",\n        {\n          className: \"form-group field-preview\",\n          onClick: this.onEdit\n        },\n        React.createElement(\n          \"label\",\n          {\n            className: \"control-label\",\n            htmlFor: \"prew-\" + field._id\n          },\n          field.text,\n          field.isRequired ? React.createElement(\n            \"span\",\n            {\n              className: \"required\"\n            },\n            \"*\"\n          ) : null,\n          \":\"\n        ),\n        React.createElement(\n          \"span\",\n          {\n            className: \"description\"\n          },\n          field.description\n        ),\n        this.renderControl()\n      );\n    }\n\n    return render;\n  }();\n\n  return FieldPreview;\n}(Component);\n\nFieldPreview.propTypes = {\n  field: PropTypes.object,\n  // eslint-disable-line\n  onEdit: PropTypes.func\n};","map":{"version":3,"sources":["/imports/react-ui/settings/forms/components/FieldPreview.js"],"names":["module","export","FieldPreview","React","Component","importSync","v","PropTypes","renderSelect","options","attrs","map","option","index","renderInput","renderTextarea","renderRadioOrCheckInputs","type","props","onEdit","bind","field","renderControl","render","_id","text","isRequired","description","propTypes","object","func"],"mappings":"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","file":"/imports/react-ui/settings/forms/components/FieldPreview.js.map","sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class FieldPreview extends Component {\n  static renderSelect(options = [], attrs = {}) {\n    return (\n      <select {...attrs} className=\"form-control\">\n\n        {options.map((option, index) => <option key={index} value={option}>{option}</option>)}\n      </select>\n    );\n  }\n\n  static renderInput(attrs) {\n    return <input {...attrs} className=\"form-control\" />;\n  }\n\n  static renderTextarea(attrs) {\n    return <textarea {...attrs} className=\"form-control\" />;\n  }\n\n  static renderRadioOrCheckInputs(options, type) {\n    return (\n      <div className=\"check-control\">\n        {options.map((option, index) => (\n          <div key={index}>\n            {FieldPreview.renderInput({ type })}\n            <span>{option}</span>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onEdit = this.onEdit.bind(this);\n  }\n\n  onEdit() {\n    this.props.onEdit(this.props.field);\n  }\n\n  renderControl() {\n    const field = this.props.field;\n    const options = field.options || [];\n\n    switch (field.type) {\n      case 'select':\n        return FieldPreview.renderSelect(options);\n\n      case 'check':\n        return FieldPreview.renderRadioOrCheckInputs(options, 'checkbox');\n\n      case 'radio':\n        return FieldPreview.renderRadioOrCheckInputs(options, 'radio');\n\n      case 'textarea':\n        return FieldPreview.renderTextarea({});\n\n      default:\n        return FieldPreview.renderInput({ type: 'text' });\n    }\n  }\n\n  render() {\n    const { field } = this.props;\n\n    return (\n      <div className=\"form-group field-preview\" onClick={this.onEdit}>\n\n        <label className=\"control-label\" htmlFor={`prew-${field._id}`}>\n          {field.text}\n          {field.isRequired ? <span className=\"required\">*</span> : null}:\n        </label>\n\n        <span className=\"description\">{field.description}</span>\n\n        {this.renderControl()}\n      </div>\n    );\n  }\n}\n\nFieldPreview.propTypes = {\n  field: PropTypes.object, // eslint-disable-line\n  onEdit: PropTypes.func,\n};\n"]},"hash":"dab2c4aea2e43adcb994165130b8577c866b89f9"}
