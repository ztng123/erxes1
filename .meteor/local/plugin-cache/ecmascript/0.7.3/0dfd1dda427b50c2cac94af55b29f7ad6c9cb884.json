{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-dom","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactDom"}]},{"source":"react-bootstrap","imported":["FormControl"],"specifiers":[{"kind":"named","imported":"FormControl","local":"FormControl"}]},{"source":"/imports/api/engage/constants","imported":["EMAIL_CONTENT_PLACEHOLDER","EMAIL_CONTENT_CLASS"],"specifiers":[{"kind":"named","imported":"EMAIL_CONTENT_PLACEHOLDER","local":"EMAIL_CONTENT_PLACEHOLDER"},{"kind":"named","imported":"EMAIL_CONTENT_CLASS","local":"EMAIL_CONTENT_CLASS"}]},{"source":"./Editor","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Editor"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/engage/components/EmailForm.js","filenameRelative":"/imports/react-ui/engage/components/EmailForm.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/engage/components/EmailForm.js.map","sourceFileName":"/imports/react-ui/engage/components/EmailForm.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"EmailForm"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar ReactDom = void 0;\nmodule.importSync(\"react-dom\", {\n  \"default\": function (v) {\n    ReactDom = v;\n  }\n}, 2);\nvar FormControl = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  FormControl: function (v) {\n    FormControl = v;\n  }\n}, 3);\nvar EMAIL_CONTENT_PLACEHOLDER = void 0,\n    EMAIL_CONTENT_CLASS = void 0;\nmodule.importSync(\"/imports/api/engage/constants\", {\n  EMAIL_CONTENT_PLACEHOLDER: function (v) {\n    EMAIL_CONTENT_PLACEHOLDER = v;\n  },\n  EMAIL_CONTENT_CLASS: function (v) {\n    EMAIL_CONTENT_CLASS = v;\n  }\n}, 4);\nvar Editor = void 0;\nmodule.importSync(\"./Editor\", {\n  \"default\": function (v) {\n    Editor = v;\n  }\n}, 5);\nvar propTypes = {\n  message: PropTypes.object.isRequired,\n  templates: PropTypes.array.isRequired,\n  onContentChange: PropTypes.func.isRequired\n};\n\nvar EmailForm = function (_Component) {\n  (0, _inherits3.default)(EmailForm, _Component);\n\n  function EmailForm(props) {\n    (0, _classCallCheck3.default)(this, EmailForm);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    var message = props.message || {};\n    var email = message.email || {}; // current template\n\n    var currentTemplate = EMAIL_CONTENT_PLACEHOLDER;\n\n    if (email.templateId) {\n      currentTemplate = _this.findTemplate(email.templateId);\n    } // states\n\n\n    _this.state = {\n      currentTemplate: currentTemplate\n    }; // binds\n\n    _this.onContentChange = _this.onContentChange.bind(_this);\n    _this.onTemplateChange = _this.onTemplateChange.bind(_this);\n    return _this;\n  }\n\n  EmailForm.prototype.onTemplateChange = function () {\n    function onTemplateChange(e) {\n      this.setState({\n        currentTemplate: this.findTemplate(e.target.value)\n      });\n    }\n\n    return onTemplateChange;\n  }();\n\n  EmailForm.prototype.componentDidMount = function () {\n    function componentDidMount() {\n      this.renderBuilder();\n    }\n\n    return componentDidMount;\n  }();\n\n  EmailForm.prototype.componentDidUpdate = function () {\n    function componentDidUpdate(prevProps, prevState) {\n      // only after current template change\n      if (this.state.currentTemplate !== prevState.currentTemplate) {\n        this.renderBuilder();\n      }\n    }\n\n    return componentDidUpdate;\n  }();\n\n  EmailForm.prototype.findTemplate = function () {\n    function findTemplate(id) {\n      var template = this.props.templates.find(function (t) {\n        return t._id === id;\n      });\n      return template.content;\n    }\n\n    return findTemplate;\n  }();\n\n  EmailForm.prototype.renderBuilder = function () {\n    function renderBuilder() {\n      var contentContainer = document.getElementsByClassName(EMAIL_CONTENT_CLASS);\n      var message = this.props.message;\n      var email = message.email || {}; // render editor to content\n\n      if (contentContainer.length > 0) {\n        ReactDom.render(React.createElement(Editor, {\n          defaultValue: email.content,\n          onChange: this.onContentChange\n        }), contentContainer[0]);\n      }\n    }\n\n    return renderBuilder;\n  }();\n\n  EmailForm.prototype.onContentChange = function () {\n    function onContentChange(content) {\n      this.props.onContentChange(content);\n    }\n\n    return onContentChange;\n  }();\n\n  EmailForm.prototype.renderHeader = function () {\n    function renderHeader() {\n      var _props = this.props,\n          message = _props.message,\n          templates = _props.templates;\n      var email = message.email || {};\n      return React.createElement(\n        \"div\",\n        {\n          className: \"form-header\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"header-row\"\n          },\n          React.createElement(\n            \"span\",\n            null,\n            \"Email subject:\"\n          ),\n          React.createElement(FormControl, {\n            id: \"emailSubject\",\n            defaultValue: email.subject,\n            required: true\n          })\n        ),\n        React.createElement(\n          \"div\",\n          {\n            className: \"header-row\"\n          },\n          React.createElement(\n            \"span\",\n            null,\n            \"Email template:\"\n          ),\n          React.createElement(\n            FormControl,\n            {\n              id: \"emailTemplateId\",\n              componentClass: \"select\",\n              onChange: this.onTemplateChange,\n              defaultValue: email.templateId\n            },\n            React.createElement(\"option\", null),\n            templates.map(function (t) {\n              return React.createElement(\n                \"option\",\n                {\n                  key: t._id,\n                  value: t._id\n                },\n                t.name\n              );\n            })\n          )\n        )\n      );\n    }\n\n    return renderHeader;\n  }();\n\n  EmailForm.prototype.render = function () {\n    function render() {\n      return React.createElement(\n        \"div\",\n        null,\n        this.renderHeader(),\n        React.createElement(\n          \"div\",\n          {\n            className: \"form-content\"\n          },\n          React.createElement(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: this.state.currentTemplate\n            }\n          })\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return EmailForm;\n}(Component);\n\nEmailForm.propTypes = propTypes;\nmodule.export(\"default\", exports.default = EmailForm);","map":{"version":3,"sources":["/imports/react-ui/engage/components/EmailForm.js"],"names":["React","Component","module","importSync","v","PropTypes","ReactDom","FormControl","EMAIL_CONTENT_PLACEHOLDER","EMAIL_CONTENT_CLASS","Editor","propTypes","message","object","isRequired","templates","array","onContentChange","func","EmailForm","props","email","currentTemplate","templateId","findTemplate","state","bind","onTemplateChange","e","setState","target","value","componentDidMount","renderBuilder","componentDidUpdate","prevProps","prevState","id","template","find","t","_id","content","contentContainer","document","getElementsByClassName","length","render","renderHeader","subject","map","name","__html","export","exports","default"],"mappings":"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","file":"/imports/react-ui/engage/components/EmailForm.js.map","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDom from 'react-dom';\nimport { FormControl } from 'react-bootstrap';\n\nimport { EMAIL_CONTENT_PLACEHOLDER, EMAIL_CONTENT_CLASS } from '/imports/api/engage/constants';\n\nimport Editor from './Editor';\n\nconst propTypes = {\n  message: PropTypes.object.isRequired,\n  templates: PropTypes.array.isRequired,\n  onContentChange: PropTypes.func.isRequired,\n};\n\nclass EmailForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const message = props.message || {};\n    const email = message.email || {};\n\n    // current template\n    let currentTemplate = EMAIL_CONTENT_PLACEHOLDER;\n\n    if (email.templateId) {\n      currentTemplate = this.findTemplate(email.templateId);\n    }\n\n    // states\n    this.state = { currentTemplate };\n\n    // binds\n    this.onContentChange = this.onContentChange.bind(this);\n    this.onTemplateChange = this.onTemplateChange.bind(this);\n  }\n\n  onTemplateChange(e) {\n    this.setState({ currentTemplate: this.findTemplate(e.target.value) });\n  }\n\n  componentDidMount() {\n    this.renderBuilder();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // only after current template change\n    if (this.state.currentTemplate !== prevState.currentTemplate) {\n      this.renderBuilder();\n    }\n  }\n\n  findTemplate(id) {\n    const template = this.props.templates.find(t => t._id === id);\n    return template.content;\n  }\n\n  renderBuilder() {\n    const contentContainer = document.getElementsByClassName(EMAIL_CONTENT_CLASS);\n    const { message } = this.props;\n    const email = message.email || {};\n\n    // render editor to content\n    if (contentContainer.length > 0) {\n      ReactDom.render(\n        <Editor defaultValue={email.content} onChange={this.onContentChange} />,\n        contentContainer[0],\n      );\n    }\n  }\n\n  onContentChange(content) {\n    this.props.onContentChange(content);\n  }\n\n  renderHeader() {\n    const { message, templates } = this.props;\n    const email = message.email || {};\n\n    return (\n      <div className=\"form-header\">\n        <div className=\"header-row\">\n          <span>Email subject:</span>\n          <FormControl id=\"emailSubject\" defaultValue={email.subject} required />\n        </div>\n\n        <div className=\"header-row\">\n          <span>Email template:</span>\n          <FormControl\n            id=\"emailTemplateId\"\n            componentClass=\"select\"\n            onChange={this.onTemplateChange}\n            defaultValue={email.templateId}\n          >\n            <option />\n            {templates.map(t => (\n              <option key={t._id} value={t._id}>\n                {t.name}\n              </option>\n            ))}\n          </FormControl>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderHeader()}\n        <div className=\"form-content\">\n          <div dangerouslySetInnerHTML={{ __html: this.state.currentTemplate }} />\n        </div>\n      </div>\n    );\n  }\n}\n\nEmailForm.propTypes = propTypes;\n\nexport default EmailForm;\n"]},"hash":"0dfd1dda427b50c2cac94af55b29f7ad6c9cb884"}
