{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"meteor/kadira:flow-router","imported":["FlowRouter"],"specifiers":[{"kind":"named","imported":"FlowRouter","local":"FlowRouter"}]},{"source":"react-bootstrap","imported":["FormGroup","ControlLabel","FormControl","Button","Well"],"specifiers":[{"kind":"named","imported":"FormGroup","local":"FormGroup"},{"kind":"named","imported":"ControlLabel","local":"ControlLabel"},{"kind":"named","imported":"FormControl","local":"FormControl"},{"kind":"named","imported":"Button","local":"Button"},{"kind":"named","imported":"Well","local":"Well"}]},{"source":"meteor/erxes-notifier","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Alert"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/auth/components/SignUp.js","filenameRelative":"/imports/react-ui/auth/components/SignUp.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/auth/components/SignUp.js.map","sourceFileName":"/imports/react-ui/auth/components/SignUp.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"SignUp"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.importSync(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar FlowRouter = void 0;\nmodule.importSync(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 2);\nvar FormGroup = void 0,\n    ControlLabel = void 0,\n    FormControl = void 0,\n    Button = void 0,\n    Well = void 0;\nmodule.importSync(\"react-bootstrap\", {\n  FormGroup: function (v) {\n    FormGroup = v;\n  },\n  ControlLabel: function (v) {\n    ControlLabel = v;\n  },\n  FormControl: function (v) {\n    FormControl = v;\n  },\n  Button: function (v) {\n    Button = v;\n  },\n  Well: function (v) {\n    Well = v;\n  }\n}, 3);\nvar Alert = void 0;\nmodule.importSync(\"meteor/erxes-notifier\", {\n  \"default\": function (v) {\n    Alert = v;\n  }\n}, 4);\nvar propTypes = {\n  createUser: PropTypes.func.isRequired\n};\n\nvar SignUp = function (_Component) {\n  (0, _inherits3.default)(SignUp, _Component);\n\n  function SignUp(props) {\n    (0, _classCallCheck3.default)(this, SignUp);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.state = {\n      username: '',\n      email: '',\n      password: '',\n      fullName: ''\n    };\n    _this.createUser = _this.createUser.bind(_this);\n    _this.handleUsernameChange = _this.handleUsernameChange.bind(_this);\n    _this.handleEmailChange = _this.handleEmailChange.bind(_this);\n    _this.handlePasswordChange = _this.handlePasswordChange.bind(_this);\n    _this.handleFullNameChange = _this.handleFullNameChange.bind(_this);\n    return _this;\n  }\n\n  SignUp.prototype.createUser = function () {\n    function createUser(e) {\n      e.preventDefault();\n      var _state = this.state,\n          username = _state.username,\n          email = _state.email,\n          password = _state.password,\n          fullName = _state.fullName;\n      var user = {\n        username: username,\n        email: email,\n        password: password,\n        fullName: fullName\n      };\n      this.props.createUser(user, function (err) {\n        if (err) {\n          return Alert.error('Could not sign up', err.reason);\n        }\n\n        Alert.success('Successfully signed up', 'Please check your email');\n        return FlowRouter.go('/');\n      });\n    }\n\n    return createUser;\n  }();\n\n  SignUp.prototype.handleEmailChange = function () {\n    function handleEmailChange(e) {\n      e.preventDefault();\n      this.setState({\n        email: e.target.value\n      });\n    }\n\n    return handleEmailChange;\n  }();\n\n  SignUp.prototype.handleUsernameChange = function () {\n    function handleUsernameChange(e) {\n      e.preventDefault();\n      this.setState({\n        username: e.target.value\n      });\n    }\n\n    return handleUsernameChange;\n  }();\n\n  SignUp.prototype.handlePasswordChange = function () {\n    function handlePasswordChange(e) {\n      e.preventDefault();\n      this.setState({\n        password: e.target.value\n      });\n    }\n\n    return handlePasswordChange;\n  }();\n\n  SignUp.prototype.handleFullNameChange = function () {\n    function handleFullNameChange(e) {\n      e.preventDefault();\n      this.setState({\n        fullName: e.target.value\n      });\n    }\n\n    return handleFullNameChange;\n  }();\n\n  SignUp.prototype.render = function () {\n    function render() {\n      return React.createElement(\n        Well,\n        null,\n        React.createElement(\n          \"h1\",\n          null,\n          \"Sign Up\"\n        ),\n        React.createElement(\n          \"form\",\n          {\n            onSubmit: this.createUser\n          },\n          React.createElement(\n            FormGroup,\n            null,\n            React.createElement(\n              ControlLabel,\n              null,\n              \"Email\"\n            ),\n            React.createElement(FormControl, {\n              type: \"text\",\n              placeholder: \"Email\",\n              value: this.state.email,\n              onChange: this.handleEmailChange,\n              required: true\n            })\n          ),\n          React.createElement(\n            FormGroup,\n            null,\n            React.createElement(\n              ControlLabel,\n              null,\n              \"Username\"\n            ),\n            React.createElement(FormControl, {\n              type: \"text\",\n              placeholder: \"Username\",\n              value: this.state.username,\n              onChange: this.handleUsernameChange\n            })\n          ),\n          React.createElement(\n            FormGroup,\n            null,\n            React.createElement(\n              ControlLabel,\n              null,\n              \"Full name\"\n            ),\n            React.createElement(FormControl, {\n              type: \"text\",\n              placeholder: \"Full name\",\n              value: this.state.fullName,\n              onChange: this.handleFullNameChange\n            })\n          ),\n          React.createElement(\n            FormGroup,\n            null,\n            React.createElement(\n              ControlLabel,\n              null,\n              \"Password\"\n            ),\n            React.createElement(FormControl, {\n              type: \"password\",\n              placeholder: \"Password\",\n              value: this.state.password,\n              onChange: this.handlePasswordChange,\n              required: true\n            })\n          ),\n          React.createElement(\n            Button,\n            {\n              type: \"submit\"\n            },\n            \"Sign up\"\n          )\n        ),\n        React.createElement(\n          \"p\",\n          null,\n          React.createElement(\n            \"a\",\n            {\n              href: FlowRouter.path('auth/signIn')\n            },\n            \"Already have an account?\"\n          )\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return SignUp;\n}(Component);\n\nSignUp.propTypes = propTypes;\nmodule.export(\"default\", exports.default = SignUp);","map":{"version":3,"sources":["/imports/react-ui/auth/components/SignUp.js"],"names":["React","Component","module","importSync","v","PropTypes","FlowRouter","FormGroup","ControlLabel","FormControl","Button","Well","Alert","propTypes","createUser","func","isRequired","SignUp","props","state","username","email","password","fullName","bind","handleUsernameChange","handleEmailChange","handlePasswordChange","handleFullNameChange","e","preventDefault","user","err","error","reason","success","go","setState","target","value","render","path","export","exports","default"],"mappings":"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","file":"/imports/react-ui/auth/components/SignUp.js.map","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { FormGroup, ControlLabel, FormControl, Button, Well } from 'react-bootstrap';\nimport Alert from 'meteor/erxes-notifier';\n\nconst propTypes = {\n  createUser: PropTypes.func.isRequired,\n};\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      fullName: '',\n    };\n\n    this.createUser = this.createUser.bind(this);\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleFullNameChange = this.handleFullNameChange.bind(this);\n  }\n\n  createUser(e) {\n    e.preventDefault();\n\n    const { username, email, password, fullName } = this.state;\n    const user = { username, email, password, fullName };\n\n    this.props.createUser(user, err => {\n      if (err) {\n        return Alert.error('Could not sign up', err.reason);\n      }\n\n      Alert.success('Successfully signed up', 'Please check your email');\n      return FlowRouter.go('/');\n    });\n  }\n\n  handleEmailChange(e) {\n    e.preventDefault();\n    this.setState({ email: e.target.value });\n  }\n\n  handleUsernameChange(e) {\n    e.preventDefault();\n    this.setState({ username: e.target.value });\n  }\n\n  handlePasswordChange(e) {\n    e.preventDefault();\n    this.setState({ password: e.target.value });\n  }\n\n  handleFullNameChange(e) {\n    e.preventDefault();\n    this.setState({ fullName: e.target.value });\n  }\n\n  render() {\n    return (\n      <Well>\n        <h1>Sign Up</h1>\n        <form onSubmit={this.createUser}>\n          <FormGroup>\n            <ControlLabel>Email</ControlLabel>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Email\"\n              value={this.state.email}\n              onChange={this.handleEmailChange}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <ControlLabel>Username</ControlLabel>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.handleUsernameChange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <ControlLabel>Full name</ControlLabel>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Full name\"\n              value={this.state.fullName}\n              onChange={this.handleFullNameChange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <ControlLabel>Password</ControlLabel>\n            <FormControl\n              type=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handlePasswordChange}\n              required\n            />\n          </FormGroup>\n          <Button type=\"submit\">\n            Sign up\n          </Button>\n        </form>\n        <p>\n          <a href={FlowRouter.path('auth/signIn')}>Already have an account?</a>\n        </p>\n      </Well>\n    );\n  }\n}\n\nSignUp.propTypes = propTypes;\n\nexport default SignUp;\n"]},"hash":"2bc4aadca58626f6edb2f5ad1fbe4b6cec107284"}
