{"metadata":{"usedHelpers":["extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"react","imported":["default","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"react-apollo","imported":["compose"],"specifiers":[{"kind":"named","imported":"compose","local":"compose"}]},{"source":"meteor/erxes-notifier","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Alert"}]},{"source":"/imports/react-ui/common","imported":["pagination","Loading"],"specifiers":[{"kind":"named","imported":"pagination","local":"pagination"},{"kind":"named","imported":"Loading","local":"Loading"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/settings/utils/commonListComposer.js","filenameRelative":"/imports/react-ui/settings/utils/commonListComposer.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/settings/utils/commonListComposer.js.map","sourceFileName":"/imports/react-ui/settings/utils/commonListComposer.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"commonListComposer"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _this = this;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar React = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar compose = void 0;\nmodule.importSync(\"react-apollo\", {\n  compose: function (v) {\n    compose = v;\n  }\n}, 2);\nvar Alert = void 0;\nmodule.importSync(\"meteor/erxes-notifier\", {\n  \"default\": function (v) {\n    Alert = v;\n  }\n}, 3);\nvar pagination = void 0,\n    Loading = void 0;\nmodule.importSync(\"/imports/react-ui/common\", {\n  pagination: function (v) {\n    pagination = v;\n  },\n  Loading: function (v) {\n    Loading = v;\n  }\n}, 4);\n\nvar commonListComposer = function (options) {\n  var name = options.name,\n      gqlListQuery = options.gqlListQuery,\n      gqlTotalCountQuery = options.gqlTotalCountQuery,\n      ListComponent = options.ListComponent;\n\n  var ListContainer = function (props) {\n    var listQuery = props.listQuery,\n        totalCountQuery = props.totalCountQuery,\n        queryParams = props.queryParams;\n\n    if (totalCountQuery.loading || listQuery.loading) {\n      return React.createElement(Loading, {\n        title: \"Settings\"\n      });\n    }\n\n    var capsName = name.charAt(0).toUpperCase() + name.substr(1);\n    var totalCount = totalCountQuery[\"total\" + capsName + \"Count\"];\n    var objects = listQuery[name];\n\n    var _pagination = pagination(queryParams, totalCount),\n        loadMore = _pagination.loadMore,\n        hasMore = _pagination.hasMore; // remove action\n\n\n    var remove = function (id) {\n      if (!confirm('Are you sure?')) return;\n      Meteor.call(name + \".remove\", id, function (error) {\n        if (!error) {\n          // update queries\n          listQuery.refetch();\n          totalCountQuery.refetch();\n        }\n\n        if (error) {\n          return Alert.error(error.reason);\n        }\n\n        return Alert.success('Congrats', 'Successfully deleted.');\n      });\n    }; // create or update action\n\n\n    var save = function (params, callback, object) {\n      var methodName = name + \".add\"; // if edit mode\n\n      if (object) {\n        methodName = name + \".edit\";\n        params.id = object._id;\n      }\n\n      Meteor.call(methodName, params, function (error) {\n        if (error) return Alert.error(error.reason); // update queries\n\n        listQuery.refetch();\n        totalCountQuery.refetch();\n        Alert.success('Congrats');\n        callback(error);\n      });\n    };\n\n    var updatedProps = (0, _extends3.default)({}, _this.props, {\n      refetch: listQuery.refetch,\n      objects: objects,\n      loadMore: loadMore,\n      hasMore: hasMore,\n      save: save,\n      remove: remove\n    });\n    return React.createElement(ListComponent, updatedProps);\n  };\n\n  ListContainer.propTypes = {\n    totalCountQuery: PropTypes.object,\n    listQuery: PropTypes.object,\n    queryParams: PropTypes.object\n  };\n  return compose(gqlListQuery, gqlTotalCountQuery)(ListContainer);\n};\n\nmodule.export(\"default\", exports.default = commonListComposer);","map":{"version":3,"sources":["/imports/react-ui/settings/utils/commonListComposer.js"],"names":["Meteor","module","importSync","v","React","PropTypes","compose","Alert","pagination","Loading","commonListComposer","name","options","gqlListQuery","gqlTotalCountQuery","ListComponent","ListContainer","listQuery","props","totalCountQuery","queryParams","loading","capsName","charAt","toUpperCase","substr","totalCount","objects","loadMore","hasMore","remove","confirm","call","id","error","refetch","reason","success","save","params","callback","object","methodName","_id","updatedProps","propTypes","export","exports","default"],"mappings":"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","file":"/imports/react-ui/settings/utils/commonListComposer.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport React, { PropTypes } from 'react';\nimport { compose } from 'react-apollo';\nimport Alert from 'meteor/erxes-notifier';\nimport { pagination, Loading } from '/imports/react-ui/common';\n\nconst commonListComposer = options => {\n  const { name, gqlListQuery, gqlTotalCountQuery, ListComponent } = options;\n\n  const ListContainer = props => {\n    const { listQuery, totalCountQuery, queryParams } = props;\n\n    if (totalCountQuery.loading || listQuery.loading) {\n      return <Loading title=\"Settings\" />;\n    }\n\n    const capsName = name.charAt(0).toUpperCase() + name.substr(1);\n    const totalCount = totalCountQuery[`total${capsName}Count`];\n    const objects = listQuery[name];\n\n    const { loadMore, hasMore } = pagination(queryParams, totalCount);\n\n    // remove action\n    const remove = id => {\n      if (!confirm('Are you sure?')) return;\n\n      Meteor.call(`${name}.remove`, id, error => {\n        if (!error) {\n          // update queries\n          listQuery.refetch();\n          totalCountQuery.refetch();\n        }\n\n        if (error) {\n          return Alert.error(error.reason);\n        }\n\n        return Alert.success('Congrats', 'Successfully deleted.');\n      });\n    };\n\n    // create or update action\n    const save = (params, callback, object) => {\n      let methodName = `${name}.add`;\n\n      // if edit mode\n      if (object) {\n        methodName = `${name}.edit`;\n        params.id = object._id;\n      }\n\n      Meteor.call(methodName, params, error => {\n        if (error) return Alert.error(error.reason);\n\n        // update queries\n        listQuery.refetch();\n        totalCountQuery.refetch();\n\n        Alert.success('Congrats');\n\n        callback(error);\n      });\n    };\n\n    const updatedProps = {\n      ...this.props,\n      refetch: listQuery.refetch,\n      objects,\n      loadMore,\n      hasMore,\n      save,\n      remove,\n    };\n\n    return <ListComponent {...updatedProps} />;\n  };\n\n  ListContainer.propTypes = {\n    totalCountQuery: PropTypes.object,\n    listQuery: PropTypes.object,\n    queryParams: PropTypes.object,\n  };\n\n  return compose(gqlListQuery, gqlTotalCountQuery)(ListContainer);\n};\n\nexport default commonListComposer;\n"]},"hash":"4f80fb4dd5a467b5742d4d90b2ed5a737eda5719"}
