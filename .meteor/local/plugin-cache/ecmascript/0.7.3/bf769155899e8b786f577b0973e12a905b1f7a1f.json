{"metadata":{"usedHelpers":["extends","taggedTemplateLiteralLoose","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"react","imported":["default","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"react-apollo","imported":["compose","gql","graphql"],"specifiers":[{"kind":"named","imported":"compose","local":"compose"},{"kind":"named","imported":"gql","local":"gql"},{"kind":"named","imported":"graphql","local":"graphql"}]},{"source":"meteor/erxes-notifier","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Alert"}]},{"source":"../components","imported":["MessengerAppearance"],"specifiers":[{"kind":"named","imported":"MessengerAppearance","local":"MessengerAppearance"}]},{"source":"/imports/react-ui/common","imported":["Loading"],"specifiers":[{"kind":"named","imported":"Loading","local":"Loading"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/react-ui/settings/integrations/containers/MessengerAppearance.js","filenameRelative":"/imports/react-ui/settings/integrations/containers/MessengerAppearance.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/react-ui/settings/integrations/containers/MessengerAppearance.js.map","sourceFileName":"/imports/react-ui/settings/integrations/containers/MessengerAppearance.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"MessengerAppearance"},"ignored":false,"code":"var _taggedTemplateLiteralLoose2 = require(\"babel-runtime/helpers/taggedTemplateLiteralLoose\");\n\nvar _taggedTemplateLiteralLoose3 = _interopRequireDefault(_taggedTemplateLiteralLoose2);\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _templateObject = (0, _taggedTemplateLiteralLoose3.default)([\"\\n      query integrationDetail($_id: String!) {\\n        integrationDetail(_id: $_id) {\\n          _id\\n          name\\n          uiOptions\\n        }\\n      }\\n    \"], [\"\\n      query integrationDetail($_id: String!) {\\n        integrationDetail(_id: $_id) {\\n          _id\\n          name\\n          uiOptions\\n        }\\n      }\\n    \"]);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar React = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar compose = void 0,\n    gql = void 0,\n    graphql = void 0;\nmodule.importSync(\"react-apollo\", {\n  compose: function (v) {\n    compose = v;\n  },\n  gql: function (v) {\n    gql = v;\n  },\n  graphql: function (v) {\n    graphql = v;\n  }\n}, 2);\nvar Alert = void 0;\nmodule.importSync(\"meteor/erxes-notifier\", {\n  \"default\": function (v) {\n    Alert = v;\n  }\n}, 3);\nvar MessengerAppearance = void 0;\nmodule.importSync(\"../components\", {\n  MessengerAppearance: function (v) {\n    MessengerAppearance = v;\n  }\n}, 4);\nvar Loading = void 0;\nmodule.importSync(\"/imports/react-ui/common\", {\n  Loading: function (v) {\n    Loading = v;\n  }\n}, 5);\n\nvar MessengerAppearanceContainer = function (props) {\n  var integrationDetailQuery = props.integrationDetailQuery;\n\n  if (integrationDetailQuery.loading) {\n    return React.createElement(Loading, {\n      title: \"Integrations\",\n      spin: true\n    });\n  }\n\n  var integration = integrationDetailQuery.integrationDetail;\n\n  var save = function (doc) {\n    Meteor.call('integrations.saveMessengerApperance', {\n      _id: integration._id,\n      doc: doc\n    }, function (error) {\n      if (error) return Alert.error(error.reason);\n      return Alert.success('Successfully saved.');\n    });\n  };\n\n  var updatedProps = (0, _extends3.default)({}, props, {\n    prevOptions: integration.uiOptions || {},\n    save: save,\n    user: Meteor.user()\n  });\n  return React.createElement(MessengerAppearance, updatedProps);\n};\n\nMessengerAppearanceContainer.propTypes = {\n  integrationDetailQuery: PropTypes.object\n};\nmodule.export(\"default\", exports.default = compose(graphql(gql(_templateObject), {\n  name: 'integrationDetailQuery',\n  options: function (_ref) {\n    var integrationId = _ref.integrationId;\n    return {\n      variables: {\n        _id: integrationId\n      },\n      fetchPolicy: 'network-only'\n    };\n  }\n}))(MessengerAppearanceContainer));","map":{"version":3,"sources":["/imports/react-ui/settings/integrations/containers/MessengerAppearance.js"],"names":["Meteor","module","importSync","v","React","PropTypes","compose","gql","graphql","Alert","MessengerAppearance","Loading","MessengerAppearanceContainer","integrationDetailQuery","props","loading","integration","integrationDetail","save","call","_id","doc","error","reason","success","updatedProps","prevOptions","uiOptions","user","propTypes","object","export","exports","default","name","options","integrationId","variables","fetchPolicy"],"mappings":";;;;;;;;;;;;AAAA,IAAIA,eAAJ;AAAWC,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACF,UAAO,UAASG,CAAT,EAAW;AAACH,aAAOG,CAAP;AAAS;AAA7B,CAAlC,EAAiE,CAAjE;AAAoE,IAAIC,cAAJ;AAAA,IAAUC,kBAAV;AAAoBJ,OAAOC,UAAP,CAAkB,OAAlB,EAA0B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACC,YAAMD,CAAN;AAAQ,GAA7B;AAA8BE,aAAU,UAASF,CAAT,EAAW;AAACE,gBAAUF,CAAV;AAAY;AAAhE,CAA1B,EAA4F,CAA5F;AAA+F,IAAIG,gBAAJ;AAAA,IAAYC,YAAZ;AAAA,IAAgBC,gBAAhB;AAAwBP,OAAOC,UAAP,CAAkB,cAAlB,EAAiC;AAACI,WAAQ,UAASH,CAAT,EAAW;AAACG,cAAQH,CAAR;AAAU,GAA/B;AAAgCI,OAAI,UAASJ,CAAT,EAAW;AAACI,UAAIJ,CAAJ;AAAM,GAAtD;AAAuDK,WAAQ,UAASL,CAAT,EAAW;AAACK,cAAQL,CAAR;AAAU;AAArF,CAAjC,EAAwH,CAAxH;AAA2H,IAAIM,cAAJ;AAAUR,OAAOC,UAAP,CAAkB,uBAAlB,EAA0C;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACM,YAAMN,CAAN;AAAQ;AAA7B,CAA1C,EAAyE,CAAzE;AAA4E,IAAIO,4BAAJ;AAAwBT,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACQ,uBAAoB,UAASP,CAAT,EAAW;AAACO,0BAAoBP,CAApB;AAAsB;AAAvD,CAAlC,EAA2F,CAA3F;AAA8F,IAAIQ,gBAAJ;AAAYV,OAAOC,UAAP,CAAkB,0BAAlB,EAA6C;AAACS,WAAQ,UAASR,CAAT,EAAW;AAACQ,cAAQR,CAAR;AAAU;AAA/B,CAA7C,EAA8E,CAA9E;;AAO7iB,IAAMS,+BAA+B,iBAAS;AAAA,MACpCC,sBADoC,GACTC,KADS,CACpCD,sBADoC;;AAG5C,MAAIA,uBAAuBE,OAA3B,EAAoC;AAClC,WAAO,oBAAC,OAAD;AAAS,aAAM,cAAf;AAA8B;AAA9B,MAAP;AACD;;AAED,MAAMC,cAAcH,uBAAuBI,iBAA3C;;AAEA,MAAMC,OAAO,eAAO;AAClBlB,WAAOmB,IAAP,CAAY,qCAAZ,EAAmD;AAAEC,WAAKJ,YAAYI,GAAnB;AAAwBC;AAAxB,KAAnD,EAAkF,iBAAS;AACzF,UAAIC,KAAJ,EAAW,OAAOb,MAAMa,KAAN,CAAYA,MAAMC,MAAlB,CAAP;AAEX,aAAOd,MAAMe,OAAN,CAAc,qBAAd,CAAP;AACD,KAJD;AAKD,GAND;;AAQA,MAAMC,0CACDX,KADC;AAEJY,iBAAaV,YAAYW,SAAZ,IAAyB,EAFlC;AAGJT,cAHI;AAIJU,UAAM5B,OAAO4B,IAAP;AAJF,IAAN;AAOA,SAAO,oBAAC,mBAAD,EAAyBH,YAAzB,CAAP;AACD,CAzBD;;AA2BAb,6BAA6BiB,SAA7B,GAAyC;AACvChB,0BAAwBR,UAAUyB;AADK,CAAzC;AAlCA7B,OAAO8B,MAAP,CAAc,SAAd,EAAwBC,QAAQC,OAAR,GAsCT3B,QACbE,QACED,GADF,mBAUE;AACE2B,QAAM,wBADR;AAEEC,WAAS;AAAA,QAAGC,aAAH,QAAGA,aAAH;AAAA,WAAwB;AAC/BC,iBAAW;AACTjB,aAAKgB;AADI,OADoB;AAI/BE,mBAAa;AAJkB,KAAxB;AAAA;AAFX,CAVF,CADa,EAqBb1B,4BArBa,CAtCf","file":"/imports/react-ui/settings/integrations/containers/MessengerAppearance.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport React, { PropTypes } from 'react';\nimport { compose, gql, graphql } from 'react-apollo';\nimport Alert from 'meteor/erxes-notifier';\nimport { MessengerAppearance } from '../components';\nimport { Loading } from '/imports/react-ui/common';\n\nconst MessengerAppearanceContainer = props => {\n  const { integrationDetailQuery } = props;\n\n  if (integrationDetailQuery.loading) {\n    return <Loading title=\"Integrations\" spin />;\n  }\n\n  const integration = integrationDetailQuery.integrationDetail;\n\n  const save = doc => {\n    Meteor.call('integrations.saveMessengerApperance', { _id: integration._id, doc }, error => {\n      if (error) return Alert.error(error.reason);\n\n      return Alert.success('Successfully saved.');\n    });\n  };\n\n  const updatedProps = {\n    ...props,\n    prevOptions: integration.uiOptions || {},\n    save,\n    user: Meteor.user(),\n  };\n\n  return <MessengerAppearance {...updatedProps} />;\n};\n\nMessengerAppearanceContainer.propTypes = {\n  integrationDetailQuery: PropTypes.object,\n};\n\nexport default compose(\n  graphql(\n    gql`\n      query integrationDetail($_id: String!) {\n        integrationDetail(_id: $_id) {\n          _id\n          name\n          uiOptions\n        }\n      }\n    `,\n    {\n      name: 'integrationDetailQuery',\n      options: ({ integrationId }) => ({\n        variables: {\n          _id: integrationId,\n        },\n        fetchPolicy: 'network-only',\n      }),\n    },\n  ),\n)(MessengerAppearanceContainer);\n"]},"hash":"bf769155899e8b786f577b0973e12a905b1f7a1f"}
